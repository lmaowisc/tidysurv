---
title: "Tidy Survival Analysis: Applying Râ€™s Tidyverse to Survival Data"
subtitle: "Module 3. Nonparametric Survival Analysis"
css: style.css
# csl: apa.csl
author:
  name: Lu Mao
  affiliations: 
    - name: Department of Biostatistics & Medical Informatics
    - University of Wisconsin-Madison
    - Aug 2, 2025
  email: lmao@biostat.wisc.edu
format: 
  revealjs:
    theme: simple
    # auto-stretch: false
    # incremental: true
    toc: true
    toc-depth: 1
    # small: true
editor: visual
execute: 
  eval: false
  echo: true
  # cache: true
include-in-header:
  - text: |
      <style type="text/css">
      ul li ul li {
        font-size: 0.78em;
      }
      </style>
# bibliography: references.bib
# title-slide-attributes: 
#   data-background-image: jsm_logo.png
#   data-background-size: 20%
#   data-background-position: 2% 2%
---


# Tabulating Survival Estimates

## GBC: Relapse-Free Survival

- Use `dplyr` to get time-to-first event

```{r}
#| eval: true
library(tidyverse) # Load tidyverse packages
# Load mortality + relapse data
gbc <- read.table("data/gbc.txt", header = TRUE)
df <- gbc |>  # calculate time to first event (relapse or death)
  group_by(id) |> # group by id
  arrange(time) |> # sort rows by time
  slice(1) |>      # get the first row within each id
  ungroup()     # remove grouping
# Display the first few rows of the data
head(df) 
```

## Raw Output from `Survfit()`

- **KM estimates by hormone therapy**

```{r}
#| eval: true
library(survival) # Load survival package
# Fit KM estimates by hormone group
km_fit <- survfit(Surv(time, status) ~ hormone, data = df)
# summarize the KM fit object
summary(km_fit, times = c(6, 12, 24, 36))
```

## Extracting Survival Estimates

- **Elements in `survfit` object**
    - `time`: time points of the survival estimates
    - `surv`: survival probabilities at the time points
    - `lower, upper`: confidence intervals for the survival estimates
    - `strata`: stratification information (if applicable)

::: {.callout-note appearance="minimal"}
## Exercise
Create a table of survival estimates with 95\% confidence intervals at 6, 12, 24, and 36 months for each hormone therapy group using `dplyr` and `tibble`.
:::

## Format by `gtsummary::tbl_survfit()` 

- **Main function: `tbl_survfit()`**
    - Takes on `survfit` object
    - Creates a table of survival estimates with confidence intervals
    - Automatically handles stratification and time points
```{r}
#| eval: true
library(gtsummary) # Load gtsummary package
# Create a table of survival estimates
tbl_survfit(km_fit,                        # `survfit` object
             label = "Hormone",           # Row label: "Hormone"
             times = c(6, 12, 24, 36),     # Time points for estimates
             label_header = "Month {time}" # Column label: "Month xx"
             ) 
```

## Grouping by Multiple Variables

- **Pass raw data to `tbl_survfit()`**

```{r}
#| eval: true
df |>                                       # Use raw data
  tbl_survfit(y = Surv(time, status),       # Survival object
              include = c(meno, grade),     # Include variables: menopause, grade
              label = list(meno = "Menopause", # Row labels
                          grade = "Tumor grade"),
              times = c(6, 12, 24, 36),     # Time points for estimates
              label_header = "Month {time}" # Column label: "Month xx"
             ) 
```



## Customizing the Table

- **Customize table appearance**
    - `label_header`: change column names
    - `label`: change row labels
    - `statistic`: customize statistics displayed

- For more on `gtsummary` table customization, see the [gtsummary documentation](https://www.danieldsjoberg.com/gtsummary/articles/tables.html).



## Tabulating Quantile Estimates

- **Quantile estimates**: Median survival time, quartiles, etc.
    - Specify `probs` argument in `tbl_survfit()`



# Visualizing Kaplan-Meier curves

# Tidy analysis of competing risks

# Summary

## Key Takeaways


