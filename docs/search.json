[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to the workshop",
    "section": "",
    "text": "This site presents materials for the short course Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data to be taught at the 2025 Joint Statistical Meetings (JSM) in Nashville, TN.\nThis course aims to equip participants with the skills to apply tidy principles to survival analysis, fostering a more organized and reproducible approach to data analysis in R.\nIn a tidyverse approach, we apply consistent data workflows to survival analysis tasks. This means using tibble data frames and dplyr for data preparation, keeping outputs tidy (one row per observation or estimate), and leveraging ggplot2 for visualization. For example, one might create the survival outcome as a new column using Surv(time, status) within a dplyr pipeline, fit models and then use broom to tidy() model outputs into data frames, and produce publication-quality plots with ggplot2 or ggsurvfit. The goal is a reproducible workflow where raw data are transformed, analyzed, and visualized seamlessly.\nTarget Audience: Statisticians, data analysts, researchers, and students interested in survival analysis who are familiar with R and the Tidyverse."
  },
  {
    "objectID": "index.html#time-and-place",
    "href": "index.html#time-and-place",
    "title": "Welcome to the workshop",
    "section": "Time and Place",
    "text": "Time and Place\n\nSunday, Aug 3: 8:30 AM - 12:30 PM\nMusic City Center | Room: CC-110A"
  },
  {
    "objectID": "index.html#instructor-profile",
    "href": "index.html#instructor-profile",
    "title": "Welcome to the workshop",
    "section": "Instructor Profile",
    "text": "Instructor Profile\n\nLu Mao, PhD\n\nAssociate Professor of Biostatistics at UW-Madison\nMethodologic research\n\nR01HL149875: Novel Statistical Methods for Complex Time-to-Event Data in Cardiovascular Clinical Trials (12/01/2019 – 07/31/2028)\nDMS2015526: Randomized Trials with Non-Compliance (07/01/2020 – 06/30/2024)\n\nCollaborative research\n\nCardiovascular disease, cancer, radiology, behavioral health interventions\n\nTeaching\n\nSurvival Analysis: Theory and Methods (UW; 2020 - 2025)\n\nEditorial service\n\nStatistical Editor, JACC Journals\nAssociate Editor, Statistics for Biopharmaceutical Research"
  },
  {
    "objectID": "index.html#learning-outcomes",
    "href": "index.html#learning-outcomes",
    "title": "Welcome to the workshop",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nUnderstand the fundamentals of survival analysis, including key concepts such as censored data, survival functions, and hazard functions.\nUtilize R’s Tidyverse packages to manipulate, visualize, and analyze survival data.\nFit and interpret survival models using the survival and survminer packages in conjunction with Tidyverse functions.\nCreate clear and informative visualizations of survival data, including Kaplan-Meier curves and survival distributions.\nCommunicate survival analysis results effectively using tidy principles."
  },
  {
    "objectID": "index.html#outline",
    "href": "index.html#outline",
    "title": "Welcome to the workshop",
    "section": "Outline",
    "text": "Outline\n\n1. Introduction to Survival Analysis (30 min)\n\n1.1 Key concepts: survival functions, hazard functions, and censoring\n1.2 German breast cancer study: a working example\n1.3 Overview of survival analysis with survival package\n\n2. Data Manipulation with Tidyverse (45 min)\n\n2.1 Overview of Tidyverse\n2.2 Tidying survival data\n2.3 Visualizing Subject Follow-Up with ggplot2\n2.4 Creating “Table 1” with gtsummary\n\n3. Nonparametric Survival Analysis (50 min)\n\n3.1 Tabulating survival estimates with gtsummary\n3.2 Visualizing Kaplan-Meier curves with ggsurvfit (or survminer)\n3.3 Tidy analysis of competing risks using tidycmprsk\n\n4. Cox proportional hazards regression (40 min)\n\n4.1 Tabulating regression results with gtsummary\n4.2 Model diagnostics and residual plots with survminer\n4.3 Fine-Gray model for competing risks with tidycmprsk\n\n5. Machine learning using tidymodels (50 min)\n\n5.1 Modeling basics\n5.2 Using the censored package for survival models"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Module 1. Introduction",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)",
    "crumbs": [
      "Home",
      "Module 1. Introduction"
    ]
  },
  {
    "objectID": "intro.html#slides",
    "href": "intro.html#slides",
    "title": "Module 1. Introduction",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)",
    "crumbs": [
      "Home",
      "Module 1. Introduction"
    ]
  },
  {
    "objectID": "intro.html#r-code",
    "href": "intro.html#r-code",
    "title": "Module 1. Introduction",
    "section": "R code",
    "text": "R code\n\n\nShow the code\n# -------------------------------------------\n# Survival Analysis: Module 1 Code\n# -------------------------------------------\n\n# Load necessary package\nlibrary(survival)\n\n# ---------------------------\n# 1. Load Datasets\n# ---------------------------\n\n# Load mortality-only data\ngbc_mort &lt;- read.table(\"data/gbc_mort.txt\", header = TRUE)\nhead(gbc_mort)\n\n# Load mortality + relapse data\ngbc &lt;- read.table(\"data/gbc.txt\", header = TRUE)\nhead(gbc)\n\n# ---------------------------\n# 2. Prepare Dataset for Relapse-Free Survival\n# ---------------------------\n\n# Sort by subject ID and event time\ngbc &lt;- gbc[order(gbc$id, gbc$time), ]\n\n# Keep first event per subject\ndf &lt;- gbc[!duplicated(gbc$id), ]\n\n# Collapse relapse/death to single composite outcome\ndf$status &lt;- ifelse(df$status &gt; 0, 1, 0)\nhead(df)\n\n# ---------------------------\n# 3. Kaplan-Meier Estimation\n# ---------------------------\n\n# Fit Kaplan-Meier curves by hormone treatment\nkm_fit &lt;- survfit(Surv(time, status) ~ hormone, data = df)\n\n# Print KM summary\nsummary(km_fit, times = c(6, 12, 24, 36))\n\n# Plot KM curves with CI\nplot(km_fit, ylim = c(0, 1), xlab = \"Time (months)\",\n     ylab = \"Relapse-free survival probability\",\n     col = c(\"red\", \"blue\"), conf.int = TRUE)\nlegend(\"bottomleft\", col = c(\"red\", \"blue\"), lty = 1,\n       legend = c(\"No hormone\", \"Hormone\"))\n\n# ---------------------------\n# 4. Log-Rank Test\n# ---------------------------\n\n# Compare survival curves by treatment\nlgr_obj &lt;- survdiff(Surv(time, status) ~ hormone, data = df)\nlgr_obj\n\n# Stratified test by menopausal status\nsurvdiff(Surv(time, status) ~ hormone + strata(meno), data = df)\n\n# ---------------------------\n# 5. Cox Proportional Hazards Model\n# ---------------------------\n\n# Fit Cox PH model with multiple covariates\ncox_fit &lt;- coxph(Surv(time, status) ~ hormone + meno + age + grade +\n                   size + prog + estrg, data = df)\nsummary(cox_fit)\n\n# Extract estimates and covariance matrix\nbeta &lt;- cox_fit$coefficients\nvbeta &lt;- vcov(cox_fit)\ncoef(summary(cox_fit))\n\n# ---------------------------\n# 6. Survival Prediction\n# ---------------------------\n\n# Define new subject's covariates\nnew_data &lt;- data.frame(hormone = 1, meno = 1, \n                       age = 45, grade = 2,\n                       size = 20, prog = 100,\n                       estrg = 100)\n\n# Predict survival probabilities\npredicted_survival &lt;- survfit(cox_fit, newdata = new_data,\n                              times = c(6, 12, 24, 36))\nsummary(predicted_survival)\n\n# Plot predicted survival function\nplot(predicted_survival, ylim = c(0, 1), xlab = \"Time (months)\",\n     ylab = \"Predicted survival probability\", conf.int = TRUE)\n\n# ---------------------------\n# 7. Model Diagnostics\n# ---------------------------\n\n# Test proportional hazards assumption\nph_test &lt;- cox.zph(cox_fit)\nph_test\n\n# Plot Schoenfeld residuals\npar(mfrow = c(2, 4))  # 2 rows, 4 columns\nplot(ph_test, se = TRUE, col = \"blue\", lwd = 2)\n\n# ---------------------------\n# 8. Check Functional Form of Covariates\n# ---------------------------\n\n# Extract martingale residuals\nmart_resid &lt;- residuals(cox_fit, type = \"martingale\")\n\n# Plot residuals vs quantitative covariates\npar(mfrow = c(1, 4))  # 1 row, 4 plots\n\nplot(df$age, mart_resid, xlab = \"Age\", ylab = \"Martingale Residuals\",\n     main = \"Age\")\nlines(lowess(df$age, mart_resid), col = \"blue\", lwd = 2)\nabline(h = 0, lty = 2, col = \"red\")\n\nplot(df$size, mart_resid, xlab = \"Tumor Size\", ylab = \"Martingale Residuals\",\n     main = \"Tumor Size\")\nlines(lowess(df$size, mart_resid), col = \"blue\", lwd = 2)\nabline(h = 0, lty = 2, col = \"red\")\n\nplot(df$prog, mart_resid, xlab = \"Progesterone\", ylab = \"Martingale Residuals\",\n     main = \"Progesterone\")\nlines(lowess(df$prog, mart_resid), col = \"blue\", lwd = 2)\nabline(h = 0, lty = 2, col = \"red\")\n\nplot(df$estrg, mart_resid, xlab = \"Estrogen\", ylab = \"Martingale Residuals\",\n     main = \"Estrogen\")\nlines(lowess(df$estrg, mart_resid), col = \"blue\", lwd = 2)\nabline(h = 0, lty = 2, col = \"red\")\n\n# ---------------------------\n# 9. Addressing Violations\n# ---------------------------\n\n# Dichotomize age at 40, stratify on grade\ndf$age40 &lt;- ifelse(df$age &lt; 40, 0, 1)\n\ncox_fit2 &lt;- coxph(Surv(time, status) ~ hormone + meno + age40 +\n                    size + prog + estrg + strata(grade), data = df)\nsummary(cox_fit2)",
    "crumbs": [
      "Home",
      "Module 1. Introduction"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "sec1.html#outline",
    "href": "sec1.html#outline",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Outline",
    "text": "Outline\n\nExamples and regulatory guidelines\nTraditional methods\n\nTime to first event\nWeighted total events (Wcompo package)\n\nWin ratio and hierarchical endpoints\n\nThe estimand issue"
  },
  {
    "objectID": "sec1.html#time-to-event-data",
    "href": "sec1.html#time-to-event-data",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Time-to-Event Data",
    "text": "Time-to-Event Data\n\nA common type of outcome in medical and clinical studies\n\nStarting point: Randomization, diagnosis, enrollment, birth, etc.\n\nEndpoint (Event of interest): Death, disease onset, hospitalization, etc.\n\nEngineering: Failure times of machines or components (reliability)\nSocial sciences: Time to job change, dropout, or event occurrence\n\n\nRight censoring:\n\nEvent not observed within the follow-up period\nDue to study ending, dropout, or loss to follow-up\nWe only know:\n\\[\nT &gt; C\n\\] where \\(T\\) is event time and \\(C\\) is censoring time"
  },
  {
    "objectID": "sec1.html#censoring",
    "href": "sec1.html#censoring",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Censoring",
    "text": "Censoring\n\nRight censoring:\n\nEvent not observed within the follow-up period\nDue to study ending, dropout, or loss to follow-up\nWe only know:\n\\[\nT &gt; C\n\\] where ( T ) is event time and ( C ) is censoring time"
  },
  {
    "objectID": "sec1.html#follow-up-swimmer-plot",
    "href": "sec1.html#follow-up-swimmer-plot",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Follow-up (Swimmer) Plot",
    "text": "Follow-up (Swimmer) Plot\n\nA rat tumorigenicity study"
  },
  {
    "objectID": "sec1.html#basic-estimands",
    "href": "sec1.html#basic-estimands",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Basic Estimands",
    "text": "Basic Estimands\n\nSurvival function: \\(S(t) = \\Pr(T &gt; t)\\)\n\nProbability subject survives beyond time \\(t\\)\n\nHazard function:\n\\[\n\\lambda(t) = \\lim_{\\Delta t \\to 0} \\frac{\\Pr(t \\leq T &lt; t + \\Delta t \\mid T \\geq t)}{\\Delta t}\n\\]\n\nInstantaneous risk of failure at time \\(t\\)\n\nRelationship \\[\nS(t) = \\exp\\left(-\\int_0^t \\lambda(u) \\mathrm{d}u\\right)\n\\]\n\nCumulative hazard function: \\(\\Lambda(t) = \\int_0^t \\lambda(u) \\mathrm{d}u\\)"
  },
  {
    "objectID": "sec1.html#observed-censored-data",
    "href": "sec1.html#observed-censored-data",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Observed (Censored) Data",
    "text": "Observed (Censored) Data\n\nNotation: \\((X, \\delta)\\)\n\n\\(X=\\min(T, C)\\): observation time (event or censoring)\n\\(\\delta = I(T\\leq C)\\): event indicator (1 for event, 0 for censoring)\n\nData format\n\n# time = X, status = delta (tidy format)\n    id    time status\n1     1     5     1\n2     2     3     0\n3     3     8     1\n4     4     2     0\n5     5     6     1\n# Alternatively \n    id    time \n1     1     5   \n2     2     3+  \n3     3     8  \n4     4     2+  \n5     5     6"
  },
  {
    "objectID": "sec1.html#s",
    "href": "sec1.html#s",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "s",
    "text": "s"
  },
  {
    "objectID": "sec1.html#german-breast-cancer-gbc-study",
    "href": "sec1.html#german-breast-cancer-gbc-study",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "German Breast Cancer (GBC) Study",
    "text": "German Breast Cancer (GBC) Study\n\nStudy Information\n\nPopulation: 686 patients with node-positive breast cancer\n\nObjective: Assess if tamoxifen + chemo reduces mortality/relapse\n\nBaseline info: Age, tumor size, hormone levels, menopausal status, etc.\n\nFollow-up: Median 44 months\n\n171 deaths \\(\\to\\) exact times known\n\n515 censored \\(\\to\\) survival time \\(&gt;\\) censoring time\n\n\nData sets:\n\nMortality data: https://lmaowisc.github.io/tidysurv/data/gbc_mort.txt\nMortality + relapse: https://lmaowisc.github.io/tidysurv/data/gbc.txt\nDownload and save in a data folder under your root directory"
  },
  {
    "objectID": "sec1.html#data-format",
    "href": "sec1.html#data-format",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Data Format",
    "text": "Data Format\n\n# Load mortality data\ngbc_mort &lt;- read.table(\"data/gbc_mort.txt\", header = TRUE)\n# Check the first few rows of the data frame\nhead(gbc_mort)\n\n  id      time status hormone age meno size grade nodes prog estrg\n1  1 74.819672      0       1  38    1   18     3     5  141   105\n2  2 65.770492      0       1  52    1   20     1     1   78    14\n3  3 47.737705      1       1  47    1   30     2     1  422    89\n4  4  4.852459      0       1  40    1   24     1     3   25    11\n5  5 61.081967      0       2  64    2   19     2     1   19     9\n6  6 63.377049      0       2  49    2   56     1     3  356    64\n\n# The data frame 'gbc_mort' contains:\n#  time:   time (months) to death or censoring\n#  status: event indicator (1 = death, 0 = censoring)\n# hormone: Hormone therapy (1 = no, 2 = yes); age: Age at diagnosis (years);\n# meno: Menopausal status (1 = no, 2 = yes); size: Tumor size (mm); grade: Tumor grade (1–3);\n# nodes: Number of positive lymph nodes; prog: Progesterone receptor level (fmol/mg); estrg:\n# Estrogen receptor level (fmol/mg)."
  },
  {
    "objectID": "sec1.html#data-format-i",
    "href": "sec1.html#data-format-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Data Format (I)",
    "text": "Data Format (I)\n\nDeath only\n\n\n# Load mortality data\ngbc_mort &lt;- read.table(\"data/gbc_mort.txt\", header = TRUE)\n# Check the first few rows of the data frame\nhead(gbc_mort)\n\n  id      time status hormone age meno size grade nodes prog estrg\n1  1 74.819672      0       1  38    1   18     3     5  141   105\n2  2 65.770492      0       1  52    1   20     1     1   78    14\n3  3 47.737705      1       1  47    1   30     2     1  422    89\n4  4  4.852459      0       1  40    1   24     1     3   25    11\n5  5 61.081967      0       2  64    2   19     2     1   19     9\n6  6 63.377049      0       2  49    2   56     1     3  356    64\n\n# The data frame 'gbc_mort' contains:\n#  time:   time (months) to death or censoring\n#  status: event indicator (1 = death, 0 = censoring)\n# hormone: Hormone therapy (1 = no, 2 = yes); age: Age at diagnosis (years);\n# meno: Menopausal status (1 = no, 2 = yes); size: Tumor size (mm); grade: Tumor grade (1–3);\n# nodes: Number of positive lymph nodes; prog: Progesterone receptor level (fmol/mg); estrg:\n# Estrogen receptor level (fmol/mg)."
  },
  {
    "objectID": "sec1.html#data-format-ii",
    "href": "sec1.html#data-format-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Data Format (II)",
    "text": "Data Format (II)\n\nMortality + relapse\n\n\n# Load mortality + relapse data\ngbc &lt;- read.table(\"data/gbc.txt\", header = TRUE)\n# Check the first few rows of the data frame\nhead(gbc)\n\n  id     time status hormone age meno size grade nodes prog estrg\n1  1 43.83607      1       1  38    1   18     3     5  141   105\n2  1 74.81967      0       1  38    1   18     3     5  141   105\n3  2 46.55738      1       1  52    1   20     1     1   78    14\n4  2 65.77049      0       1  52    1   20     1     1   78    14\n5  3 41.93443      1       1  47    1   30     2     1  422    89\n6  3 47.73770      2       1  47    1   30     2     1  422    89\n\n# The data frame 'gbc' contains:\n#  time:   time (months) to death, relapse, or censoring\n#  status: event indicator (1 = relapse, 2 = death, 0 = censoring)\n#  other covariates the same as in gbc_mor."
  },
  {
    "objectID": "sec1.html#analysis-goals",
    "href": "sec1.html#analysis-goals",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Analysis Goals",
    "text": "Analysis Goals\n\nDescriptive\n\nSummarize patient characteristics\nVisualize survival distributions\n\nInferential\n\nCompare survival curves (e.g., hormone therapy vs. no hormone therapy)\nAssess impact of covariates on survival (e.g., age, tumor size, etc.)\nModel competing risks (e.g., relapse vs. death)\n\nPredictive\n\nDevelop risk prediction models\nEvaluate model performance (e.g., concordance index, calibration)"
  },
  {
    "objectID": "sec1.html#survival-package-overview",
    "href": "sec1.html#survival-package-overview",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Survival Package Overview",
    "text": "Survival Package Overview\n\nKey Functions\n\nSurv(): Create survival object\nsurvfit(): Fit Kaplan-Meier survival curves\nsurvdiff(): Compare survival curves (log-rank test)\ncoxph(): Fit Cox proportional hazards regression models\nsurvreg(): Fit parametric survival regression models"
  },
  {
    "objectID": "sec1.html#kaplan-meier-survival-curves",
    "href": "sec1.html#kaplan-meier-survival-curves",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Kaplan-Meier Survival Curves",
    "text": "Kaplan-Meier Survival Curves\n\nCreate dataset for relapse-free survival\n\n\n# Sort by subject id, then time\no &lt;- order(gbc$id, gbc$time)\ngbc &lt;- gbc[o,]\n# Keep only first row per subject =&gt; first event\ndf &lt;- gbc[!duplicated(gbc$id), ]\n# Convert status &gt; 0 to 1 if it is either relapse or death\ndf$status &lt;- ifelse(df$status &gt; 0, 1, 0)\nhead(df)\n\n  id      time status hormone age meno size grade nodes prog estrg\n1  1 43.836066      1       1  38    1   18     3     5  141   105\n3  2 46.557377      1       1  52    1   20     1     1   78    14\n5  3 41.934426      1       1  47    1   30     2     1  422    89\n7  4  4.852459      0       1  40    1   24     1     3   25    11\n8  5 61.081967      0       2  64    2   19     2     1   19     9\n9  6 63.377049      0       2  49    2   56     1     3  356    64"
  },
  {
    "objectID": "sec1.html#kaplan-meier-curves",
    "href": "sec1.html#kaplan-meier-curves",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Kaplan-Meier Curves",
    "text": "Kaplan-Meier Curves\n\nFit Kaplan-Meier survival curves\n\n\nlibrary(survival) \n# Fit KM curves by hormone treatment group\nkm_fit &lt;- survfit(Surv(time, status) ~ hormone, data = df)\nkm_fit\n\nCall: survfit(formula = Surv(time, status) ~ hormone, data = df)\n\n            n events median 0.95LCL 0.95UCL\nhormone=1 440    205   50.1    42.5    59.5\nhormone=2 246     94   66.2    62.9      NA\n\n\n- **Summarize**\n\nsummary(km_fit, times = c(6, 12, 18, 24))\n\nCall: survfit(formula = Surv(time, status) ~ hormone, data = df)\n\n                hormone=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6    419       9    0.979 0.00691        0.966        0.993\n   12    379      35    0.897 0.01476        0.868        0.926\n   18    329      43    0.794 0.01967        0.757        0.834\n   24    280      30    0.720 0.02203        0.678        0.764\n\n                hormone=2 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6    236       4    0.983 0.00826        0.967        1.000\n   12    223       8    0.950 0.01418        0.922        0.978\n   18    198      21    0.859 0.02278        0.815        0.905\n   24    177      17    0.785 0.02701        0.733        0.839"
  },
  {
    "objectID": "sec1.html#kaplan-meier-curves-i",
    "href": "sec1.html#kaplan-meier-curves-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Kaplan-Meier Curves (I)",
    "text": "Kaplan-Meier Curves (I)\n\nFit Kaplan-Meier survival curves\n\n\nlibrary(survival) \n# Fit KM curves by hormone treatment group\nkm_fit &lt;- survfit(Surv(time, status) ~ hormone, data = df)\nkm_fit\n\nCall: survfit(formula = Surv(time, status) ~ hormone, data = df)\n\n            n events median 0.95LCL 0.95UCL\nhormone=1 440    205   50.1    42.5    59.5\nhormone=2 246     94   66.2    62.9      NA"
  },
  {
    "objectID": "sec1.html#kaplan-meier-curves-ii",
    "href": "sec1.html#kaplan-meier-curves-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Kaplan-Meier Curves (II)",
    "text": "Kaplan-Meier Curves (II)\n\nSummarize survival estimates at specified time points\n\nFor example, at 6, 12, 24, and 36 months\n\n\nsummary(km_fit, times = c(6, 12, 24, 36))\n\nCall: survfit(formula = Surv(time, status) ~ hormone, data = df)\n\n                hormone=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6    419       9    0.979 0.00691        0.966        0.993\n   12    379      35    0.897 0.01476        0.868        0.926\n   24    280      73    0.720 0.02203        0.678        0.764\n   36    195      41    0.606 0.02475        0.559        0.656\n\n                hormone=2 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6    236       4    0.983 0.00826        0.967        1.000\n   12    223       8    0.950 0.01418        0.922        0.978\n   24    177      38    0.785 0.02701        0.733        0.839\n   36    136      16    0.708 0.03047        0.650        0.770"
  },
  {
    "objectID": "sec1.html#kaplan-meier-curves-iii",
    "href": "sec1.html#kaplan-meier-curves-iii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Kaplan-Meier Curves (III)",
    "text": "Kaplan-Meier Curves (III)\n\nPlot Kaplan-Meier survival curves by group\n\n\nplot(km_fit, ylim = c(0,1), xlab = \"Time (months)\", ylab = \"Relapse-free survival probability\",\n     col = c(\"red\", \"blue\"), conf.int = TRUE)\n# Add legend\nlegend(1, 0.2, col=c(\"red\", \"blue\"), lty = 1, \n       c(\"No hormone\", \"Hormone\")) # Legend text"
  },
  {
    "objectID": "sec1.html#log-rank-test",
    "href": "sec1.html#log-rank-test",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Log-Rank Test",
    "text": "Log-Rank Test\n\nCompare survival curves between groups\n\n\nlgr_obj &lt;- survdiff(Surv(time, status) ~ hormone, data = df)\nlgr_obj # Print log-rank test results\n\nCall:\nsurvdiff(formula = Surv(time, status) ~ hormone, data = df)\n\n            N Observed Expected (O-E)^2/E (O-E)^2/V\nhormone=1 440      205      180      3.37      8.56\nhormone=2 246       94      119      5.12      8.56\n\n Chisq= 8.6  on 1 degrees of freedom, p= 0.003 \n\nlgr_obj$pvalue # Extract p-value\n\n[1] 0.003427282\n\n\n\n\n\nExercise\n\n\nPerform a log-rank test on treatment stratified by patient menopausal status meno.\n\n\nSolution\nsurvdiff(Surv(time, status) ~ hormone + strata(meno), data = df)"
  },
  {
    "objectID": "sec1.html#key-takeaways",
    "href": "sec1.html#key-takeaways",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nSurvival analysis is essential for (often censored) time-to-event data\nKey estimands: survival function, hazard function, cumulative hazard\nStandard analysis tools\n\nKaplan-Meier curves (survfit())\nLog-rank test (survdiff())\nCox proportional hazards model (coxph())"
  },
  {
    "objectID": "sec1.html#cox-model---model-specification",
    "href": "sec1.html#cox-model---model-specification",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Model Specification",
    "text": "Cox Model - Model Specification\n\nCox proportional hazards model \\[\n\\lambda(t \\mid Z) = \\lambda_0(t) \\exp(\\beta_1 Z_1 + \\beta_2 Z_2 + \\ldots + \\beta_p Z_p)\n\\]\n\n\\(\\lambda_0(t)\\): baseline hazard function\n\\(Z=(Z_1,\\ldots, Z_p)^\\mathrm{T}\\): covariates (e.g., hormone therapy, age, tumor size)\n\\(\\beta=(\\beta_1，\\ldots，\\beta_p)^\\mathrm{T}\\): regression coefficients\n\\(\\exp(\\beta_j)\\): hazard ratio for covariate \\(Z_j\\)\n\nProportional hazards (PH) assumption \\[\n\\frac{\\lambda(t \\mid Z)}{\\lambda(t \\mid Z^*)} = \\exp\\{\\beta^\\mathrm{T}(Z - Z^*)\\}\n\\]\n\nHR constant over time, i.e., \\(\\beta(t) \\equiv \\beta\\) (for each covariate)"
  },
  {
    "objectID": "sec1.html#cox-model---model-fitting",
    "href": "sec1.html#cox-model---model-fitting",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Model Fitting",
    "text": "Cox Model - Model Fitting\n\nModel fitting: survival::coxph()\n\n\ncox_fit &lt;- coxph(Surv(time, status) ~ hormone + age + size + prog + estrg, data = df)\nsummary(cox_fit) # Print model summary\n\nCall:\ncoxph(formula = Surv(time, status) ~ hormone + age + size + prog + \n    estrg, data = df)\n\n  n= 686, number of events= 299 \n\n              coef  exp(coef)   se(coef)      z Pr(&gt;|z|)    \nhormone -0.3529035  0.7026450  0.1279482 -2.758  0.00581 ** \nage      0.0011593  1.0011600  0.0063647  0.182  0.85546    \nsize     0.0159456  1.0160734  0.0036144  4.412 1.03e-05 ***\nprog    -0.0027926  0.9972113  0.0005900 -4.733 2.21e-06 ***\nestrg    0.0001630  1.0001630  0.0004772  0.342  0.73265    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n        exp(coef) exp(-coef) lower .95 upper .95\nhormone    0.7026     1.4232    0.5468    0.9029\nage        1.0012     0.9988    0.9887    1.0137\nsize       1.0161     0.9842    1.0089    1.0233\nprog       0.9972     1.0028    0.9961    0.9984\nestrg      1.0002     0.9998    0.9992    1.0011\n\nConcordance= 0.64  (se = 0.016 )\nLikelihood ratio test= 58.91  on 5 df,   p=2e-11\nWald test            = 50.3  on 5 df,   p=1e-09\nScore (logrank) test = 47.24  on 5 df,   p=5e-09"
  },
  {
    "objectID": "sec1.html#cox-model---model-fitting-i",
    "href": "sec1.html#cox-model---model-fitting-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Model Fitting (I)",
    "text": "Cox Model - Model Fitting (I)\n\nModel fitting: survival::coxph()\n\n\ncox_fit &lt;- coxph(Surv(time, status) ~ hormone + meno + age + grade + size + prog + estrg, \n                 data = df)\nsummary(cox_fit) # Print model summary\n\nCall:\ncoxph(formula = Surv(time, status) ~ hormone + meno + age + grade + \n    size + prog + estrg, data = df)\n\n  n= 686, number of events= 299 \n\n              coef  exp(coef)   se(coef)      z Pr(&gt;|z|)    \nhormone -0.3422139  0.7101963  0.1290669 -2.651  0.00801 ** \nmeno     0.2765637  1.3185909  0.1837781  1.505  0.13236    \nage     -0.0087813  0.9912572  0.0093375 -0.940  0.34700    \ngrade    0.2785797  1.3212519  0.1051531  2.649  0.00807 ** \nsize     0.0152793  1.0153966  0.0036877  4.143 3.42e-05 ***\nprog    -0.0023307  0.9976720  0.0005803 -4.016 5.91e-05 ***\nestrg    0.0001678  1.0001679  0.0004669  0.359  0.71923    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n        exp(coef) exp(-coef) lower .95 upper .95\nhormone    0.7102     1.4081    0.5515    0.9146\nmeno       1.3186     0.7584    0.9198    1.8904\nage        0.9913     1.0088    0.9733    1.0096\ngrade      1.3213     0.7569    1.0752    1.6236\nsize       1.0154     0.9848    1.0081    1.0228\nprog       0.9977     1.0023    0.9965    0.9988\nestrg      1.0002     0.9998    0.9993    1.0011\n\nConcordance= 0.651  (se = 0.016 )\nLikelihood ratio test= 68.4  on 7 df,   p=3e-12\nWald test            = 61.93  on 7 df,   p=6e-11\nScore (logrank) test = 61.23  on 7 df,   p=9e-11"
  },
  {
    "objectID": "sec1.html#cox-model---model-fitting-ii",
    "href": "sec1.html#cox-model---model-fitting-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Model Fitting (II)",
    "text": "Cox Model - Model Fitting (II)\n\nExtracting \\(\\hat\\beta\\) and \\(\\hat{\\mathrm{var}}(\\hat\\beta)\\)\n\n\nbeta &lt;- cox_fit$coefficients # Estimated coefficients\nvbeta &lt;- vcov(cox_fit) # Estimated variance-covariance matrix\n# Extract regression table (as data frame)\ncoef(summary(cox_fit))\n\n                 coef exp(coef)     se(coef)          z     Pr(&gt;|z|)\nhormone -0.3422138547 0.7101963 0.1290669350 -2.6514448 8.014821e-03\nmeno     0.2765636858 1.3185909 0.1837780595  1.5048787 1.323553e-01\nage     -0.0087812621 0.9912572 0.0093375120 -0.9404285 3.469978e-01\ngrade    0.2785796730 1.3212519 0.1051531448  2.6492757 8.066449e-03\nsize     0.0152793172 1.0153966 0.0036877471  4.1432660 3.423945e-05\nprog    -0.0023307288 0.9976720 0.0005803186 -4.0162919 5.912102e-05\nestrg    0.0001678465 1.0001679 0.0004669057  0.3594870 7.192308e-01\n\n\n\nConclusion\n\nHormone therapy significantly reduces the risk of relapse or death by \\(1-0.710=29\\%\\) (\\(p\\) = 0.008)"
  },
  {
    "objectID": "sec1.html#cox-model---prediction",
    "href": "sec1.html#cox-model---prediction",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Prediction",
    "text": "Cox Model - Prediction\n\nPredicted survival function \\[\n\\hat S(t \\mid z) = \\exp\\left\\{- \\exp(\\hat\\beta^\\mathrm{T} z) \\hat\\Lambda_0(t)\\right\\}\n\\]\nPrepare new data for prediction\n\n\n# Create new data for prediction\n# specify all covariate values\nnew_data &lt;- data.frame(hormone = 1, meno = 1, \n                        age = 45, grade = 2, \n                        size = 20, prog = 100, \n                        estrg = 100)\nnew_data\n\n  hormone meno age grade size prog estrg\n1       1    1  45     2   20  100   100\n\n\n\n# Predict survival probabilities at 12 months\npredicted_survival &lt;- survfit(cox_fit, newdata = new_data[1, ], times = c(6, 12, 24, 36))\nsummary(predicted_survival)"
  },
  {
    "objectID": "sec1.html#cox-model---prediction-i",
    "href": "sec1.html#cox-model---prediction-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Prediction (I)",
    "text": "Cox Model - Prediction (I)\n\nPredicted survival function \\[\n\\hat S(t \\mid z) = \\exp\\left\\{- \\exp(\\hat\\beta^\\mathrm{T} z) \\hat\\Lambda_0(t)\\right\\}\n\\]\nPrepare new data for prediction\n\n\n# Create new data for prediction\n# specify all covariate values\nnew_data &lt;- data.frame(hormone = 1, meno = 1, \n                        age = 45, grade = 2, \n                        size = 20, prog = 100, \n                        estrg = 100)\nnew_data\n\n  hormone meno age grade size prog estrg\n1       1    1  45     2   20  100   100"
  },
  {
    "objectID": "sec1.html#cox-model---prediction-ii",
    "href": "sec1.html#cox-model---prediction-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Prediction (II)",
    "text": "Cox Model - Prediction (II)\n\nPredict survival probabilities at specified time points\n\n\n# Predict survival probabilities at 6, 12, 24, 26 months\npredicted_survival &lt;- survfit(cox_fit, newdata = new_data[1, ], times = c(6, 12, 24, 36))\nsummary(predicted_survival, times = c(6, 12, 24, 36))\n\nCall: survfit(formula = cox_fit, newdata = new_data[1, ], times = c(6, \n    12, 24, 36))\n\n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6    655      13    0.985 0.00441        0.976        0.994\n   12    602      43    0.933 0.01059        0.913        0.954\n   24    457     111    0.786 0.02304        0.743        0.833\n   36    331      57    0.696 0.02925        0.641        0.755"
  },
  {
    "objectID": "sec1.html#cox-model---prediction-ii-1",
    "href": "sec1.html#cox-model---prediction-ii-1",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Prediction (II)",
    "text": "Cox Model - Prediction (II)\n\nPlot predicted survival function\n\n\n# Plot predicted survival function\nplot(predicted_survival, ylim = c(0, 1), xlab = \"Time (months)\", \n     ylab = \"Relapsep-free survival probability\", conf.int = TRUE)"
  },
  {
    "objectID": "sec1.html#cox-model---prediction-iii",
    "href": "sec1.html#cox-model---prediction-iii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Prediction (III)",
    "text": "Cox Model - Prediction (III)\n\nPlot predicted survival function\n\n\n# Plot predicted survival function\nplot(predicted_survival, ylim = c(0, 1), xlab = \"Time (months)\", \n     ylab = \"Relapsep-free survival probability\", conf.int = TRUE)"
  },
  {
    "objectID": "sec1.html#cox-model---model-checking-i",
    "href": "sec1.html#cox-model---model-checking-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Model Checking (I)",
    "text": "Cox Model - Model Checking (I)\n\nCheck PH assumptions\n\nGraphical: Plot scaled Schoenfeld residuals vs. time\nStatistical: Use cox.zph() to test PH assumption\n\n\n\nph_test &lt;- cox.zph(cox_fit)\nph_test # Print test results\n\n         chisq df      p\nhormone  0.272  1 0.6017\nmeno     5.514  1 0.0189\nage      9.430  1 0.0021\ngrade    8.490  1 0.0036\nsize     0.872  1 0.3505\nprog     4.881  1 0.0272\nestrg    5.403  1 0.0201\nGLOBAL  20.636  7 0.0043"
  },
  {
    "objectID": "sec1.html#cox-model---model-checking-ii",
    "href": "sec1.html#cox-model---model-checking-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Model Checking (II)",
    "text": "Cox Model - Model Checking (II)\n\nGraphical check of PH assumptions"
  },
  {
    "objectID": "sec1.html#cox-model---check-ph-assumptions-i",
    "href": "sec1.html#cox-model---check-ph-assumptions-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Check PH Assumptions (I)",
    "text": "Cox Model - Check PH Assumptions (I)\n\nSchoenfeld residuals\n\nDifference between observed and expected covariate values at each event time\nUse cox.zph() to test PH assumption\n\n\n\nph_test &lt;- cox.zph(cox_fit)\nph_test # Print test results\n\n         chisq df      p\nhormone  0.272  1 0.6017\nmeno     5.514  1 0.0189\nage      9.430  1 0.0021\ngrade    8.490  1 0.0036\nsize     0.872  1 0.3505\nprog     4.881  1 0.0272\nestrg    5.403  1 0.0201\nGLOBAL  20.636  7 0.0043"
  },
  {
    "objectID": "sec1.html#cox-model---check-ph-assumptions-ii",
    "href": "sec1.html#cox-model---check-ph-assumptions-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Check PH Assumptions (II)",
    "text": "Cox Model - Check PH Assumptions (II)\n\nGraphical check of PH assumptions\n\nPlot Schoenfeld residuals against time\n\n\n\npar(mfrow= c(2, 4)) # Set up 2x4 plotting area for 7 covariates\nplot(ph_test, se = TRUE, col = \"blue\", lwd = 2) # Plot Schoenfeld residuals"
  },
  {
    "objectID": "sec1.html#cox-model---check-covariate-forms",
    "href": "sec1.html#cox-model---check-covariate-forms",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model - Check Covariate Forms",
    "text": "Cox Model - Check Covariate Forms\n\nCheck linearity of covariate effects\n\nPlot martingale residuals against (quantitative) covariates\n\n\n# Extract martingale residuals \nmart_resid &lt;- residuals(cox_fit, type = 'martingale')\n\n\n\nPlotting\npar(mfrow= c(1, 4))  # Set up 1x4 plotting area for 4 covariates\n# Plot martingale residuals against age\nplot(df$age, mart_resid, xlab = \"Age\", ylab = \"Martingale Residuals\",\n     main = \"Age\")\n# Add smoothed line\nlines(lowess(df$age, mart_resid), col = \"blue\", lwd = 2)\nabline(h = 0, col = \"red\", lty = 2) # Add horizontal line at 0\n\n# Repeat for other covariates\nplot(df$size, mart_resid, xlab = \"Tumor Size\", ylab = \"Martingale Residuals\",\n     main = \"Tumor Size\")\nlines(lowess(df$size, mart_resid), col = \"blue\", lwd = 2)\nabline(h = 0, col = \"red\", lty = 2) # Add horizontal line at 0\nplot(df$prog, mart_resid, xlab = \"Progesterone Receptor\", ylab = \"Martingale Residuals\",\n     main = \"Progesterone Receptor\")\nlines(lowess(df$prog, mart_resid), col = \"blue\", lwd = 2)\nabline(h = 0, col = \"red\", lty = 2) # Add horizontal line at 0\nplot(df$estrg, mart_resid, xlab = \"Estrogen Receptor\", ylab = \"Martingale Residuals\",\n     main = \"Estrogen Receptor\")\nlines(lowess(df$estrg, mart_resid), col = \"blue\", lwd = 2)\nabline(h = 0, col = \"red\", lty = 2) # Add horizontal line at 0"
  },
  {
    "objectID": "sec1.html#coding-exercise",
    "href": "sec1.html#coding-exercise",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Coding Exercise",
    "text": "Coding Exercise\n\n\n\nExercise\n\n\nResidual analyses show that the proportional hazards assumption is violated for tumor grade, and that the effect of age is not linear.\nFit a different model to address these issues.\n\n\nSample solution\n# Dichotomize age at 40\ndf$age40 &lt;- ifelse(df$age &lt; 40, 0, 1)\n# Fit Cox model stratified by tumor grade and with binary age \ncox_fit2 &lt;- coxph(Surv(time, status) ~ hormone + meno + age40 + size + prog + estrg + \n                   strata(grade), data = df)\nsummary(cox_fit2) # Print model summary"
  },
  {
    "objectID": "sec1.html#open-questions",
    "href": "sec1.html#open-questions",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Open Questions",
    "text": "Open Questions\n\nEfficient/effective presentation of survival probabilities\n\nPoint estimates, confidence intervals\n\nCustomizable survival curves\n\nAdd at risk table below graph\n\nPresentation of regression results\n\nHazard ratios, confidence intervals, p-values\nVisualize regression results (e.g., forest plots)"
  },
  {
    "objectID": "tidy.html",
    "href": "tidy.html",
    "title": "Module 2. Data Manipulation with Tidyverse",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)",
    "crumbs": [
      "Home",
      "Module 2. Data Manipulation with Tidyverse"
    ]
  },
  {
    "objectID": "tidy.html#slides",
    "href": "tidy.html#slides",
    "title": "Module 2. Data Manipulation with Tidyverse",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)",
    "crumbs": [
      "Home",
      "Module 2. Data Manipulation with Tidyverse"
    ]
  },
  {
    "objectID": "tidy.html#r-code",
    "href": "tidy.html#r-code",
    "title": "Module 2. Data Manipulation with Tidyverse",
    "section": "R code",
    "text": "R code\n\n\nShow the code\n# -------------------------------------------\n# Tidy Survival Analysis: Module 2 Code\n# -------------------------------------------\n\n# ---------------------------\n# 1. Load Required Packages\n# ---------------------------\n\nlibrary(tidyverse)\n\n# ---------------------------\n# 2. Simulated Trial Dataset\n# ---------------------------\n\n# Create a toy dataset with treatment assignment, age, follow-up time, and status\ndf1 &lt;- tibble(\n  id = 1:6,\n  trt = c(\"A\", \"A\", \"B\", \"B\", \"A\", \"B\"),\n  age = c(65, 70, 58, 60, 64, 59),\n  time = c(5, 8, 12, 3, 2, 6),\n  status = c(1, 0, 1, 1, 0, 0)  # 1 = event, 0 = censored\n)\ndf1\n\n# ---------------------------\n# 3. Pipe Operator and Basic Manipulation\n# ---------------------------\n\n# Use native pipe |&gt; to add new variable, filter, and sort\ndf1 |&gt;\n  mutate(age_group = if_else(age &gt;= 65, \"older\", \"younger\")) |&gt;  # categorize age\n  filter(trt == \"A\") |&gt;                                           # subset treatment A\n  arrange(time)                                                   # sort by time\n\n# ---------------------------\n# 4. Grouped Summary by Treatment Arm\n# ---------------------------\n\n# Grouped summary: number of subjects, number of events, median follow-up\ndf1 |&gt; \n  group_by(trt) |&gt; \n  summarize(\n    n = n(),                         # total subjects\n    events = sum(status),           # count of events\n    median_time = median(time)      # median survival time\n  )\n\n# ---------------------------\n# 5. Load GBC Dataset\n# ---------------------------\n\n# Load long-format data from the German Breast Cancer study\ngbc &lt;- read.table(\"data/gbc.txt\", header = TRUE)\nhead(gbc)\n\n# ---------------------------\n# 6. Raw Date Variables as Strings\n# ---------------------------\n\n# Create small example dataset with character date fields\ndf2 &lt;- tibble(\n  id = 1:3,\n  rand_date = c(\"2022-01-01\", \"2022-01-15\", \"2022-01-20\"),\n  end_date = c(\"2022-04-01\", \"2022-06-01\", \"2022-03-15\"),\n  status = c(\"dead\", \"censored\", \"dead\")\n)\ndf2\n\n# ---------------------------\n# 7. Parse Dates and Calculate Survival Time\n# ---------------------------\n\n# Convert character dates to Date format and compute time and status\ndf2 |&gt;\n  mutate(\n    rand_date = ymd(rand_date),                 # convert randomization date\n    end_date = ymd(end_date),                   # convert event/censoring date\n    time = as.numeric(end_date - rand_date),    # survival time in days\n    status = if_else(status == \"dead\", 1, 0)    # binary status indicator\n  )\n\n# ---------------------------\n# 8. Censored Strings Parsing\n# ---------------------------\n\n# Handle messy strings like \"32+\" using stringr functions\nMP &lt;- c(10, \"32+\", 23, \"25+\")\ndf4 &lt;- tibble(\n  MP = MP,\n  time = parse_number(MP),                # extract numeric portion\n  status = 1 - str_detect(MP, \"\\\\+\")      # 0 if \"+\" present (censored)\n)\ndf4\n\n# ---------------------------\n# 9. Reshape Wide to Long Format\n# ---------------------------\n\n# Convert multiple event times to long format using pivot_longer\ndf6 &lt;- tibble(\n  id = 1:3,\n  prog_time = c(10, 20, 30),\n  prog_status = c(1, 0, 1),\n  death_time = c(15, 20, 35),\n  death_status = c(0, 1, 1)\n)\n\ndf7 &lt;- df6 |&gt; \n  pivot_longer(\n    cols = c(prog_time, prog_status, death_time, death_status),\n    names_to = c(\"event\", \".value\"),\n    names_pattern = \"(.*)_(.*)\"\n  )\ndf7\n\n# ---------------------------\n# 10. Clean Long-Format Event Data\n# ---------------------------\n\n# Remove non-events and recode death status\ndf7 |&gt; \n  filter(!(event == \"prog\" & status == 0)) |&gt;        # drop non-events\n  mutate(status = if_else(event == \"death\" & status == 1, 2, status))  # 2 = death\n\n# ---------------------------\n# 11. Construct a Swimmer Plot\n# ---------------------------\n\n# Create subject-level survival data\ndf8 &lt;- tibble(\n  time = c(101, 55, 67, 23, 45, 98, 34, 77, 91, 104, 88),\n  status = c(0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1),\n  group = c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"A\", \"B\", \"B\", \"A\", \"B\")\n) |&gt; \n  mutate(\n    id = row_number(),  # assign subject IDs\n    .before = 1\n  )\n\n# Build swimmer plot using ggplot2\nfig8 &lt;- df8 |&gt; \n  ggplot(aes(x = time, y = reorder(id, time))) +\n  geom_linerange(aes(xmin = 0, xmax = time)) +\n  geom_point(aes(shape = factor(status)), size = 2.5, fill = \"white\") +\n  geom_vline(xintercept = 0, linewidth = 1) +\n  theme_minimal() +\n  scale_y_discrete(name = \"Rats\") +\n  scale_x_continuous(name = \"Time (days)\", breaks = seq(0, 100, 20),\n                     expand = expansion(c(0, 0.05))) +\n  scale_shape_manual(values = c(23, 19),\n                     labels = c(\"Censoring\", \"Tumor development\")) +\n  theme(\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.text = element_text(size = 11)\n  )\n\n# ---------------------------\n# 12. Create Summary Table with gtsummary\n# ---------------------------\n\n# Create example dataset for table\ndf9 &lt;- tibble(\n  id = 1:10,\n  time = c(101, 55, 67, 23, 45, 98, 34, 77, 91, 104),\n  status = c(0, 1, 1, 0, 1, 0, 1, 0, 1, 0),\n  trt = c(\"A\", \"A\", \"B\", \"B\", \"A\", \"B\", \"A\", \"B\", \"A\", \"B\"),\n  sex = c(\"M\", \"F\", \"M\", \"F\", \"M\", \"F\", \"M\", \"F\", \"M\", \"F\"),\n  age = c(65, 70, 58, 60, 64, 59, 66, 62, 68, 61)\n)\n\n# Summarize variables by treatment arm\nlibrary(gtsummary)\n\ndf9 |&gt; \n  tbl_summary(\n    by = trt,\n    include = c(sex, age, time, status),\n    label = list(\n      time = \"Follow-up time (months)\",\n      status = \"Events\"\n    )\n  )",
    "crumbs": [
      "Home",
      "Module 2. Data Manipulation with Tidyverse"
    ]
  },
  {
    "objectID": "sec2.html#what-does-tidy-mean",
    "href": "sec2.html#what-does-tidy-mean",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "What Does “Tidy” Mean?",
    "text": "What Does “Tidy” Mean?\n\nA dataset is tidy if:\n\nEach variable is a column\nEach observation is a row\nEach type of observational unit is a table\n\n— Hadley Wickham, Tidy Data (2014)\nhttps://www.jstatsoft.org/article/view/v059i10"
  },
  {
    "objectID": "sec2.html#overview-of-the-tidyverse",
    "href": "sec2.html#overview-of-the-tidyverse",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Overview of the Tidyverse",
    "text": "Overview of the Tidyverse\n\nMotivation: tidy data for reproducible analysis\nKey packages\n\ndplyr (filtering, mutating, grouping, summarizing)\ntidyr (pivoting, nesting, reshaping)\ntibble (modern data frames)\nreadr / haven (importing .csv or .sas7bdat)\nlubridate (handling time variables)\nggplot2 (visualization)\n\n\n\n# Load core tidyverse packages\nlibrary(tidyverse)"
  },
  {
    "objectID": "sec2.html#the-tidyverse-ecosystem",
    "href": "sec2.html#the-tidyverse-ecosystem",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "The tidyverse Ecosystem",
    "text": "The tidyverse Ecosystem\n\nMotivation: tidy data for reproducible analysis\nKey packages\n\ndplyr (filtering, mutating, grouping, summarizing)\ntidyr (pivoting, nesting, reshaping)\ntibble (modern data frames)\nreadr / haven (importing .csv or .sas7bdat)\nlubridate (handling time variables)\nggplot2 (visualization)\n\n\n\n# Load core tidyverse packages\nlibrary(tidyverse)"
  },
  {
    "objectID": "sec2.html#why-tidy-data",
    "href": "sec2.html#why-tidy-data",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Why Tidy Data?",
    "text": "Why Tidy Data?\n\nTidy data principles\n\nEasy to reshape and transform\nCompatible with ggplot2, dplyr, tidyr, and modeling tools\nEncourages modular and reproducible code\n\nMessy data challenges:\n\nTime in rows, covariates in columns\nMultiple data types in one column\nSeparte randomization and event/censoring dates\nMissing/censored values inconsistently coded"
  },
  {
    "objectID": "sec2.html",
    "href": "sec2.html",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "",
    "text": "Motivation: tidy data for reproducible analysis\nKey packages\n\ndplyr (filtering, mutating, grouping, summarizing)\ntidyr (pivoting, nesting, reshaping)\ntibble (modern data frames)\nreadr / haven (importing .csv or .sas7bdat)\nlubridate (handling time variables)\nggplot2 (visualization)\n\n\n\n# Load core tidyverse packages\nlibrary(tidyverse)\n\n\n\n\n\nData manipulation: using dplyr verbs\n\nmutate() to create new variables (e.g., age group, log-transformed labs)\nfilter() to subset by treatment or age\nselect() and rename() for variable formatting\narrange() to sort\ngroup_by() and summarize() for descriptive summaries by arm\n\nData reshaping: using tidyr functions\n\npivot_longer() to convert wide to long format\npivot_wider() to convert long to wide format\nnest() and unnest() for hierarchical data\n\n\n\n\n\n\nExample dataset\n\n\n# Simulated data example\ndf1 &lt;- tibble(\n  id = 1:6,\n  trt = c(\"A\", \"A\", \"B\", \"B\", \"A\", \"B\"),\n  age = c(65, 70, 58, 60, 64, 59),\n  time = c(5, 8, 12, 3, 2, 6),\n  status = c(1, 0, 1, 1, 0, 0)  # 1 = event, 0 = censored\n)\ndf1\n\n# A tibble: 6 × 5\n     id trt     age  time status\n  &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1     1 A        65     5      1\n2     2 A        70     8      0\n3     3 B        58    12      1\n4     4 B        60     3      1\n5     5 A        64     2      0\n6     6 B        59     6      0\n\n\n\n\n\n\nWhat is |&gt;\n\nIntroduced in R 4.1 (hot key: Ctrl + Shift + M)\nPasses the result of one expression into the first argument of the next\nSame idea as %&gt;%, but built into base R\n\nExample\n\n\ndf1 |&gt; # passes tibble data frame df1 to the next function \n  mutate(age_group = if_else(age &gt;= 65, \"older\", \"younger\")) |&gt; # create age group\n  filter(trt == \"A\") |&gt; # filter for treatment A\n  arrange(time) # sort by time\n\n# A tibble: 3 × 6\n     id trt     age  time status age_group\n  &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;    \n1     5 A        64     2      0 younger  \n2     1 A        65     5      1 older    \n3     2 A        70     8      0 older    \n\n\n\n\n\n\nSurvival-specific summaries (e.g., number of events)\n\ngroup_by() and summarize() for descriptive summaries by arm\n\n\ndf1 |&gt; \n  group_by(trt) |&gt; # group by treatment arm\n  summarize( # summarize each group\n    n = n(), # count number of rows (subjects)\n    events = sum(status), # sum of events (status = 1)\n    median_time = median(time) # median survival time\n  )\n\n# A tibble: 2 × 4\n  trt       n events median_time\n  &lt;chr&gt; &lt;int&gt;  &lt;dbl&gt;       &lt;dbl&gt;\n1 A         3      1           5\n2 B         3      2           6\n\n\n\n\n\n\n\nA dataset is tidy if:\n\nEach variable is a column\nEach observation is a row\nEach type of observational unit is a table\n\n— Hadley Wickham, Tidy Data (2014)\nhttps://www.jstatsoft.org/article/view/v059i10\n\n\n\n\n\nTidy data principles\n\nEasy to reshape and transform\nCompatible with ggplot2, dplyr, tidyr, and modeling tools\nEncourages modular and reproducible code\n\nMessy data challenges:\n\nTime in rows, covariates in columns\nMultiple data types in one column\nSeparte randomization and event/censoring dates\nMissing/censored values inconsistently coded\n\n\n\n\n\n\nPossible pre-processing steps\n\nCalculate survival time from start to event/censoring\nCreating the \\((X, \\delta)\\) structure expected by Surv()\nReshaping data to long format in case of multiple events\n\nAn Example\n\n\n# Load GBC data\ngbc &lt;- read.table(\"data/gbc.txt\", header = TRUE)\nhead(gbc)\n\n  id     time status hormone age meno size grade nodes prog estrg\n1  1 43.83607      1       1  38    1   18     3     5  141   105\n2  1 74.81967      0       1  38    1   18     3     5  141   105\n3  2 46.55738      1       1  52    1   20     1     1   78    14\n4  2 65.77049      0       1  52    1   20     1     1   78    14\n5  3 41.93443      1       1  47    1   30     2     1  422    89\n6  3 47.73770      2       1  47    1   30     2     1  422    89"
  },
  {
    "objectID": "sec2.html#tidy-survival-data",
    "href": "sec2.html#tidy-survival-data",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tidy Survival Data",
    "text": "Tidy Survival Data\n\nPossible pre-processing steps\n\nCalculate survival time from start to event/censoring\nCreating the \\((X, \\delta)\\) structure expected by Surv()\nReshaping data to long format in case of multiple events\n\nAn Example\n\n\n# Load GBC data\ngbc &lt;- read.table(\"data/gbc.txt\", header = TRUE)\nhead(gbc)\n\n  id     time status hormone age meno size grade nodes prog estrg\n1  1 43.83607      1       1  38    1   18     3     5  141   105\n2  1 74.81967      0       1  38    1   18     3     5  141   105\n3  2 46.55738      1       1  52    1   20     1     1   78    14\n4  2 65.77049      0       1  52    1   20     1     1   78    14\n5  3 41.93443      1       1  47    1   30     2     1  422    89\n6  3 47.73770      2       1  47    1   30     2     1  422    89"
  },
  {
    "objectID": "sec2.html#calculate-survival-time",
    "href": "sec2.html#calculate-survival-time",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Calculate Survival Time",
    "text": "Calculate Survival Time"
  },
  {
    "objectID": "sec2.html#calculate-survival-time-i",
    "href": "sec2.html#calculate-survival-time-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Calculate Survival Time (I)",
    "text": "Calculate Survival Time (I)\n\nTime from start to event/censoring (\\(X\\))\n\n\n\nAn example\n\n\n# Example: raw dates as character strings\ntrial_df &lt;- tibble(\n  id = 1:3,\n  rand_date = c(\"2022-01-01\", \"2022-01-15\", \"2022-01-20\"),\n  event_date = c(\"2022-04-01\", NA, \"2022-03-15\"),\n  censor_date = c(NA, \"2022-06-01\", NA)\n)"
  },
  {
    "objectID": "sec2.html#calendar",
    "href": "sec2.html#calendar",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Calendar",
    "text": "Calendar\n\nTime from start to event/censoring (\\(X\\))"
  },
  {
    "objectID": "sec2.html#calculate-survival-time-ii",
    "href": "sec2.html#calculate-survival-time-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Calculate Survival Time (II)",
    "text": "Calculate Survival Time (II)\n\nA data example\n\n\n# Example: raw dates as character strings\ntrial_df &lt;- tibble(\n  id = 1:3,\n  rand_date = c(\"2022-01-01\", \"2022-01-15\", \"2022-01-20\"),\n  end_date = c(\"2022-04-01\", \"2022-06-01\", \"2022-03-15\"),\n  status = c(\"dead\", \"censored\", \"dead\")\n)\ntrial_df"
  },
  {
    "objectID": "sec2.html#calendar-vs.-eventcensoring-times",
    "href": "sec2.html#calendar-vs.-eventcensoring-times",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Calendar vs. Event/Censoring Times",
    "text": "Calendar vs. Event/Censoring Times\n\nTime from start to event/censoring (\\(X\\))"
  },
  {
    "objectID": "sec2.html#parse-dates-and-calculate-times",
    "href": "sec2.html#parse-dates-and-calculate-times",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Parse Dates and Calculate Times",
    "text": "Parse Dates and Calculate Times\n\nA data example\n\n\n# Example: raw dates as character strings\ntrial_df &lt;- tibble(\n  id = 1:3,\n  rand_date = c(\"2022-01-01\", \"2022-01-15\", \"2022-01-20\"),\n  end_date = c(\"2022-04-01\", \"2022-06-01\", \"2022-03-15\"),\n  status = c(\"dead\", \"censored\", \"dead\")\n)\ntrial_df"
  },
  {
    "objectID": "sec2.html#calendar-vs.-event-times",
    "href": "sec2.html#calendar-vs.-event-times",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Calendar vs. Event Times",
    "text": "Calendar vs. Event Times\n\nTime from start to event/censoring (\\(X\\))"
  },
  {
    "objectID": "sec2.html#parse-dates-and-calculate-difference",
    "href": "sec2.html#parse-dates-and-calculate-difference",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Parse Dates and Calculate Difference",
    "text": "Parse Dates and Calculate Difference\n\nA data example\n\n\n# Example: raw dates as character strings\ntrial_df &lt;- tibble(\n  id = 1:3,\n  rand_date = c(\"2022-01-01\", \"2022-01-15\", \"2022-01-20\"),\n  end_date = c(\"2022-04-01\", \"2022-06-01\", \"2022-03-15\"),\n  status = c(\"dead\", \"censored\", \"dead\")\n)\ntrial_df\n\n# A tibble: 3 × 4\n     id rand_date  end_date   status  \n  &lt;int&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;   \n1     1 2022-01-01 2022-04-01 dead    \n2     2 2022-01-15 2022-06-01 censored\n3     3 2022-01-20 2022-03-15 dead    \n\n\n\n# Parse dates and calculate time/status\ntrial_df &lt;- trial_df |&gt; \n  mutate(\n    rand_date = ymd(rand_date),\n    end_date = ymd(end_date),\n    censor_date = ymd(censor_date),\n    status = if_else(status == \"dead\", 1, 0)\n  )"
  },
  {
    "objectID": "sec2.html#basic-functionalities",
    "href": "sec2.html#basic-functionalities",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Basic Functionalities",
    "text": "Basic Functionalities\n\nData manipulation: using dplyr verbs\n\nmutate() to create new variables (e.g., age group, log-transformed labs)\nfilter() to subset by treatment or age\nselect() and rename() for variable formatting\narrange() to sort\ngroup_by() and summarize() for descriptive summaries by arm\n\nData reshaping: using tidyr functions\n\npivot_longer() to convert wide to long format\npivot_wider() to convert long to wide format\nnest() and unnest() for hierarchical data"
  },
  {
    "objectID": "sec2.html#a-simple-example",
    "href": "sec2.html#a-simple-example",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "A Simple Example",
    "text": "A Simple Example\n\nExample dataset\n\n\n# Simulated data example\ndf1 &lt;- tibble(\n  id = 1:6,\n  trt = c(\"A\", \"A\", \"B\", \"B\", \"A\", \"B\"),\n  age = c(65, 70, 58, 60, 64, 59),\n  time = c(5, 8, 12, 3, 2, 6),\n  status = c(1, 0, 1, 1, 0, 0)  # 1 = event, 0 = censored\n)\ndf1\n\n# A tibble: 6 × 5\n     id trt     age  time status\n  &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1     1 A        65     5      1\n2     2 A        70     8      0\n3     3 B        58    12      1\n4     4 B        60     3      1\n5     5 A        64     2      0\n6     6 B        59     6      0"
  },
  {
    "objectID": "sec2.html#the-native-pipe-operator",
    "href": "sec2.html#the-native-pipe-operator",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "The Native Pipe Operator: |>",
    "text": "The Native Pipe Operator: |&gt;\n\nWhat is |&gt;\n\nIntroduced in R 4.1\nPasses the result of one expression into the first argument of the next\nSame idea as %&gt;%, but built into base R\n\nExample\n\n\ndf1 |&gt; \n  mutate(age_group = if_else(age &gt;= 65, \"older\", \"younger\")) %&gt;%\n  filter(trt == \"A\") %&gt;%\n  arrange(desc(time))\n\n# A tibble: 3 × 6\n     id trt     age  time status age_group\n  &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;    \n1     5 A        64     9      0 younger  \n2     2 A        70     8      0 older    \n3     1 A        65     5      1 older"
  },
  {
    "objectID": "sec2.html#native-pipe-operator",
    "href": "sec2.html#native-pipe-operator",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Native Pipe Operator: |>",
    "text": "Native Pipe Operator: |&gt;\n\nWhat is |&gt;\n\nIntroduced in R 4.1 (hot key: Ctrl + Shift + M)\nPasses the result of one expression into the first argument of the next\nSame idea as %&gt;%, but built into base R\n\nExample\n\n\ndf1 |&gt; # passes tibble data frame df1 to the next function \n  mutate(age_group = if_else(age &gt;= 65, \"older\", \"younger\")) |&gt; # create age group\n  filter(trt == \"A\") |&gt; # filter for treatment A\n  arrange(time) # sort by time\n\n# A tibble: 3 × 6\n     id trt     age  time status age_group\n  &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;    \n1     5 A        64     2      0 younger  \n2     1 A        65     5      1 older    \n3     2 A        70     8      0 older"
  },
  {
    "objectID": "sec2.html#summarizing-and-grouping",
    "href": "sec2.html#summarizing-and-grouping",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Summarizing and Grouping",
    "text": "Summarizing and Grouping\n\nSurvival-specific summaries (e.g., number of events)\n\ngroup_by() and summarize() for descriptive summaries by arm\n\n\ndf1 |&gt; \n  group_by(trt) |&gt; # group by treatment arm\n  summarize( # summarize each group\n    n = n(), # count number of rows (subjects)\n    events = sum(status), # sum of events (status = 1)\n    median_time = median(time) # median survival time\n  )\n\n# A tibble: 2 × 4\n  trt       n events median_time\n  &lt;chr&gt; &lt;int&gt;  &lt;dbl&gt;       &lt;dbl&gt;\n1 A         3      1           5\n2 B         3      2           6"
  },
  {
    "objectID": "sec2.html#dates-to-time-difference",
    "href": "sec2.html#dates-to-time-difference",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Dates to Time Difference",
    "text": "Dates to Time Difference\n\nA data example\n\n\n# Example: raw dates as character strings\ndf2 &lt;- tibble(\n  id = 1:3,\n  rand_date = c(\"2022-01-01\", \"2022-01-15\", \"2022-01-20\"),\n  end_date = c(\"2022-04-01\", \"2022-06-01\", \"2022-03-15\"),\n  status = c(\"dead\", \"censored\", \"dead\")\n)\ndf2\n\n# A tibble: 3 × 4\n     id rand_date  end_date   status  \n  &lt;int&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;   \n1     1 2022-01-01 2022-04-01 dead    \n2     2 2022-01-15 2022-06-01 censored\n3     3 2022-01-20 2022-03-15 dead"
  },
  {
    "objectID": "sec2.html#parsing-dates-and-calculating-time",
    "href": "sec2.html#parsing-dates-and-calculating-time",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Parsing Dates and Calculating Time",
    "text": "Parsing Dates and Calculating Time\n\nUsing lubridate to parse dates\n\nymd() for “year-month-day” format\nmdy() for “month-day-year” format\n\n\n# Parse dates and calculate time/status\ndf2 |&gt; \n  mutate(\n    rand_date = ymd(rand_date), # convert character to Date\n    end_date = ymd(end_date), # convert character to Date\n    time = as.numeric(end_date - rand_date), # calculate time in days\n    status = if_else(status == \"dead\", 1, 0) # convert status to 1/0\n  )\n\n# A tibble: 3 × 5\n     id rand_date  end_date   status  time\n  &lt;int&gt; &lt;date&gt;     &lt;date&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1     1 2022-01-01 2022-04-01      1    90\n2     2 2022-01-15 2022-06-01      0   137\n3     3 2022-01-20 2022-03-15      1    54"
  },
  {
    "objectID": "sec2.html#exercise-calculate-survival-time",
    "href": "sec2.html#exercise-calculate-survival-time",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Calculate Survival Time",
    "text": "Exercise: Calculate Survival Time\n\nCalculate time and status variables for df3:\n\n\n# create a df3 with dates in the form of month-day-year\ndf3 &lt;- tibble(\n  id = 1:3,\n  rand_date = c(\"Jan-01-2022\", \"01-15-2022\", \"01-20-2022\"),\n  end_date = c(\"04-01-2022\", \"Jun-01-2022\", \"03-15-2022\"),\n  status = c(\"dead\", \"censored\", \"dead\")\n)\ndf3\n\n# A tibble: 3 × 4\n     id rand_date   end_date    status  \n  &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;   \n1     1 Jan-01-2022 04-01-2022  dead    \n2     2 01-15-2022  Jun-01-2022 censored\n3     3 01-20-2022  03-15-2022  dead    \n\n\n\n\nSolution\ndf3 |&gt; \n  mutate(\n    rand_date = mdy(rand_date), # convert character to Date\n    end_date = mdy(end_date), # convert character to Date\n    time = as.numeric(end_date - rand_date), # calculate time in days\n    status = if_else(status == \"dead\", 1, 0) # convert status to 1/0\n  )"
  },
  {
    "objectID": "sec2.html#exercise-calculate-survival-time-i",
    "href": "sec2.html#exercise-calculate-survival-time-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Calculate Survival Time (I)",
    "text": "Exercise: Calculate Survival Time (I)\n\nCalculate time and status variables for df3:\n\n\n# create a df3 with dates in the form of month-day-year\ndf3 &lt;- tibble(\n  id = 1:3,\n  rand_date = c(\"Jan-01-2022\", \"01-15-2022\", \"01-20-2022\"),\n  end_date = c(\"04-01-2022\", \"Jun-01-2022\", \"03-15-2022\"),\n  status = c(\"dead\", \"censored\", \"dead\")\n)\ndf3\n\n# A tibble: 3 × 4\n     id rand_date   end_date    status  \n  &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;   \n1     1 Jan-01-2022 04-01-2022  dead    \n2     2 01-15-2022  Jun-01-2022 censored\n3     3 01-20-2022  03-15-2022  dead"
  },
  {
    "objectID": "sec2.html#exercise-calculate-survival-time-ii",
    "href": "sec2.html#exercise-calculate-survival-time-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Calculate Survival Time (II)",
    "text": "Exercise: Calculate Survival Time (II)\n\nHint: use mdy() to parse dates\n\n\n\nSolution\ndf3 |&gt; \n  mutate(\n    rand_date = mdy(rand_date), # convert character to Date\n    end_date = mdy(end_date), # convert character to Date\n    time = as.numeric(end_date - rand_date), # calculate time in days\n    status = if_else(status == \"dead\", 1, 0) # convert status to 1/0\n  )\n\n\n\nMore about manipulating dates\n\nlubridate official documentation\nR for Data Science: Dates and times"
  },
  {
    "objectID": "sec2.html#parsing-censored-observations",
    "href": "sec2.html#parsing-censored-observations",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Parsing Censored Observations",
    "text": "Parsing Censored Observations\n\nAlternative formats for censored times\n\n\"32+\", \"&gt;17\", etc\nparse_number() for get time; str_detect() for status\n\n\n# Example data: relapse times with \"+\" indicating censoring\nMP &lt;- c(10,  \"32+\", 23, \"25+\")\n# Convert to (time, status) format\ndf4 &lt;- tibble(\n  MP = MP,                               # Original data\n  time = parse_number(MP),               # Extract numeric part\n  status = 1 - str_detect(MP, \"\\\\+\")     # Censored if \"+\" detected\n)\ndf4\n\n# A tibble: 4 × 3\n  MP     time status\n  &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 10       10      1\n2 32+      32      0\n3 23       23      1\n4 25+      25      0"
  },
  {
    "objectID": "sec2.html#exercise-parse-censored-times",
    "href": "sec2.html#exercise-parse-censored-times",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Parse Censored Times",
    "text": "Exercise: Parse Censored Times\n\nTask: Parse MP in df5 to create time and status\n\n\ndf5 &lt;- tibble(\n  MP = c(10, \"32+\", 23, \"&gt;25\")\n)\n\n\n\nSolution\ndf5 |&gt; \n  mutate(\n    time = parse_number(MP), # extract numeric part\n    status = 1 - str_detect(MP, \"\\\\+|&gt;\") # censored if \"+\" or (|) \"&gt;\" detected\n  )\n\n\n\nMore on string operation\n\nstringr official documentation\nR for Data Science: Strings"
  },
  {
    "objectID": "sec2.html#reshaping-data",
    "href": "sec2.html#reshaping-data",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Reshaping Data",
    "text": "Reshaping Data\n\nWhy reshape?\n\nMultiple events per subject\nWide format (multiple columns) \\(\\rightarrow\\) long format (one row per event)\n\n\n\n# Example: wide format with multiple events\ndf6 &lt;- tibble(\n  id = 1:3,\n  prog_time = c(10, 20, 30),\n  prog_status = c(1, 0, 1), # 1 = progression, 0 = censored\n  death_time = c(15, 20, 35),\n  death_status = c(0, 1, 1) # 1 = dead, 0 = censored\n)\n# 1: progression at 10, censored at 15\n# 2: dead at 20 without progression\n# 3: progression at 30, dead at 35\ndf6\n\n# A tibble: 3 × 5\n     id prog_time prog_status death_time death_status\n  &lt;int&gt;     &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n1     1        10           1         15            0\n2     2        20           0         20            1\n3     3        30           1         35            1"
  },
  {
    "objectID": "sec2.html#wide-to-long",
    "href": "sec2.html#wide-to-long",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Wide to Long",
    "text": "Wide to Long\n\nUsing pivot_longer()\n\nConvert wide format to long format\nSpecify names_to and values_to for new columns\n\n\n\ndf7 &lt;- df6 |&gt; \n  pivot_longer(\n    cols = c(prog_time, prog_status, death_time, death_status), # columns to reshape\n    names_to = c(\"event\", \".value\"), # .value keeps the variable name, event is the new column\n    names_pattern = \"(.*)_(.*)\" # split by underscore\n  ) \ndf7\n\n# A tibble: 6 × 4\n     id event  time status\n  &lt;int&gt; &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1     1 prog     10      1\n2     1 death    15      0\n3     2 prog     20      0\n4     2 death    20      1\n5     3 prog     30      1\n6     3 death    35      1"
  },
  {
    "objectID": "sec2.html#exercise-clean-up",
    "href": "sec2.html#exercise-clean-up",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Clean Up",
    "text": "Exercise: Clean Up\n\nTask: Clean up df7 to create a tidy survival dataset\n\nRemove rows with event = prog and status = 0 (non-terminal event)\nRecode status = 2 for death events\n\n\n\n\nSolution\ndf7 |&gt; \n  filter(\n    !(event == \"prog\" & status == 0) # remove non-occurrence of non-terminal events\n    ) |&gt; \n  mutate(\n    status = if_else(event == \"death\" & status == 1, 2, status) # recode death status\n  ) \n# # A tibble: 5 × 4\n#      id event  time status\n#   &lt;int&gt; &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt;\n# 1     1 prog     10      1\n# 2     1 death    15      0\n# 3     2 death    20      2\n# 4     3 prog     30      1\n# 5     3 death    35      2\n\n\n\nMore on reshaping data\n\ntidyr official documentation\nR for Data Science: Data tidying"
  },
  {
    "objectID": "sec2.html#swimmer-plot",
    "href": "sec2.html#swimmer-plot",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Swimmer Plot",
    "text": "Swimmer Plot\n\nWhat is a swimmer plot?\n\nVisualizes subject follow-up\nEach row represents a subject\nHorizontal lines show time to event/censoring"
  },
  {
    "objectID": "sec2.html#creating-a-swimmer-plot",
    "href": "sec2.html#creating-a-swimmer-plot",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Creating a Swimmer Plot",
    "text": "Creating a Swimmer Plot\n\nCode to reproduce previous plot\n\n\n# Specify the plot\nfig8 &lt;- df8 |&gt; \n  # Set-up: id on the y-axis, time on the x-axis\n  ggplot(aes(x = time, y = reorder(id, time))) + # reorder id by time\n  # Add geometric objects\n  geom_linerange(aes(xmin = 0, xmax = time)) + # horizontal lines from 0 to time\n  # Add points for events/censoring, distinguish by status\n  geom_point(aes(shape = factor(status)), size = 2.5, fill = \"white\") +\n  # Add vertical line at x = 0\n  geom_vline(xintercept = 0, linewidth = 1) +\n  theme_minimal() + # use minimal theme\n  # Format y axis\n  scale_y_discrete(name = \"Rats\") + # y-axis label\n  # Format x axis (label, breaks, no expansion on left, 0.05 expansion on right)\n  scale_x_continuous(name = \"Time (days)\", breaks = seq(0, 100, by = 20), \n                     expand = expansion(c(0, 0.05))) +\n  # Format point shape (pch = 23 for censoring, pch = 19 for event; label shape)\n  scale_shape_manual(values = c(23, 19), labels = c(\"Censoring\", \"Tumor development\")) +\n  # Further formatting using theme()\n  theme(\n    legend.position = \"top\", # place legend at the top\n    legend.title = element_blank(), # no legend title\n    axis.text.y = element_blank(), # no y-axis labels (otherwise id's will be printed)\n    axis.ticks.y = element_blank(), # no y-axis ticks\n    panel.grid.major.y = element_blank(), # no major grid lines on y-axis\n    legend.text = element_text(size = 11) # legend text size\n  )\n\n# Display the plot\nfig8"
  },
  {
    "objectID": "sec2.html#swimmer-plot-basics",
    "href": "sec2.html#swimmer-plot-basics",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Swimmer Plot Basics",
    "text": "Swimmer Plot Basics\n\nUsing ggplot2\n\ngeom_linerange() for horizontal lines\ngeom_point() for events\nfacet_wrap() for treatment arms (optional)\n\nA data example\n\n\n# Example data: rat survival times\ndf8 &lt;- tibble(\n  time = c(101, 55, 67, 23, 45, 98, 34, 77, 91, 104, 88),\n  status = c(0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1),\n  group = c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"A\", \"B\", \"B\", \"A\", \"B\")\n) |&gt; \n  mutate(\n    id = row_number(), # create id column using row number\n    .before = 1 # place id before time\n  )"
  },
  {
    "objectID": "sec2.html#creating-swimmer-plot-with-ggplot2",
    "href": "sec2.html#creating-swimmer-plot-with-ggplot2",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Creating Swimmer Plot with ggplot2",
    "text": "Creating Swimmer Plot with ggplot2\n\n# Specify the plot\nfig8 &lt;- df8 |&gt; \n  # Set-up: id on the y-axis, time on the x-axis\n  ggplot(aes(x = time, y = reorder(id, time))) + # reorder id by time\n  # Add geometric objects\n  geom_linerange(aes(xmin = 0, xmax = time)) + # horizontal lines from 0 to time\n  # Add points for events/censoring, distinguish by status\n  geom_point(aes(shape = factor(status)), size = 2.5, fill = \"white\") +\n  # Add vertical line at x = 0\n  geom_vline(xintercept = 0, linewidth = 1) +\n  theme_minimal() + # use minimal theme\n  # Format y axis\n  scale_y_discrete(name = \"Rats\") + # y-axis label\n  # Format x axis (label, breaks, no expansion on left, 0.05 expansion on right)\n  scale_x_continuous(name = \"Time (days)\", breaks = seq(0, 100, by = 20), \n                     expand = expansion(c(0, 0.05))) +\n  # Format point shape (pch = 23 for censoring, pch = 19 for event; label shape)\n  scale_shape_manual(values = c(23, 19), labels = c(\"Censoring\", \"Tumor development\")) +\n  # Further formatting using theme()\n  theme(\n    legend.position = \"top\", # place legend at the top\n    legend.title = element_blank(), # no legend title\n    axis.text.y = element_blank(), # no y-axis labels (otherwise id's will be printed)\n    axis.ticks.y = element_blank(), # no y-axis ticks\n    panel.grid.major.y = element_blank(), # no major grid lines on y-axis\n    legend.text = element_text(size = 11) # legend text size\n  )\n\n# Display the plot\nfig8"
  },
  {
    "objectID": "sec2.html#exercise-swimmer-plot-by-group",
    "href": "sec2.html#exercise-swimmer-plot-by-group",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Swimmer Plot by Group",
    "text": "Exercise: Swimmer Plot by Group\n\nTask: Create a swimmer plot for df8 by group\n\nUse facet_wrap() to create separate panels for each group\nAdd a title “Swimmer Plot of Rat Survival Times”\n\n\n\n\n\nSolution\nfig8 + facet_wrap(~ group, scales = \"free\") + # facet by group (using different y-axis scales)\n  labs(title = \"Swimmer Plot of Rat Survival Times\") # add title"
  },
  {
    "objectID": "sec2.html#descriptive-statistics",
    "href": "sec2.html#descriptive-statistics",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Descriptive Statistics",
    "text": "Descriptive Statistics\n\nImportance of Table 1\n\nSummarizes baseline characteristics\nProvides context for formal analysis\n\nUsing gtsummary\n\ntbl_summary() for descriptive statistics\nadd_p() for p-values comparing groups (not recommended for randomized trials)\nadd_overall to add overall summary\nmodify_header() to customize table headers"
  },
  {
    "objectID": "sec2.html#a-simple-example-1",
    "href": "sec2.html#a-simple-example-1",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "A Simple Example",
    "text": "A Simple Example\n\nExample dataset\n\n\n# Example data: 10 subjects with treatment, age, and sex\ndf9 &lt;- tibble(\n  id = 1:10,\n  time = c(101, 55, 67, 23, 45, 98, 34, 77, 91, 104),\n  status = c(0, 1, 1, 0, 1, 0, 1, 0, 1, 0), # 0 = censored, 1 = event\n  trt = c(\"A\", \"A\", \"B\", \"B\", \"A\", \"B\", \"A\", \"B\", \"A\", \"B\"),\n  sex = c(\"M\", \"F\", \"M\", \"F\", \"M\", \"F\", \"M\", \"F\", \"M\", \"F\"),\n  age = c(65, 70, 58, 60, 64, 59, 66, 62, 68, 61)\n)\nhead(df9)\n\n# A tibble: 6 × 6\n     id  time status trt   sex     age\n  &lt;int&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n1     1   101      0 A     M        65\n2     2    55      1 A     F        70\n3     3    67      1 B     M        58\n4     4    23      0 B     F        60\n5     5    45      1 A     M        64\n6     6    98      0 B     F        59"
  },
  {
    "objectID": "sec2.html#creating-a-summary-table",
    "href": "sec2.html#creating-a-summary-table",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Creating a Summary Table",
    "text": "Creating a Summary Table\n\n\nlibrary(gtsummary) # load package\ndf9 |&gt; \n  tbl_summary(\n    by = trt,                            # summarize by treatment arm\n    include = c(sex, age, time, status), # include specific variables\n    label = list(                        # label variables\n      time = \"Follow-up time (months)\",\n      status = \"Events\"\n    )\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nA, N = 51\nB, N = 51\n\n\n\n\nsex\n\n\n\n\n\n\n    F\n1 (20%)\n4 (80%)\n\n\n    M\n4 (80%)\n1 (20%)\n\n\nage\n66.0 (65.0, 68.0)\n60.0 (59.0, 61.0)\n\n\nFollow-up time (months)\n55 (45, 91)\n77 (67, 98)\n\n\nEvents\n4 (80%)\n1 (20%)\n\n\n\n1 n (%); Median (IQR)"
  },
  {
    "objectID": "sec2.html#basic-syntax-of-tbl_summary",
    "href": "sec2.html#basic-syntax-of-tbl_summary",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Basic Syntax of tbl_summary()",
    "text": "Basic Syntax of tbl_summary()\n\nCommon arguments\n\nby = \"group\" to summarize by group\ninclude = c(\"variable1\", \"variable2\") to include specific variables\nlabel = list(variable = \"Label\") to customize variable labels\nstatistic = list(variable ~ \"statistic\") to specify statistics\n\nstatistic = list(all_continuous() ~ \"{mean} ({sd})\") for mean and SD\n\ndigits = list(variable ~ 2) to set decimal places"
  },
  {
    "objectID": "sec2.html#exercise-summarize-gbc-data",
    "href": "sec2.html#exercise-summarize-gbc-data",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Summarize GBC Data",
    "text": "Exercise: Summarize GBC Data\n\nTask: Create a summary table for the GBC mortality data\n\nSummarize by hormone therapy (hormone)\nInclude variables: time, status, age, meno, size, grade, nodes, prog, estrg\nLabel variables appropriately\nAdd overall summary column at the end\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nHormone, N = 2461\nNo Hormone, N = 4401\nOverall, N = 6861\n\n\n\n\nFollow-up time (months)\n48 (29, 61)\n41 (25, 57)\n44 (26, 60)\n\n\nDeath\n56 (23%)\n115 (26%)\n171 (25%)\n\n\nAge (years)\n58 (50, 63)\n50 (45, 59)\n53 (46, 61)\n\n\nMenopausal status\n187 (76%)\n209 (48%)\n396 (58%)\n\n\nTumor size (mm)\n25 (20, 35)\n25 (20, 35)\n25 (20, 35)\n\n\nTumor grade\n\n\n\n\n\n\n\n\n    1\n33 (13%)\n48 (11%)\n81 (12%)\n\n\n    2\n163 (66%)\n281 (64%)\n444 (65%)\n\n\n    3\n50 (20%)\n111 (25%)\n161 (23%)\n\n\nNumber of nodes\n3 (1, 7)\n3 (1, 7)\n3 (1, 7)\n\n\nProgesterone (fmol/mg)\n35 (7, 133)\n32 (7, 130)\n33 (7, 132)\n\n\nEstrogen (fmol/mg)\n46 (9, 183)\n32 (8, 92)\n36 (8, 114)\n\n\n\n1 Median (IQR); n (%)"
  },
  {
    "objectID": "sec2.html#exercise-summarize-gbc-data-i",
    "href": "sec2.html#exercise-summarize-gbc-data-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Summarize GBC Data (I)",
    "text": "Exercise: Summarize GBC Data (I)\n\nTask: Summarize the GBC mortality data (gbc_mort.txt) like below\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nHormone, N = 2461\nNo Hormone, N = 4401\nOverall, N = 6861\n\n\n\n\nFollow-up time (months)\n48 (29, 61)\n41 (25, 57)\n44 (26, 60)\n\n\nDeath\n56 (23%)\n115 (26%)\n171 (25%)\n\n\nAge (years)\n58 (50, 63)\n50 (45, 59)\n53 (46, 61)\n\n\nMenopausal status\n187 (76%)\n209 (48%)\n396 (58%)\n\n\nTumor size (mm)\n25 (20, 35)\n25 (20, 35)\n25 (20, 35)\n\n\nTumor grade\n\n\n\n\n\n\n\n\n    1\n33 (13%)\n48 (11%)\n81 (12%)\n\n\n    2\n163 (66%)\n281 (64%)\n444 (65%)\n\n\n    3\n50 (20%)\n111 (25%)\n161 (23%)\n\n\nNumber of nodes\n3 (1, 7)\n3 (1, 7)\n3 (1, 7)\n\n\nProgesterone (fmol/mg)\n35 (7, 133)\n32 (7, 130)\n33 (7, 132)\n\n\nEstrogen (fmol/mg)\n46 (9, 183)\n32 (8, 92)\n36 (8, 114)\n\n\n\n1 Median (IQR); n (%)"
  },
  {
    "objectID": "sec2.html#exercise-summarize-gbc-data-i-1",
    "href": "sec2.html#exercise-summarize-gbc-data-i-1",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Summarize GBC Data (I)",
    "text": "Exercise: Summarize GBC Data (I)\n\nPoints to note\n\nSummarize by hormone therapy (hormone)\nInclude variables: time, status, age, meno, size, grade, nodes, prog, estrg\nLabel variables appropriately\nAdd overall summary column at the end\n\n\n\n\nSolution\n# Load GBC mortality data (one record per patient)\ngbc_mort &lt;- read.table(\"data/gbc_mort.txt\")\n# Create the summary table\ngbc_mort |&gt; \n  mutate( # relabel hormone and menopausal status\n    hormone = if_else(hormone == 1, \"No Hormone\", \"Hormone\"),\n    meno = if_else(meno == 1, \"No\", \"Yes\") \n  ) |&gt; \n  tbl_summary( # create table\n    by = hormone, # summarize by hormone therapy\n    include = ! id, # exclude id from summary\n    # Label variables\n    label = list(\n      time = \"Follow-up time (months)\",\n      status = \"Death\",\n      hormone = \"Hormone therapy\",\n      age = \"Age (years)\",\n      meno = \"Menopausal status\",\n      size = \"Tumor size (mm)\",\n      grade = \"Tumor grade\",\n      nodes = \"Number of nodes\",\n      prog = \"Progesterone (fmol/mg)\",\n      estrg = \"Estrogen (fmol/mg)\"\n    ),\n  ) |&gt;\n  add_overall(last = TRUE) # Add overall column, at the end"
  },
  {
    "objectID": "sec2.html#exercise-summarize-gbc-data-iii",
    "href": "sec2.html#exercise-summarize-gbc-data-iii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Summarize GBC Data (III)",
    "text": "Exercise: Summarize GBC Data (III)\n\n\nSolution\n# Load GBC mortality data (one record per patient)\ngbc_mort &lt;- read.table(\"data/gbc_mort.txt\")\n# Create the summary table\ngbc_mort |&gt; \n  mutate( # relabel hormone and menopausal status\n    hormone = if_else(hormone == 1, \"No Hormone\", \"Hormone\"),\n    meno = if_else(meno == 1, \"No\", \"Yes\") \n  ) |&gt; \n  tbl_summary( # create table\n    by = hormone, # summarize by hormone therapy\n    include = ! id, # exclude id from summary\n    # Label variables\n    label = list(\n      time = \"Follow-up time (months)\",\n      status = \"Death\",\n      hormone = \"Hormone therapy\",\n      age = \"Age (years)\",\n      meno = \"Menopausal status\",\n      size = \"Tumor size (mm)\",\n      grade = \"Tumor grade\",\n      nodes = \"Number of nodes\",\n      prog = \"Progesterone (fmol/mg)\",\n      estrg = \"Estrogen (fmol/mg)\"\n    ),\n  ) |&gt;\n  add_overall(last = TRUE) # Add overall column, at the end"
  },
  {
    "objectID": "sec2.html#exercise-summarize-gbc-data-ii",
    "href": "sec2.html#exercise-summarize-gbc-data-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Summarize GBC Data (II)",
    "text": "Exercise: Summarize GBC Data (II)\n\nPoints to note\n\nSummarize by hormone therapy (hormone)\nInclude variables: time, status, age, meno, size, grade, nodes, prog, estrg\nLabel variables appropriately\nAdd overall summary column at the end"
  },
  {
    "objectID": "sec2.html#exercise-summarize-gbc-data-iv",
    "href": "sec2.html#exercise-summarize-gbc-data-iv",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Summarize GBC Data (IV)",
    "text": "Exercise: Summarize GBC Data (IV)\n\nTask: summarize relapse and death data from gbc.txt\n\nHint: group_by(id) and summarize()\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nHormone, N = 2461\nNo Hormone, N = 4401\nOverall, N = 6861\n\n\n\n\nRelapse\n94 (38%)\n205 (47%)\n299 (44%)\n\n\nDeath\n56 (23%)\n115 (26%)\n171 (25%)\n\n\nComposite\n94 (38%)\n205 (47%)\n299 (44%)\n\n\nRelapse then death\n56 (23%)\n115 (26%)\n171 (25%)\n\n\n\n1 n (%)"
  },
  {
    "objectID": "sec2.html#exercise-summarize-gbc-data-v",
    "href": "sec2.html#exercise-summarize-gbc-data-v",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Summarize GBC Data (V)",
    "text": "Exercise: Summarize GBC Data (V)\n\n\nSolution\n# Load GBC relapse and death data (long format)\ngbc &lt;- read.table(\"data/gbc.txt\")\n# Create the summary table\ngbc |&gt; \n  group_by(id, hormone) |&gt; \n  summarize(\n    rel = any(status == 1), # boolean for existence of a relapse (status=1)\n    death = any(status == 2), # boolean for existence of a death (status=2)\n    comp = rel | death,  # boolean for existence of either relapse or death\n    both = rel & death, # boolean for existence of both relapse and death\n  ) |&gt; \n  mutate(\n    hormone = if_else(hormone == 1, \"No Hormone\", \"Hormone\") # relabel hormone therapy\n  ) |&gt; \n  tbl_summary( # create table\n    by = hormone, # summarize by hormone therapy\n    include = c(rel, death, comp, both), # include specific variables\n    # Label variables\n    label = list(\n      rel = \"Relapse\",\n      death = \"Death\",\n      comp = \"Composite\",\n      both = \"Relapse then death\"\n    )\n  ) |&gt; \n  add_overall(last = TRUE) # Add overall column, at the end"
  },
  {
    "objectID": "sec2.html#key-takeaways",
    "href": "sec2.html#key-takeaways",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nTidyverse provides powerful tools for data manipulation and visualization\nTidy data principles simplify analysis and visualization\nSurvival data may require pre-processing steps (dplyr, tidyr,lubridate)\nSwimmer plots effectively visualize subject follow-up (ggplot2)\nDescriptive statistics can be easily summarized using gtsummary::tbl_summary()"
  },
  {
    "objectID": "sec2.html#next-steps",
    "href": "sec2.html#next-steps",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Next Steps",
    "text": "Next Steps\n\nFormat analysis results from the survival package:\n\nNonparametric estimates with survfit()\nRegression models with coxph()\n\nExplore advanced visualization techniques:\n\nKaplan–Meier curves with ggsurvfit or survminer\nLayered plots using ggplot2\nAnnotated plots for publications"
  },
  {
    "objectID": "sec3.html#key-takeaways",
    "href": "sec3.html#key-takeaways",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nNonparametric survival analysis\n\nUse survival::survfit() for Kaplan-Meier estimates\nUse tidycmprsk::cuminc() for CIF of competing risks\n\nTidy outputs\n\nUse broom::tidy() to convert survfit and tidycuminc objects into tidy data frames\n\nTabulation and visualization\n\nUse gtsummary::tbl_survfit() and tidycumprsk::tbl_cuminc() for tabulating survival estimates\nUse ggsurvfit::ggsurvfit() and ggsurvfit::ggcuminc() for visualizing survival curves and CIF"
  },
  {
    "objectID": "sec1.html",
    "href": "sec1.html",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "",
    "text": "A common type of outcome in medical and clinical studies\n\nStarting point: Randomization, diagnosis, enrollment, birth, etc.\n\nEndpoint (Event of interest): Death, disease onset, hospitalization, etc.\n\nEngineering: Failure times of machines or components (reliability)\nSocial sciences: Time to job change, dropout, or event occurrence\n\n\nRight censoring:\n\nEvent not observed within the follow-up period\nDue to study ending, dropout, or loss to follow-up\nWe only know:\n\\[\nT &gt; C\n\\] where \\(T\\) is event time and \\(C\\) is censoring time\n\n\n\n\n\n\nA rat tumorigenicity study\n\n\n\n\n\n\n\n\n\n\nSurvival function: \\(S(t) = \\Pr(T &gt; t)\\)\n\nProbability subject survives beyond time \\(t\\)\n\nHazard function:\n\\[\n\\lambda(t) = \\lim_{\\Delta t \\to 0} \\frac{\\Pr(t \\leq T &lt; t + \\Delta t \\mid T \\geq t)}{\\Delta t}\n\\]\n\nInstantaneous risk of failure at time \\(t\\)\n\nRelationship \\[\nS(t) = \\exp\\left(-\\int_0^t \\lambda(u) \\mathrm{d}u\\right)\n\\]\n\nCumulative hazard function: \\(\\Lambda(t) = \\int_0^t \\lambda(u) \\mathrm{d}u\\)\n\n\n\n\n\n\nNotation: \\((X, \\delta)\\)\n\n\\(X=\\min(T, C)\\): observation time (event or censoring)\n\\(\\delta = I(T\\leq C)\\): event indicator (1 for event, 0 for censoring)\n\nData format\n\n# time = X, status = delta (tidy format)\n    id    time status\n1     1     5     1\n2     2     3     0\n3     3     8     1\n4     4     2     0\n5     5     6     1\n# Alternatively \n    id    time \n1     1     5   \n2     2     3+  \n3     3     8  \n4     4     2+  \n5     5     6"
  },
  {
    "objectID": "np.html",
    "href": "np.html",
    "title": "Module 3. Nonparametric Survival Analysis",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)",
    "crumbs": [
      "Home",
      "Module 3. Nonparametric Survival Analysis"
    ]
  },
  {
    "objectID": "np.html#slides",
    "href": "np.html#slides",
    "title": "Module 3. Nonparametric Survival Analysis",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)",
    "crumbs": [
      "Home",
      "Module 3. Nonparametric Survival Analysis"
    ]
  },
  {
    "objectID": "np.html#r-code",
    "href": "np.html#r-code",
    "title": "Module 3. Nonparametric Survival Analysis",
    "section": "R code",
    "text": "R code\n\n\nShow the code\n# -------------------------------------------\n# Survival Analysis: Module 3 Code\n# -------------------------------------------\n\n# Load necessary packages\nlibrary(tidyverse)     # For data manipulation\nlibrary(survival)      # For survival analysis functions\nlibrary(broom)         # For tidying model output\nlibrary(gtsummary)     # For tabulating survival estimates\nlibrary(ggsurvfit)     # For tidy survival plotting\nlibrary(tidycmprsk)    # For competing risks analysis\nlibrary(patchwork)     # For combining ggplots\n\n# ---------------------------\n# 1. Load and Prepare Data\n# ---------------------------\n\n# Load mortality + relapse data\ngbc &lt;- read.table(\"data/gbc.txt\", header = TRUE)\n\n# Prepare dataset: collapse to time-to-first event\ndf &lt;- gbc |&gt;                # Start with raw dataset\n  group_by(id) |&gt;           # Group by subject ID\n  arrange(time) |&gt;          # Sort by time\n  slice(1) |&gt;               # Keep the first event per subject\n  ungroup()                 # Remove grouping\n\n# ---------------------------\n# 2. Kaplan-Meier Estimation\n# ---------------------------\n\n# Fit Kaplan-Meier curves by hormone therapy group\nkm_fit &lt;- survfit(Surv(time, status &gt; 0) ~ hormone, data = df)\n\n# Summarize KM estimates at specific time points\nsummary(km_fit, times = c(6, 12, 24, 36))\n\n# ---------------------------\n# 3. Tabulate Survival Estimates\n# ---------------------------\n\n# Create summary table of survival estimates\ntbl_survfit(\n  km_fit,                          # survfit object\n  label = \"Hormone\",              # Row label\n  times = c(6, 12, 24, 36),       # Time points\n  label_header = \"Month {time}\"   # Column label\n)\n\n# Tabulate estimates grouped by menopause and tumor grade\ndf |&gt; \n  tbl_survfit(\n    y = Surv(time, status),                     # Survival object\n    include = c(meno, grade),                   # Grouping variables\n    label = list(meno = \"Menopause\", \n                grade = \"Tumor grade\"),         # Row labels\n    times = c(6, 12, 24, 36),                   # Time points\n    label_header = \"Month {time}\"              # Column label\n  )\n\n# Tabulate quantiles (median, quartiles)\ntbl_survfit(\n  km_fit,                                      # survfit object\n  label = \"Hormone\",                           # Row label\n  probs = c(0.25, 0.5, 0.75),                  # Quantiles\n  label_header = \"{100 * prob}% quantile\"      # Column label\n)\n\n# ---------------------------\n# 4. Visualize KM Curves (Base R)\n# ---------------------------\n\n# Plot KM curves with confidence intervals\nplot(km_fit, ylim = c(0, 1),\n     xlab = \"Time (months)\",                   # x-axis label\n     ylab = \"Relapse-free survival probability\", # y-axis label\n     col = c(\"red\", \"blue\"),                   # Line colors\n     conf.int = TRUE)                          # Show confidence intervals\n\n# Add legend to the plot\nlegend(\"bottomleft\", col = c(\"red\", \"blue\"), lty = 1,\n       legend = c(\"No hormone\", \"Hormone\"))\n\n# ---------------------------\n# 5. Enhanced KM Plot with ggsurvfit\n# ---------------------------\n\n# Fit KM curves with relabeled hormone variable\nkm_fit2 &lt;- survfit2(Surv(time, status &gt; 0) ~ hormone,\n                    data = df |&gt; \n                      mutate(hormone = if_else(hormone == 1, \"No hormone\", \"Hormone\")))\n\n# Customize and plot KM curves\nkm_fig &lt;- km_fit2 |&gt; \n  ggsurvfit() +                                 # Base plot\n  add_risktable() +                             # Add risk table\n  add_confidence_interval() +                   # Add confidence bands\n  add_pvalue(caption = \"Log-rank {p.value}\") +  # Add log-rank p-value\n  scale_x_continuous(\"Time (months)\", breaks = seq(0, 84, 12)) +  # x-axis\n  scale_y_continuous(\"Relapse-free survival probability\", limits = c(0, 1)) +  # y-axis\n  theme_classic() +                             # Classic ggplot theme\n  theme(legend.position = \"top\")                # Move legend to top\n\n# Save KM plot to file\nggsave(\"images/km_fig.png\", km_fig, width = 7.5, height = 5)\n\n# ---------------------------\n# 6. Competing Risks Analysis\n# ---------------------------\n\n# Load sample trial data from tidycmprsk package\ndata(\"trial\", package = \"tidycmprsk\")\n\n# Fit CIF using Gray's estimator for competing risks\ncif_fit &lt;- cuminc(Surv(ttdeath, death_cr) ~ trt, trial)\n\n# ---------------------------\n# 7. Tabulate CIF Estimates\n# ---------------------------\n\n# Tabulate CIF estimates with confidence intervals and p-values\ntbl_cuminc(\n  cif_fit,                                            # cuminc object\n  outcomes = c(\"death from cancer\", \"death other causes\"), # Outcomes\n  times = c(10, 15, 20),                              # Time points\n  label_header = \"Month {time}\"                       # Column label\n) |&gt;\n  add_p()                                             # Add Gray's test p-values\n\n# ---------------------------\n# 8. Plot CIF Curves\n# ---------------------------\n\n# Plot CIF for cancer-related death with customization\ncif_fit |&gt; \n  ggcuminc(outcome = \"death from cancer\") +           # Specify outcome\n  add_confidence_interval() +                         # Confidence bands\n  add_risktable() +                                   # Risk table\n  add_pvalue(caption = \"Gray's test {p.value}\") +     # P-value annotation\n  scale_x_continuous(\"Time (months)\", breaks = seq(0, 24, 6)) + # x-axis\n  scale_y_continuous(\"Cumulative incidence function\", limits = c(0, 0.5)) + # y-axis\n  ggtitle(\"Death from cancer\") +                      # Title\n  theme_classic() +                                   # Theme\n  theme(legend.position = \"top\")                      # Legend at top\n\n# Save CIF plot to file\nggsave(\"images/cif_fig.png\", width = 7.5, height = 5)\n\n# ---------------------------\n# 9. Combine CIF Plots by Outcome\n# ---------------------------\n\n# Define helper function to generate CIF plots\ncif_plot &lt;- function(cif_fit, outcome){\n  cif_fit |&gt; \n    ggcuminc(outcome = outcome) +\n    add_confidence_interval() +\n    scale_x_continuous(\"Time (months)\", breaks = seq(0, 24, 6)) +\n    scale_y_continuous(\"Cumulative incidence function\", limits = c(0, 0.5)) +\n    ggtitle(str_to_sentence(outcome)) +\n    theme_classic() +\n    theme(legend.position = \"top\")\n}\n\n# Create plots for each event type\ncif_cancer_plot &lt;- cif_plot(cif_fit, \"death from cancer\")\ncif_other_plot  &lt;- cif_plot(cif_fit, \"death other causes\")\n\n# Combine plots into single display\ncif_trial &lt;- cif_cancer_plot + cif_other_plot + \n  plot_layout(guides = \"collect\") & theme(legend.position = \"top\")\n\n# Save combined plot to file\nggsave(\"images/cif_combined_fig.png\", cif_trial, width = 8, height = 4)",
    "crumbs": [
      "Home",
      "Module 3. Nonparametric Survival Analysis"
    ]
  },
  {
    "objectID": "sec3.html#gbc-relapse-free-survival",
    "href": "sec3.html#gbc-relapse-free-survival",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "GBC: Relapse-Free Survival",
    "text": "GBC: Relapse-Free Survival\n\nUse dplyr to get time-to-first event\n\n\nlibrary(tidyverse) # Load tidyverse packages\n# Load mortality + relapse data\ngbc &lt;- read.table(\"data/gbc.txt\", header = TRUE)\ndf &lt;- gbc |&gt;  # calculate time to first event (relapse or death)\n  group_by(id) |&gt; # group by id\n  arrange(time) |&gt; # sort rows by time\n  slice(1) |&gt;      # get the first row within each id\n  ungroup()     # remove grouping\n# Display the first few rows of the data\nhead(df) \n\n# A tibble: 6 × 11\n     id  time status hormone   age  meno  size grade nodes  prog estrg\n  &lt;int&gt; &lt;dbl&gt;  &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1     1 43.8       1       1    38     1    18     3     5   141   105\n2     2 46.6       1       1    52     1    20     1     1    78    14\n3     3 41.9       1       1    47     1    30     2     1   422    89\n4     4  4.85      0       1    40     1    24     1     3    25    11\n5     5 61.1       0       2    64     2    19     2     1    19     9\n6     6 63.4       0       2    49     2    56     1     3   356    64"
  },
  {
    "objectID": "sec3.html#survfit-output",
    "href": "sec3.html#survfit-output",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Survfit() Output",
    "text": "Survfit() Output\n\nKM estimates by hormone therapy\n\n\nlibrary(survival) # Load survival package\n# Fit KM estimates by hormone group\nkm_fit &lt;- survfit(Surv(time, status) ~ hormone, data = df)\n# summarize the KM fit object\nsummary(km_fit)\n\nCall: survfit(formula = Surv(time, status) ~ hormone, data = df)\n\n                hormone=1 \n  time n.risk n.event survival std.err lower 95% CI upper 95% CI\n  2.36    430       1    0.998 0.00232       0.9931        1.000\n  3.21    429       1    0.995 0.00328       0.9889        1.000\n  3.70    428       1    0.993 0.00401       0.9852        1.000\n  3.93    427       1    0.991 0.00463       0.9817        1.000\n  5.25    425       1    0.988 0.00517       0.9783        0.999\n  5.61    424       1    0.986 0.00566       0.9750        0.997\n  5.67    423       1    0.984 0.00611       0.9718        0.996\n  5.74    422       1    0.981 0.00652       0.9687        0.994\n  5.93    420       1    0.979 0.00691       0.9656        0.993\n  6.26    419       1    0.977 0.00728       0.9625        0.991\n  6.39    418       1    0.974 0.00763       0.9595        0.989\n  6.72    416       1    0.972 0.00796       0.9565        0.988\n  7.31    415       1    0.970 0.00828       0.9536        0.986\n  7.64    414       1    0.967 0.00859       0.9507        0.984\n  7.90    413       1    0.965 0.00888       0.9477        0.983\n  7.93    412       1    0.963 0.00916       0.9449        0.981\n  8.10    411       1    0.960 0.00943       0.9420        0.979\n  8.16    410       1    0.958 0.00970       0.9391        0.977\n  8.23    409       1    0.956 0.00995       0.9363        0.975\n  8.92    408       1    0.953 0.01020       0.9335        0.973\n  9.21    405       2    0.949 0.01068       0.9279        0.970\n  9.34    403       2    0.944 0.01113       0.9223        0.966\n  9.44    401       1    0.942 0.01135       0.9195        0.964\n  9.61    400       1    0.939 0.01156       0.9168        0.962\n 10.00    399       1    0.937 0.01177       0.9140        0.960\n 10.07    398       1    0.934 0.01198       0.9113        0.958\n 10.10    397       1    0.932 0.01217       0.9085        0.956\n 10.36    395       1    0.930 0.01237       0.9058        0.954\n 10.79    393       1    0.927 0.01256       0.9031        0.952\n 11.02    392       1    0.925 0.01275       0.9004        0.950\n 11.08    391       3    0.918 0.01330       0.8922        0.944\n 11.25    388       1    0.916 0.01347       0.8895        0.942\n 11.28    387       1    0.913 0.01364       0.8868        0.940\n 11.41    386       1    0.911 0.01381       0.8841        0.938\n 11.48    385       1    0.908 0.01398       0.8815        0.936\n 11.57    384       1    0.906 0.01414       0.8788        0.934\n 11.74    383       1    0.904 0.01430       0.8761        0.932\n 11.77    382       2    0.899 0.01461       0.8708        0.928\n 11.80    380       1    0.897 0.01476       0.8682        0.926\n 12.13    379       2    0.892 0.01506       0.8629        0.922\n 12.16    377       1    0.890 0.01520       0.8602        0.920\n 12.20    376       1    0.887 0.01534       0.8576        0.918\n 12.30    375       1    0.885 0.01548       0.8550        0.916\n 12.43    374       1    0.882 0.01562       0.8523        0.914\n 12.62    373       1    0.880 0.01576       0.8497        0.911\n 13.21    372       1    0.878 0.01589       0.8471        0.909\n 13.61    371       1    0.875 0.01603       0.8445        0.907\n 13.67    370       1    0.873 0.01616       0.8419        0.905\n 13.77    369       2    0.868 0.01641       0.8367        0.901\n 13.97    366       1    0.866 0.01654       0.8340        0.899\n 14.30    365       1    0.863 0.01666       0.8314        0.897\n 14.36    364       1    0.861 0.01678       0.8288        0.895\n 14.62    363       1    0.859 0.01690       0.8262        0.893\n 14.69    362       1    0.856 0.01702       0.8236        0.890\n 14.72    361       1    0.854 0.01714       0.8211        0.888\n 14.92    360       1    0.852 0.01726       0.8185        0.886\n 14.95    359       1    0.849 0.01737       0.8159        0.884\n 15.08    358       1    0.847 0.01748       0.8133        0.882\n 15.25    356       1    0.845 0.01759       0.8107        0.880\n 15.44    355       1    0.842 0.01771       0.8081        0.878\n 15.61    354       2    0.837 0.01792       0.8030        0.873\n 15.77    352       1    0.835 0.01803       0.8004        0.871\n 15.93    351       1    0.833 0.01813       0.7978        0.869\n 16.07    349       1    0.830 0.01824       0.7952        0.867\n 16.10    348       2    0.825 0.01844       0.7901        0.862\n 16.23    346       1    0.823 0.01854       0.7875        0.860\n 16.49    345       1    0.821 0.01864       0.7849        0.858\n 16.98    344       1    0.818 0.01874       0.7824        0.856\n 17.21    343       1    0.816 0.01884       0.7798        0.854\n 17.34    341       1    0.814 0.01893       0.7772        0.851\n 17.38    339       1    0.811 0.01903       0.7747        0.849\n 17.54    338       1    0.809 0.01912       0.7721        0.847\n 17.57    337       1    0.806 0.01922       0.7695        0.845\n 17.61    336       1    0.804 0.01931       0.7670        0.843\n 17.84    334       1    0.802 0.01940       0.7644        0.840\n 17.87    333       1    0.799 0.01949       0.7618        0.838\n 17.93    331       1    0.797 0.01958       0.7592        0.836\n 17.97    330       1    0.794 0.01967       0.7566        0.834\n 18.03    329       2    0.789 0.01984       0.7515        0.829\n 18.10    327       1    0.787 0.01993       0.7489        0.827\n 18.16    325       1    0.785 0.02001       0.7463        0.825\n 18.46    324       1    0.782 0.02010       0.7438        0.823\n 18.72    321       1    0.780 0.02018       0.7412        0.820\n 18.85    320       1    0.777 0.02027       0.7386        0.818\n 18.95    319       1    0.775 0.02035       0.7360        0.816\n 18.98    318       1    0.772 0.02043       0.7334        0.814\n 19.21    317       1    0.770 0.02051       0.7308        0.811\n 19.48    316       2    0.765 0.02067       0.7257        0.807\n 19.51    314       1    0.763 0.02075       0.7231        0.804\n 19.67    312       1    0.760 0.02082       0.7205        0.802\n 20.07    311       1    0.758 0.02090       0.7179        0.800\n 20.39    309       1    0.755 0.02097       0.7153        0.798\n 20.46    306       2    0.750 0.02113       0.7101        0.793\n 20.62    303       1    0.748 0.02120       0.7075        0.791\n 20.89    300       1    0.745 0.02128       0.7049        0.788\n 21.18    298       1    0.743 0.02135       0.7023        0.786\n 21.31    297       1    0.740 0.02143       0.6996        0.784\n 21.97    291       1    0.738 0.02150       0.6969        0.781\n 22.26    289       1    0.735 0.02158       0.6942        0.779\n 22.52    288       1    0.733 0.02165       0.6916        0.776\n 23.18    286       1    0.730 0.02173       0.6889        0.774\n 23.41    285       1    0.728 0.02180       0.6862        0.772\n 23.84    282       1    0.725 0.02188       0.6834        0.769\n 23.97    281       1    0.723 0.02195       0.6807        0.767\n 24.00    280       1    0.720 0.02203       0.6780        0.764\n 24.33    274       1    0.717 0.02210       0.6753        0.762\n 24.43    273       1    0.715 0.02218       0.6725        0.759\n 24.49    272       1    0.712 0.02225       0.6697        0.757\n 24.52    271       1    0.709 0.02232       0.6670        0.755\n 24.72    270       1    0.707 0.02239       0.6642        0.752\n 24.98    267       1    0.704 0.02247       0.6615        0.750\n 25.21    264       1    0.701 0.02254       0.6587        0.747\n 25.31    263       1    0.699 0.02261       0.6559        0.745\n 25.44    261       1    0.696 0.02268       0.6531        0.742\n 25.90    259       1    0.693 0.02275       0.6503        0.740\n 26.07    257       1    0.691 0.02282       0.6474        0.737\n 26.13    256       1    0.688 0.02289       0.6446        0.734\n 26.26    254       1    0.685 0.02296       0.6418        0.732\n 26.39    253       1    0.683 0.02303       0.6389        0.729\n 26.85    252       1    0.680 0.02310       0.6361        0.727\n 27.48    251       1    0.677 0.02316       0.6333        0.724\n 27.61    249       1    0.674 0.02323       0.6305        0.722\n 28.03    246       1    0.672 0.02330       0.6276        0.719\n 28.10    245       1    0.669 0.02336       0.6247        0.716\n 28.16    243       1    0.666 0.02343       0.6219        0.714\n 28.23    241       1    0.663 0.02349       0.6190        0.711\n 28.36    240       1    0.661 0.02356       0.6161        0.709\n 28.39    239       1    0.658 0.02362       0.6133        0.706\n 28.43    238       1    0.655 0.02368       0.6104        0.703\n 28.72    236       1    0.652 0.02375       0.6075        0.701\n 28.95    234       1    0.650 0.02381       0.6046        0.698\n 29.15    233       1    0.647 0.02387       0.6017        0.695\n 29.21    232       1    0.644 0.02393       0.5988        0.693\n 30.98    225       1    0.641 0.02399       0.5959        0.690\n 31.34    224       1    0.638 0.02405       0.5929        0.687\n 31.44    223       1    0.635 0.02412       0.5899        0.685\n 31.48    222       1    0.633 0.02418       0.5870        0.682\n 32.16    216       1    0.630 0.02424       0.5839        0.679\n 32.20    215       1    0.627 0.02430       0.5809        0.676\n 32.23    214       1    0.624 0.02437       0.5778        0.673\n 32.49    212       1    0.621 0.02443       0.5748        0.671\n 32.85    210       1    0.618 0.02449       0.5717        0.668\n 35.41    207       1    0.615 0.02455       0.5686        0.665\n 35.74    203       1    0.612 0.02462       0.5655        0.662\n 35.84    201       1    0.609 0.02468       0.5624        0.659\n 35.87    199       1    0.606 0.02475       0.5592        0.656\n 36.23    195       2    0.600 0.02488       0.5528        0.650\n 36.33    193       1    0.596 0.02495       0.5495        0.647\n 37.93    188       1    0.593 0.02501       0.5463        0.644\n 38.10    187       1    0.590 0.02508       0.5430        0.641\n 38.16    186       1    0.587 0.02515       0.5397        0.638\n 38.36    184       1    0.584 0.02521       0.5364        0.635\n 38.49    182       1    0.581 0.02528       0.5331        0.632\n 39.08    178       1    0.577 0.02534       0.5297        0.629\n 39.11    176       1    0.574 0.02541       0.5263        0.626\n 39.57    173       1    0.571 0.02548       0.5229        0.623\n 39.93    170       1    0.567 0.02555       0.5194        0.620\n 39.97    169       1    0.564 0.02562       0.5160        0.617\n 40.16    167       1    0.561 0.02569       0.5125        0.613\n 41.08    159       1    0.557 0.02577       0.5088        0.610\n 41.93    157       1    0.554 0.02585       0.5051        0.607\n 41.97    156       1    0.550 0.02592       0.5015        0.603\n 42.49    155       1    0.546 0.02600       0.4978        0.600\n 42.82    153       1    0.543 0.02607       0.4941        0.596\n 43.57    151       1    0.539 0.02614       0.4904        0.593\n 43.84    149       1    0.536 0.02622       0.4867        0.590\n 44.79    139       1    0.532 0.02631       0.4827        0.586\n 44.95    138       1    0.528 0.02640       0.4787        0.582\n 45.48    137       1    0.524 0.02649       0.4747        0.579\n 45.51    136       1    0.520 0.02657       0.4707        0.575\n 46.56    134       1    0.516 0.02666       0.4667        0.571\n 47.51    127       1    0.512 0.02675       0.4625        0.568\n 47.87    125       1    0.508 0.02685       0.4582        0.564\n 50.00    116       1    0.504 0.02698       0.4536        0.560\n 50.10    114       1    0.499 0.02710       0.4490        0.555\n 52.03    109       1    0.495 0.02724       0.4442        0.551\n 52.10    108       1    0.490 0.02737       0.4394        0.547\n 52.49    106       1    0.486 0.02750       0.4346        0.543\n 54.92     94       1    0.480 0.02768       0.4291        0.538\n 55.21     91       1    0.475 0.02788       0.4235        0.533\n 55.77     89       1    0.470 0.02807       0.4179        0.528\n 56.72     77       1    0.464 0.02836       0.4113        0.523\n 57.48     72       1    0.457 0.02869       0.4044        0.517\n 59.21     67       1    0.450 0.02906       0.3969        0.511\n 59.48     66       2    0.437 0.02974       0.3822        0.499\n 65.25     39       1    0.426 0.03102       0.3690        0.491\n 66.69     36       1    0.414 0.03233       0.3550        0.482\n 66.85     35       1    0.402 0.03350       0.3414        0.473\n 68.62     27       1    0.387 0.03541       0.3235        0.463\n 74.95     10       1    0.348 0.04862       0.2650        0.458\n 80.52      3       1    0.232 0.10020       0.0997        0.541\n\n                hormone=2 \n  time n.risk n.event survival std.err lower 95% CI upper 95% CI\n  5.54    240       1    0.996 0.00416        0.988        1.000\n  5.80    239       2    0.988 0.00717        0.974        1.000\n  5.90    237       1    0.983 0.00826        0.967        1.000\n  6.03    236       1    0.979 0.00922        0.961        0.997\n  7.44    233       1    0.975 0.01009        0.955        0.995\n  7.80    231       1    0.971 0.01090        0.950        0.992\n  8.92    230       1    0.967 0.01164        0.944        0.990\n  9.02    229       1    0.962 0.01233        0.938        0.987\n  9.38    228       1    0.958 0.01298        0.933        0.984\n 10.10    226       1    0.954 0.01359        0.928        0.981\n 11.70    224       1    0.950 0.01418        0.922        0.978\n 12.10    222       1    0.945 0.01475        0.917        0.975\n 12.26    221       1    0.941 0.01529        0.912        0.971\n 12.36    220       1    0.937 0.01581        0.906        0.968\n 12.85    219       1    0.932 0.01631        0.901        0.965\n 12.92    218       1    0.928 0.01678        0.896        0.962\n 13.44    217       1    0.924 0.01724        0.891        0.958\n 13.97    216       1    0.920 0.01768        0.886        0.955\n 15.51    212       1    0.915 0.01813        0.880        0.952\n 15.57    211       1    0.911 0.01855        0.875        0.948\n 16.10    210       1    0.907 0.01896        0.870        0.945\n 16.33    209       1    0.902 0.01936        0.865        0.941\n 16.39    208       1    0.898 0.01975        0.860        0.938\n 16.46    207       1    0.894 0.02012        0.855        0.934\n 16.52    206       1    0.889 0.02049        0.850        0.930\n 16.89    205       1    0.885 0.02084        0.845        0.927\n 17.48    204       1    0.881 0.02119        0.840        0.923\n 17.70    203       1    0.876 0.02152        0.835        0.919\n 17.77    202       1    0.872 0.02185        0.830        0.916\n 17.84    201       1    0.868 0.02217        0.825        0.912\n 17.97    200       2    0.859 0.02278        0.815        0.905\n 18.10    198       1    0.855 0.02307        0.811        0.901\n 18.16    197       1    0.850 0.02336        0.806        0.897\n 18.26    196       1    0.846 0.02364        0.801        0.894\n 18.33    195       1    0.842 0.02391        0.796        0.890\n 18.49    194       1    0.837 0.02418        0.791        0.886\n 18.79    192       1    0.833 0.02444        0.786        0.882\n 18.92    191       1    0.829 0.02470        0.781        0.878\n 19.61    190       1    0.824 0.02495        0.777        0.875\n 20.72    189       1    0.820 0.02520        0.772        0.871\n 21.25    188       1    0.815 0.02544        0.767        0.867\n 21.70    187       1    0.811 0.02568        0.762        0.863\n 22.13    186       1    0.807 0.02591        0.757        0.859\n 22.89    184       1    0.802 0.02613        0.753        0.855\n 23.34    183       1    0.798 0.02636        0.748        0.851\n 23.67    181       1    0.794 0.02658        0.743        0.847\n 23.90    179       1    0.789 0.02679        0.738        0.843\n 23.93    178       1    0.785 0.02701        0.733        0.839\n 24.75    172       1    0.780 0.02723        0.729        0.835\n 25.70    169       1    0.775 0.02746        0.723        0.831\n 26.13    168       1    0.771 0.02768        0.718        0.827\n 26.20    167       1    0.766 0.02790        0.713        0.823\n 27.11    164       1    0.762 0.02812        0.708        0.819\n 27.41    162       1    0.757 0.02833        0.703        0.814\n 28.03    161       1    0.752 0.02855        0.698        0.810\n 28.16    158       1    0.747 0.02876        0.693        0.806\n 29.18    155       1    0.743 0.02897        0.688        0.802\n 29.28    154       1    0.738 0.02919        0.683        0.797\n 30.10    152       1    0.733 0.02939        0.678        0.793\n 31.34    148       1    0.728 0.02961        0.672        0.788\n 31.61    147       1    0.723 0.02982        0.667        0.784\n 33.97    142       1    0.718 0.03004        0.661        0.779\n 34.20    141       1    0.713 0.03026        0.656        0.775\n 34.72    140       1    0.708 0.03047        0.650        0.770\n 36.72    132       1    0.702 0.03070        0.645        0.765\n 37.38    131       1    0.697 0.03093        0.639        0.760\n 37.57    130       1    0.692 0.03116        0.633        0.755\n 37.70    129       1    0.686 0.03137        0.627        0.751\n 38.79    125       1    0.681 0.03160        0.622        0.746\n 40.85    122       1    0.675 0.03183        0.616        0.741\n 41.97    120       1    0.670 0.03206        0.610        0.735\n 44.03    113       1    0.664 0.03232        0.603        0.730\n 44.33    111       1    0.658 0.03257        0.597        0.725\n 44.69    108       1    0.652 0.03284        0.590        0.719\n 47.84    105       1    0.645 0.03310        0.584        0.714\n 47.97    104       1    0.639 0.03336        0.577        0.708\n 48.56    103       1    0.633 0.03361        0.570        0.702\n 48.95     98       1    0.627 0.03388        0.564        0.697\n 49.25     96       1    0.620 0.03415        0.557        0.691\n 49.87     93       1    0.613 0.03443        0.549        0.685\n 53.80     87       1    0.606 0.03475        0.542        0.678\n 55.05     83       1    0.599 0.03509        0.534        0.672\n 57.80     69       1    0.590 0.03564        0.524        0.664\n 59.25     65       1    0.581 0.03623        0.514        0.657\n 62.89     44       1    0.568 0.03774        0.499        0.647\n 64.75     41       1    0.554 0.03928        0.482        0.637\n 64.82     40       1    0.540 0.04066        0.466        0.626\n 65.21     38       1    0.526 0.04201        0.450        0.615\n 66.07     32       1    0.510 0.04379        0.431        0.603\n 66.16     30       1    0.493 0.04551        0.411        0.590\n 66.56     27       1    0.474 0.04734        0.390        0.577\n 77.77     13       1    0.438 0.05603        0.341        0.563"
  },
  {
    "objectID": "sec3.html#raw-output-from-survfit",
    "href": "sec3.html#raw-output-from-survfit",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Raw Output from survfit()",
    "text": "Raw Output from survfit()\n\nKM estimates by hormone therapy\n\n\nlibrary(survival) # Load survival package\n# Fit KM estimates by hormone group\nkm_fit &lt;- survfit(Surv(time, status &gt; 0) ~ hormone, data = df)\n# summarize the KM fit object\nsummary(km_fit, times = c(6, 12, 24, 36))\n\nCall: survfit(formula = Surv(time, status &gt; 0) ~ hormone, data = df)\n\n                hormone=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6    419       9    0.979 0.00691        0.966        0.993\n   12    379      35    0.897 0.01476        0.868        0.926\n   24    280      73    0.720 0.02203        0.678        0.764\n   36    195      41    0.606 0.02475        0.559        0.656\n\n                hormone=2 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6    236       4    0.983 0.00826        0.967        1.000\n   12    223       8    0.950 0.01418        0.922        0.978\n   24    177      38    0.785 0.02701        0.733        0.839\n   36    136      16    0.708 0.03047        0.650        0.770"
  },
  {
    "objectID": "sec3.html#extracting-survival-estimates",
    "href": "sec3.html#extracting-survival-estimates",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Extracting Survival Estimates",
    "text": "Extracting Survival Estimates\n\nElements in survfit object\n\ntime: time points of the survival estimates\nsurv: survival probabilities at the time points\nlower, upper: confidence intervals for the survival estimates\nstrata: stratification information (if applicable)\n\n\n\n\n\nExercise\n\n\nCreate a table of survival estimates with 95% confidence intervals at 6, 12, 24, and 36 months for each hormone therapy group using dplyr and tibble."
  },
  {
    "objectID": "sec3.html#use-gtsummary",
    "href": "sec3.html#use-gtsummary",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Use gtsummary",
    "text": "Use gtsummary\n\nMain function: tbl_survfit()\n\nTakes on survfit object\nCreates a table of survival estimates with confidence intervals\nAutomatically handles stratification and time points\n\n\n\nlibrary(gtsummary) # Load gtsummary package\n# Create a table of survival estimates\ntbl_survfit(km_fit,                        # `survfit` object\n             label = \"Hormone\",           # Row label: \"Hormone\"\n             times = c(6, 12, 24, 36),     # Time points for estimates\n             label_header = \"Month {time}\" # Column label: \"Month xx\"\n             ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nMonth 6\nMonth 12\nMonth 24\nMonth 36\n\n\n\n\nHormone\n\n\n\n\n\n\n\n\n\n\n    1\n98% (97%, 99%)\n90% (87%, 93%)\n72% (68%, 76%)\n61% (56%, 66%)\n\n\n    2\n98% (97%, 100%)\n95% (92%, 98%)\n78% (73%, 84%)\n71% (65%, 77%)"
  },
  {
    "objectID": "sec3.html#customizing-the-table",
    "href": "sec3.html#customizing-the-table",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Customizing the Table",
    "text": "Customizing the Table\n\nCustomize table appearance\n\nlabel_header: change column names\nlabel: change row labels\nstatistic: customize statistics displayed\n\nstatistic = \"{estimate} ({conf.low}, {conf.high})\" for confidence intervals\n\n\nMore about gtsummary\n\ngtsummary website\ntbl_survfit documentation"
  },
  {
    "objectID": "sec3.html#tabulating-quantile-estimates",
    "href": "sec3.html#tabulating-quantile-estimates",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tabulating Quantile Estimates",
    "text": "Tabulating Quantile Estimates\n\nQuantile estimates: Median survival time, quartiles, etc.\n\nSpecify probs argument in tbl_survfit()\n\n\n\n# Create a table of quantile estimates\nkm_fit |&gt;                        # Pass `survfit` object\n  tbl_survfit(\n    label = \"Hormone\",           # Row label: \"Hormone\"\n    probs = c(0.25, 0.5, 0.75),  # Quantiles: 25%, 50%, 75%\n              label_header = \"{100 * prob}% quantile\") # Column label: \"xx quantile\"\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n25% quantile\n50% quantile\n75% quantile\n\n\n\n\nHormone\n\n\n\n\n\n\n\n\n    1\n21 (18, 25)\n50 (42, 59)\n81 (81, —)\n\n\n    2\n28 (23, 39)\n66 (63, —)\n— (—, —)"
  },
  {
    "objectID": "sec3.html#stratification-on-multiple-variables",
    "href": "sec3.html#stratification-on-multiple-variables",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Stratification on Multiple Variables",
    "text": "Stratification on Multiple Variables"
  },
  {
    "objectID": "sec3.html#grouping-on-multiple-variables",
    "href": "sec3.html#grouping-on-multiple-variables",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Grouping on Multiple Variables",
    "text": "Grouping on Multiple Variables\n\nPass raw data to tbl_survfit()\n\n\ndf |&gt;\n  tbl_survfit(y = Surv(time, status), \n              include = c(meno, grade), \n              times = c(6, 12, 24, 36),     # Time points for estimates\n              label_header = \"Month {time}\" # Column label: \"Month xx\"\n             )"
  },
  {
    "objectID": "sec3.html#format-by-gtsummarytbl_survfit",
    "href": "sec3.html#format-by-gtsummarytbl_survfit",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Format by gtsummary::tbl_survfit()",
    "text": "Format by gtsummary::tbl_survfit()\n\nMain function: tbl_survfit()\n\nTakes on survfit object\nCreates a table of survival estimates with confidence intervals\nAutomatically handles stratification and time points\n\n\n\nlibrary(gtsummary) # Load gtsummary package\n# Create a table of survival estimates\ntbl_survfit(km_fit,                        # `survfit` object\n             label = \"Hormone\",           # Row label: \"Hormone\"\n             times = c(6, 12, 24, 36),     # Time points for estimates\n             label_header = \"Month {time}\" # Column label: \"Month xx\"\n             ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nMonth 6\nMonth 12\nMonth 24\nMonth 36\n\n\n\n\nHormone\n\n\n\n\n\n\n\n\n\n\n    1\n98% (97%, 99%)\n90% (87%, 93%)\n72% (68%, 76%)\n61% (56%, 66%)\n\n\n    2\n98% (97%, 100%)\n95% (92%, 98%)\n78% (73%, 84%)\n71% (65%, 77%)"
  },
  {
    "objectID": "sec3.html#grouping-by-multiple-variables",
    "href": "sec3.html#grouping-by-multiple-variables",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Grouping by Multiple Variables",
    "text": "Grouping by Multiple Variables\n\nPass raw data to tbl_survfit()\n\n\ndf |&gt;                                       # Use raw data\n  tbl_survfit(y = Surv(time, status),       # Survival object\n              include = c(meno, grade),     # Include variables: menopause, grade\n              label = list(meno = \"Menopause\", # Row labels\n                          grade = \"Tumor grade\"),\n              times = c(6, 12, 24, 36),     # Time points for estimates\n              label_header = \"Month {time}\" # Column label: \"Month xx\"\n             ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nMonth 6\nMonth 12\nMonth 24\nMonth 36\n\n\n\n\nMenopause\n\n\n\n\n\n\n\n\n\n\n    1\n98% (96%, 99%)\n90% (86%, 93%)\n73% (68%, 78%)\n65% (59%, 71%)\n\n\n    2\n98% (97%, 100%)\n93% (90%, 96%)\n75% (71%, 80%)\n64% (59%, 69%)\n\n\nTumor grade\n\n\n\n\n\n\n\n\n\n\n    1\n100% (100%, 100%)\n100% (100%, 100%)\n93% (87%, 99%)\n84% (75%, 93%)\n\n\n    2\n98% (97%, 100%)\n92% (90%, 95%)\n75% (71%, 80%)\n64% (60%, 69%)\n\n\n    3\n96% (93%, 99%)\n85% (80%, 91%)\n63% (55%, 71%)\n55% (48%, 64%)"
  },
  {
    "objectID": "sec3.html",
    "href": "sec3.html",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "",
    "text": "Use dplyr to get time-to-first event\n\n\nlibrary(tidyverse) # Load tidyverse packages\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Load mortality + relapse data\ngbc &lt;- read.table(\"data/gbc.txt\", header = TRUE)\ndf &lt;- gbc |&gt;  # calculate time to first event (relapse or death)\n  group_by(id) |&gt; # group by id\n  arrange(time) |&gt; # sort rows by time\n  slice(1) |&gt;      # get the first row within each id\n  ungroup()     # remove grouping\n# Display the first few rows of the data\nhead(df) \n\n# A tibble: 6 × 11\n     id  time status hormone   age  meno  size grade nodes  prog estrg\n  &lt;int&gt; &lt;dbl&gt;  &lt;int&gt;   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1     1 43.8       1       1    38     1    18     3     5   141   105\n2     2 46.6       1       1    52     1    20     1     1    78    14\n3     3 41.9       1       1    47     1    30     2     1   422    89\n4     4  4.85      0       1    40     1    24     1     3    25    11\n5     5 61.1       0       2    64     2    19     2     1    19     9\n6     6 63.4       0       2    49     2    56     1     3   356    64\n\n\n\n\n\n\nKM estimates by hormone therapy\n\n\nlibrary(survival) # Load survival package\n\nWarning: package 'survival' was built under R version 4.4.1\n\n# Fit KM estimates by hormone group\nkm_fit &lt;- survfit(Surv(time, status &gt; 0) ~ hormone, data = df)\n# summarize the KM fit object\nsummary(km_fit, times = c(6, 12, 24, 36))\n\nCall: survfit(formula = Surv(time, status &gt; 0) ~ hormone, data = df)\n\n                hormone=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6    419       9    0.979 0.00691        0.966        0.993\n   12    379      35    0.897 0.01476        0.868        0.926\n   24    280      73    0.720 0.02203        0.678        0.764\n   36    195      41    0.606 0.02475        0.559        0.656\n\n                hormone=2 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6    236       4    0.983 0.00826        0.967        1.000\n   12    223       8    0.950 0.01418        0.922        0.978\n   24    177      38    0.785 0.02701        0.733        0.839\n   36    136      16    0.708 0.03047        0.650        0.770\n\n\n\n\n\n\nElements in survfit object\n\ntime: time points of the survival estimates\nsurv: survival probabilities at the time points\nlower, upper: confidence intervals for the survival estimates\nstrata: stratification information (if applicable)\n\n\n\n\n\n\n\n\nExercise\n\n\n\nCreate a table of survival estimates with 95% confidence intervals at 6, 12, 24, and 36 months for each hormone therapy group using dplyr and tibble.\n\n\n\n\n\n\nUse broom package to tidy survfit objects\n\nbroom::tidy() converts the survfit object into a tidy data frame\nUseful for further analysis or visualization\n\n\n\nlibrary(broom) # Load broom package\ntidy(km_fit) # Tidy the KM fit object\n\n# A tibble: 613 × 9\n    time n.risk n.event n.censor estimate std.error conf.high conf.low strata   \n   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;    \n 1 0.262    440       0        1    1       0               1    1     hormone=1\n 2 0.525    439       0        1    1       0               1    1     hormone=1\n 3 0.557    438       0        2    1       0               1    1     hormone=1\n 4 0.590    436       0        1    1       0               1    1     hormone=1\n 5 0.951    435       0        1    1       0               1    1     hormone=1\n 6 1.87     434       0        1    1       0               1    1     hormone=1\n 7 2.13     433       0        1    1       0               1    1     hormone=1\n 8 2.20     432       0        1    1       0               1    1     hormone=1\n 9 2.33     431       0        1    1       0               1    1     hormone=1\n10 2.36     430       1        0    0.998   0.00233         1    0.993 hormone=1\n# ℹ 603 more rows\n\n\n\n\n\n\nMain function: tbl_survfit()\n\nTakes on survfit object\nCreates a table of survival estimates with confidence intervals\nAutomatically handles stratification and time points\n\n\n\nlibrary(gtsummary) # Load gtsummary package\n\n#BlackLivesMatter\n\n# Create a table of survival estimates\nkm_fit |&gt; tbl_survfit(                    # Pass `survfit` object\n             label = \"Hormone\",           # Row label: \"Hormone\"\n             times = c(6, 12, 24, 36),     # Time points for estimates\n             label_header = \"Month {time}\" # Column label: \"Month xx\"\n             ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nMonth 6\nMonth 12\nMonth 24\nMonth 36\n\n\n\n\nHormone\n\n\n\n\n\n\n\n\n\n\n    1\n98% (97%, 99%)\n90% (87%, 93%)\n72% (68%, 76%)\n61% (56%, 66%)\n\n\n    2\n98% (97%, 100%)\n95% (92%, 98%)\n78% (73%, 84%)\n71% (65%, 77%)\n\n\n\n\n\n\n\n\n\n\n\nPass raw data to tbl_survfit()\n\n\ndf |&gt;                                       # Use raw data\n  tbl_survfit(y = Surv(time, status),       # Survival object\n              include = c(meno, grade),     # Include variables: menopause, grade\n              label = list(meno = \"Menopause\", # Row labels\n                          grade = \"Tumor grade\"),\n              times = c(6, 12, 24, 36),     # Time points for estimates\n              label_header = \"Month {time}\" # Column label: \"Month xx\"\n             ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nMonth 6\nMonth 12\nMonth 24\nMonth 36\n\n\n\n\nMenopause\n\n\n\n\n\n\n\n\n\n\n    1\n98% (96%, 99%)\n90% (86%, 93%)\n73% (68%, 78%)\n65% (59%, 71%)\n\n\n    2\n98% (97%, 100%)\n93% (90%, 96%)\n75% (71%, 80%)\n64% (59%, 69%)\n\n\nTumor grade\n\n\n\n\n\n\n\n\n\n\n    1\n100% (100%, 100%)\n100% (100%, 100%)\n93% (87%, 99%)\n84% (75%, 93%)\n\n\n    2\n98% (97%, 100%)\n92% (90%, 95%)\n75% (71%, 80%)\n64% (60%, 69%)\n\n\n    3\n96% (93%, 99%)\n85% (80%, 91%)\n63% (55%, 71%)\n55% (48%, 64%)\n\n\n\n\n\n\n\n\n\n\n\nQuantile estimates: Median survival time, quartiles, etc.\n\nSpecify probs argument in tbl_survfit()\n\n\n\n# Create a table of quantile estimates\nkm_fit |&gt;                        # Pass `survfit` object\n  tbl_survfit(\n    label = \"Hormone\",           # Row label: \"Hormone\"\n    probs = c(0.25, 0.5, 0.75),  # Quantiles: 25%, 50%, 75%\n              label_header = \"{100 * prob}% quantile\") # Column label: \"xx quantile\"\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n25% quantile\n50% quantile\n75% quantile\n\n\n\n\nHormone\n\n\n\n\n\n\n\n\n    1\n21 (18, 25)\n50 (42, 59)\n81 (81, —)\n\n\n    2\n28 (23, 39)\n66 (63, —)\n— (—, —)\n\n\n\n\n\n\n\n\n\n\n\nCreate the following table\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n25% quantile\n50% quantile\n75% quantile\n\n\n\n\nMenopause\n\n\n\n\n\n\n\n\n    1\n21 (18, 27)\n66 (52, —)\n— (—, —)\n\n\n    2\n24 (21, 28)\n56 (49, 65)\n— (81, —)\n\n\nTumor grade\n\n\n\n\n\n\n\n\n    1\n48 (38, —)\n— (65, —)\n— (—, —)\n\n\n    2\n24 (21, 28)\n57 (49, 67)\n— (81, —)\n\n\n    3\n16 (13, 19)\n44 (31, —)\n— (67, —)\n\n\n\n\n\n\n\n\n\nSolution\ndf |&gt;                                       # Use raw data\n  tbl_survfit(y = Surv(time, status &gt; 0),   # Survival object\n              include = c(meno, grade),     # Include variables: menopause, tumor grade\n              label = list(meno = \"Menopause\", grade = \"Tumor grade\"), # Row labels\n              probs = c(0.25, 0.5, 0.75),   # Quantiles: 25%, 50%, 75%\n              label_header = \"{100 * prob}% quantile\") # Column label: \"xx quantile\"\n\n\n\n\n\n\nCustomize table appearance\n\nlabel_header: change column names\nlabel: change row labels\nstatistic: customize statistics displayed\n\nstatistic = \"{estimate} ({conf.low}, {conf.high})\" for confidence intervals\n\n\nMore about gtsummary\n\ngtsummary website\ntbl_survfit documentation"
  },
  {
    "objectID": "sec3.html#tidy-survfit-output",
    "href": "sec3.html#tidy-survfit-output",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tidy survfit() Output",
    "text": "Tidy survfit() Output\n\nUse broom package to tidy survfit objects\n\nbroom::tidy() converts the survfit object into a tidy data frame\nUseful for further analysis or visualization\n\n\n\nlibrary(broom) # Load broom package\ntidy(km_fit) # Tidy the KM fit object"
  },
  {
    "objectID": "sec3.html#tidying-survfit-output",
    "href": "sec3.html#tidying-survfit-output",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tidying survfit() Output",
    "text": "Tidying survfit() Output\n\nUse broom package to tidy survfit objects\n\nbroom::tidy() converts the survfit object into a tidy data frame\nUseful for further analysis or visualization\n\n\n\nlibrary(broom) # Load broom package\ntidy(km_fit) # Tidy the KM fit object\n\n# A tibble: 613 × 9\n    time n.risk n.event n.censor estimate std.error conf.high conf.low strata   \n   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;    \n 1 0.262    440       0        1    1       0               1    1     hormone=1\n 2 0.525    439       0        1    1       0               1    1     hormone=1\n 3 0.557    438       0        2    1       0               1    1     hormone=1\n 4 0.590    436       0        1    1       0               1    1     hormone=1\n 5 0.951    435       0        1    1       0               1    1     hormone=1\n 6 1.87     434       0        1    1       0               1    1     hormone=1\n 7 2.13     433       0        1    1       0               1    1     hormone=1\n 8 2.20     432       0        1    1       0               1    1     hormone=1\n 9 2.33     431       0        1    1       0               1    1     hormone=1\n10 2.36     430       1        0    0.998   0.00233         1    0.993 hormone=1\n# ℹ 603 more rows"
  },
  {
    "objectID": "sec3.html#tabulation-with-gtsummarytbl_survfit",
    "href": "sec3.html#tabulation-with-gtsummarytbl_survfit",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tabulation with gtsummary::tbl_survfit()",
    "text": "Tabulation with gtsummary::tbl_survfit()\n\nMain function: tbl_survfit()\n\nTakes on survfit object\nCreates a table of survival estimates with confidence intervals\nAutomatically handles stratification and time points\n\n\n\nlibrary(gtsummary) # Load gtsummary package\n# Create a table of survival estimates\ntbl_survfit(km_fit,                        # `survfit` object\n             label = \"Hormone\",           # Row label: \"Hormone\"\n             times = c(6, 12, 24, 36),     # Time points for estimates\n             label_header = \"Month {time}\" # Column label: \"Month xx\"\n             ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nMonth 6\nMonth 12\nMonth 24\nMonth 36\n\n\n\n\nHormone\n\n\n\n\n\n\n\n\n\n\n    1\n98% (97%, 99%)\n90% (87%, 93%)\n72% (68%, 76%)\n61% (56%, 66%)\n\n\n    2\n98% (97%, 100%)\n95% (92%, 98%)\n78% (73%, 84%)\n71% (65%, 77%)"
  },
  {
    "objectID": "sec3.html#tabulation-with-gtsummary",
    "href": "sec3.html#tabulation-with-gtsummary",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tabulation with gtsummary",
    "text": "Tabulation with gtsummary\n\nMain function: tbl_survfit()\n\nTakes on survfit object\nCreates a table of survival estimates with confidence intervals\nAutomatically handles stratification and time points\n\n\nlibrary(gtsummary) # Load gtsummary package\n# Create a table of survival estimates\nkm_fit |&gt; tbl_survfit(                    # Pass `survfit` object\n             label = \"Hormone\",           # Row label: \"Hormone\"\n             times = c(6, 12, 24, 36),     # Time points for estimates\n             label_header = \"Month {time}\" # Column label: \"Month xx\"\n             ) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nMonth 6\nMonth 12\nMonth 24\nMonth 36\n\n\n\n\nHormone\n\n\n\n\n\n\n\n\n\n\n    1\n98% (97%, 99%)\n90% (87%, 93%)\n72% (68%, 76%)\n61% (56%, 66%)\n\n\n    2\n98% (97%, 100%)\n95% (92%, 98%)\n78% (73%, 84%)\n71% (65%, 77%)"
  },
  {
    "objectID": "sec3.html#exercise-tabulating-quantiles",
    "href": "sec3.html#exercise-tabulating-quantiles",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Tabulating Quantiles",
    "text": "Exercise: Tabulating Quantiles\n\nCreate the following table\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\n25% quantile\n50% quantile\n75% quantile\n\n\n\n\nMenopause\n\n\n\n\n\n\n\n\n    1\n21 (18, 27)\n66 (52, —)\n— (—, —)\n\n\n    2\n24 (21, 28)\n56 (49, 65)\n— (81, —)\n\n\nTumor grade\n\n\n\n\n\n\n\n\n    1\n48 (38, —)\n— (65, —)\n— (—, —)\n\n\n    2\n24 (21, 28)\n57 (49, 67)\n— (81, —)\n\n\n    3\n16 (13, 19)\n44 (31, —)\n— (67, —)\n\n\n\n\n\n\n\n\n\nSolution\ndf |&gt;                                       # Use raw data\n  tbl_survfit(y = Surv(time, status &gt; 0),   # Survival object\n              include = c(meno, grade),     # Include variables: menopause, tumor grade\n              label = list(meno = \"Menopause\", grade = \"Tumor grade\"), # Row labels\n              probs = c(0.25, 0.5, 0.75),   # Quantiles: 25%, 50%, 75%\n              label_header = \"{100 * prob}% quantile\") # Column label: \"xx quantile\""
  },
  {
    "objectID": "sec3.html#base-plot",
    "href": "sec3.html#base-plot",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Base Plot",
    "text": "Base Plot\n\n\nPlot KM curves by hormone group\nplot(km_fit, ylim = c(0,1), xlab = \"Time (months)\", ylab = \"Relapse-free survival probability\",\n     col = c(\"red\", \"blue\"), conf.int = TRUE)\n# Add legend\nlegend(1, 0.2, col=c(\"red\", \"blue\"), lty = 1, c(\"No hormone\", \"Hormone\")) # Legend text\n# p-value for log-rank test\npval &lt;- survdiff(Surv(time, status) ~ hormone, data = df)$pvalue # obtain p-value\ntext(70, 0.8, scales::pvalue(pval, add_p = TRUE)) # Annotate formatted p-value"
  },
  {
    "objectID": "sec3.html#enhanced-graphics-with-ggsurvfit",
    "href": "sec3.html#enhanced-graphics-with-ggsurvfit",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Enhanced Graphics with ggsurvfit",
    "text": "Enhanced Graphics with ggsurvfit\n\nggsurvfit: Provides a ggplot2 interface for survival curves\n\nTakes on survfit object or raw data\nadd_risktable() adds a risk table below graph\nAllows for more customization and aesthetics\n\n\n\nlibrary(ggsurvfit) # Load ggsurvfit package)\nkm_fit |&gt; ggsurvfit()  # Pass `survfit` object"
  },
  {
    "objectID": "sec3.html#customization-i",
    "href": "sec3.html#customization-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Customization (I)",
    "text": "Customization (I)\n\nCustomize the plot with ggsurvfit\n\nadd_risktable(): Adds a risk table below the survival curve\nadd_confidence_interval(): Adds confidence intervals to the survival curve\nadd_pvalue(): Adds p-value for log-rank test\nOther ggplot2 functions to further customize the plot\n\nscale_x_continuous(), scale_y_continuous(), theme(), etc."
  },
  {
    "objectID": "sec3.html#customization-ii",
    "href": "sec3.html#customization-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Customization (II)",
    "text": "Customization (II)\n\nCode\n\n\n# survfit2() fits better with `ggsurvfit`\nkm_fit2 &lt;- survfit2(Surv(time, status &gt; 0) ~ hormone,  \n                    data = df |&gt; # Relabel hormone variable\n                      mutate(hormone = if_else(hormone == 1, \"No hormone\", \"Hormone\")) \n                      ) \nkm_fig &lt;- km_fit2 |&gt;     # Plot KM curves with customization\n  ggsurvfit() +          # Pass `survfit2` object                       \n  add_risktable() +      # Add risk table below the graph\n  add_confidence_interval() +   # Add confidence intervals                \n  add_pvalue(caption = \"Log-rank {p.value}\") +  # Add p-value for log-rank test\n  scale_x_continuous(\"Time (months)\", breaks = seq(0, 84, 12)) + # x-axis format\n  scale_y_continuous(\"Relapse-free survival probability\", limits = c(0, 1)) + # y-axis format\n  theme_classic() + # Use classic theme for this ggplot\n  theme(legend.position = \"top\") # Position legend at the top\n\nggsave(\"images/km_fig.png\", km_fig, width = 7.5, height = 5) # Save the plot"
  },
  {
    "objectID": "sec3.html#risk-table",
    "href": "sec3.html#risk-table",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Risk Table",
    "text": "Risk Table\n\nkm_fig +\n  add_risktable(\n    risktable_stats = \"n.risk\"\n  )"
  },
  {
    "objectID": "sec3.html#risk-table-exercise",
    "href": "sec3.html#risk-table-exercise",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Risk Table Exercise",
    "text": "Risk Table Exercise\n\nTask: Display only numbers at risk in the risk table\n\nHint: Add risktable_stats = \"n.risk\" argument in add_risktable()\n\n\n\n\nSolution\nkm_fit2 |&gt;     # Plot KM curves with customization\n  ggsurvfit() +          # Pass `survfit2` object                       \n  add_risktable(         # Add risk table below the graph\n    risktable_stats = \"n.risk\" # Show only number at risk\n  ) +      \n  add_confidence_interval() +   # Add confidence intervals                \n  add_pvalue(caption = \"Log-rank {p.value}\") +  # Add p-value for log-rank test\n  scale_x_continuous(\"Time (months)\", breaks = seq(0, 84, 12)) + # x-axis format\n  scale_y_continuous(\"Relapse-free survival probability\", limits = c(0, 1)) + # y-axis format\n  theme_classic() + # Use classic theme for this ggplot\n  theme(legend.position = \"top\") # Position legend at the top"
  },
  {
    "objectID": "sec3.html#add-quantiles-i",
    "href": "sec3.html#add-quantiles-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Add Quantiles (I)",
    "text": "Add Quantiles (I)\n\nAdd quantile estimates to the plot\n\nUse add_quantile() to add median survival time and other quantiles\nSpecify y_value or x_value arguments for desired quantiles or time points\n\n\n\nkm_fig + add_quantile(\n    y_value = 0.5, # Add median survival time\n  )"
  },
  {
    "objectID": "sec3.html#customization-iii",
    "href": "sec3.html#customization-iii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Customization (III)",
    "text": "Customization (III)\n\nResult"
  },
  {
    "objectID": "sec3.html#add-quantiles-ii",
    "href": "sec3.html#add-quantiles-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Add Quantiles (II)",
    "text": "Add Quantiles (II)\n\nResult"
  },
  {
    "objectID": "sec3.html#exercise-add-time-points",
    "href": "sec3.html#exercise-add-time-points",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exercise: Add Time Points",
    "text": "Exercise: Add Time Points\n\nTask: Add reference lines at 72 months\n\nUse add_quantile() with x_value argument\n\n\n\n\nSolution\nkm_fig + add_quantile(\n   x_value = 72 # Add 72-month reference lines\n  )"
  },
  {
    "objectID": "sec3.html#further-customizations",
    "href": "sec3.html#further-customizations",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Further Customizations",
    "text": "Further Customizations\n\nCustomize the plot further\n\nadd_risktable_strata_symbol(...): Use symbols for strata in the risk table\n\nsymbol = NULL, size = 15, face = \"bold\", etc.\n\nadd_censor_mark(...)： Add censor marks to the survival curve\n\nsize = 3, shape = 3, color = \"black\", etc.\n\n\nMore about ggsurvfit\n\nggsurvfit website\nWebinar by Daniel D. Sjoberg"
  },
  {
    "objectID": "sec3.html#competing-risks-overview",
    "href": "sec3.html#competing-risks-overview",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Competing Risks Overview",
    "text": "Competing Risks Overview\n\nCompeting risks\n\nSubject may experience at most one of multiple distinct types of event\nE.g., death from different causes; relapse vs. death in remission (before relapse)\n\nNotation: \\((T, \\Delta)\\)\n\n\\(T\\): time to event\n\\(\\Delta\\): event type indicator (e.g., 1 for relapse, 2 for death)\n\nQuantity of interest\n\ncumulative incidence function (CIF), or sub-distribution \\[\n  F_k(t) = P(T \\leq t, \\Delta = k)\n  \\]\n\nCumulative probability of event type \\(k\\) by time \\(t\\)"
  },
  {
    "objectID": "sec3.html#cumulative-incidence-function",
    "href": "sec3.html#cumulative-incidence-function",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cumulative Incidence Function",
    "text": "Cumulative Incidence Function\n\nCIF: Gray’s nonparametric estimator\n\nImplemented in cmprsk::cuminc()\nA `tidy'' version is available intidycmprsk` package\n\n\n\nlibrary(tidycmprsk) # Load tidycmprsk package\ndata(trial) # Load trial data from tidycmprsk package\nhead(trial) # Display the first few rows of the data\n\n# A tibble: 6 × 9\n  trt      age marker stage grade response death death_cr           ttdeath\n  &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt;    &lt;int&gt; &lt;int&gt; &lt;fct&gt;                &lt;dbl&gt;\n1 Drug A    23  0.16  T1    II           0     0 censor                24  \n2 Drug B     9  1.11  T2    I            1     0 censor                24  \n3 Drug A    31  0.277 T1    II           0     0 censor                24  \n4 Drug A    NA  2.07  T3    III          1     1 death other causes    17.6\n5 Drug A    51  2.77  T4    III          1     1 death other causes    16.4\n6 Drug B    39  0.613 T4    I            0     1 death from cancer     15.6"
  },
  {
    "objectID": "sec3.html#tidycmprsk-package",
    "href": "sec3.html#tidycmprsk-package",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "tidycmprsk Package",
    "text": "tidycmprsk Package\n\nAnalysis of CIF implemented in cmprsk package\n\nA “tidy” version is available intidycmprskpackage\nSimple interface, plays nicely with gtsummary and ggsurvfit\nInput data: status: must be a factor, with the first level indicating censoring and subsequent levels the competing risks\n\n\n\nlibrary(tidycmprsk) # Load tidycmprsk package\ndata(\"trial\", package = \"tidycmprsk\") # Load trial data from tidycmprsk package\nhead(trial) # Display the first few rows of the data\n\n# A tibble: 6 × 9\n  trt      age marker stage grade response death death_cr           ttdeath\n  &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt;    &lt;int&gt; &lt;int&gt; &lt;fct&gt;                &lt;dbl&gt;\n1 Drug A    23  0.16  T1    II           0     0 censor                24  \n2 Drug B     9  1.11  T2    I            1     0 censor                24  \n3 Drug A    31  0.277 T1    II           0     0 censor                24  \n4 Drug A    NA  2.07  T3    III          1     1 death other causes    17.6\n5 Drug A    51  2.77  T4    III          1     1 death other causes    16.4\n6 Drug B    39  0.613 T4    I            0     1 death from cancer     15.6"
  },
  {
    "objectID": "sec3.html#input-data-format",
    "href": "sec3.html#input-data-format",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Input Data Format",
    "text": "Input Data Format\n\nInput data format\n\ntime: time to a competing event or censoring\nstatus: must be a factor, with the first level indicating censoring and subsequent levels the competing risks\n\n\n\ncif_fit &lt;- cuminc(Surv(ttdeath, death_cr) ~ trt, trial)\ncif_fit\n\n\nstrata   time   n.risk   estimate   std.error   95% CI          \nDrug A   5.00   97       0.000      0.000       NA, NA          \nDrug A   10.0   94       0.020      0.014       0.004, 0.065    \nDrug A   15.0   83       0.071      0.026       0.031, 0.134    \nDrug A   20.0   61       0.173      0.039       0.106, 0.255    \nDrug B   5.00   102      0.000      0.000       NA, NA          \nDrug B   10.0   95       0.039      0.019       0.013, 0.090    \nDrug B   15.0   75       0.167      0.037       0.102, 0.246    \nDrug B   20.0   55       0.255      0.043       0.175, 0.343    \n\nstrata   time   n.risk   estimate   std.error   95% CI          \nDrug A   5.00   97       0.010      0.010       0.001, 0.050    \nDrug A   10.0   94       0.020      0.014       0.004, 0.065    \nDrug A   15.0   83       0.082      0.028       0.038, 0.147    \nDrug A   20.0   61       0.204      0.041       0.131, 0.289    \nDrug B   5.00   102      0.000      0.000       NA, NA          \nDrug B   10.0   95       0.029      0.017       0.008, 0.077    \nDrug B   15.0   75       0.098      0.030       0.050, 0.165    \nDrug B   20.0   55       0.206      0.040       0.133, 0.289    \n\noutcome              statistic   df     p.value    \ndeath from cancer    1.99        1.00   0.16       \ndeath other causes   0.089       1.00   0.77"
  },
  {
    "objectID": "sec3.html#nonpametric-inference",
    "href": "sec3.html#nonpametric-inference",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Nonpametric Inference",
    "text": "Nonpametric Inference\n\nGray’s estimator and test\n\n\n# Fit cumulative incidence function (CIF) for competing risks\ncif_fit &lt;- cuminc(Surv(ttdeath, death_cr) ~ trt, trial)\ncif_fit # print results\n#&gt; • Failure type \"death from cancer\"\n#&gt; strata   time   n.risk   estimate   std.error   95% CI          \n#&gt; Drug A   5.00   97       0.000      0.000       NA, NA          \n#&gt; Drug A   10.0   94       0.020      0.014       0.004, 0.065    \n#&gt; Drug A   15.0   83       0.071      0.026       0.031, 0.134    \n#&gt; Drug A   20.0   61       0.173      0.039       0.106, 0.255    \n#&gt; Drug B   5.00   102      0.000      0.000       NA, NA          \n#&gt; Drug B   10.0   95       0.039      0.019       0.013, 0.090    \n#&gt; Drug B   15.0   75       0.167      0.037       0.102, 0.246    \n#&gt; Drug B   20.0   55       0.255      0.043       0.175, 0.343"
  },
  {
    "objectID": "sec3.html#raw-output",
    "href": "sec3.html#raw-output",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Raw Output",
    "text": "Raw Output\n\nRaw output from cuminc() continued\n\n\n#&gt; • Failure type \"death other causes\"\n#&gt; strata   time   n.risk   estimate   std.error   95% CI          \n#&gt; Drug A   5.00   97       0.010      0.010       0.001, 0.050    \n#&gt; Drug A   10.0   94       0.020      0.014       0.004, 0.065    \n#&gt; Drug A   15.0   83       0.082      0.028       0.038, 0.147    \n#&gt; Drug A   20.0   61       0.204      0.041       0.131, 0.289    \n#&gt; Drug B   5.00   102      0.000      0.000       NA, NA          \n#&gt; Drug B   10.0   95       0.029      0.017       0.008, 0.077    \n#&gt; Drug B   15.0   75       0.098      0.030       0.050, 0.165    \n#&gt; Drug B   20.0   55       0.206      0.040       0.133, 0.289    \n#&gt; \n#&gt; • Tests\n#&gt; outcome              statistic   df     p.value    \n#&gt; death from cancer    1.99        1.00   0.16       \n#&gt; death other causes   0.089       1.00   0.77"
  },
  {
    "objectID": "sec3.html#tidy-output-in-tibble",
    "href": "sec3.html#tidy-output-in-tibble",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tidy Output in tibble",
    "text": "Tidy Output in tibble\n\nUse broom to tidy cuminc object\n\nUseful for further analysis or visualization\n\n\n\ntidy_cif &lt;- tidy(cif_fit) # Tidy the CIF fit object\nhead(tidy_cif) # Display the first few rows of the tidy data\n\n# A tibble: 6 × 12\n   time outcome      strata estimate std.error conf.low conf.high n.risk n.event\n  &lt;dbl&gt; &lt;chr&gt;        &lt;fct&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;  &lt;int&gt;   &lt;int&gt;\n1  0    death from … Drug A   0         0      NA         NA          98       0\n2  3.53 death from … Drug A   0         0      NA         NA          98       0\n3  5.33 death from … Drug A   0         0      NA         NA          97       0\n4  6.32 death from … Drug A   0         0      NA         NA          97       0\n5  7.27 death from … Drug A   0.0102    0.0102  8.84e-4    0.0503     97       1\n6  7.38 death from … Drug A   0.0204    0.0144  3.90e-3    0.0652     96       1\n# ℹ 3 more variables: n.censor &lt;int&gt;, cum.event &lt;int&gt;, cum.censor &lt;int&gt;\n\n\n\n\n\nExercise\n\n\nTabulate CIF estimates with 95% confidence intervals at 5, 10, 15, and 20 months for each risk."
  },
  {
    "objectID": "sec3.html#tabulating-cif-estimates",
    "href": "sec3.html#tabulating-cif-estimates",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tabulating CIF Estimates",
    "text": "Tabulating CIF Estimates\n\n**Use tbl_cuminc()`` to create a table of CIF estimates**     - s     - Similar syntax totbl_survfit()`\n\n\ncif_fit |&gt; \n  tbl_cuminc(\n    outcomes = c(\"death from cancer\", \"death other causes\"), # Specify outcomes\n    times = c(10, 15, 20), # Time points for estimates\n    label_header = \"Month {time}\" # Column label: \"Month xx\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nMonth 10\nMonth 15\nMonth 20\n\n\n\n\ndeath from cancer\n\n\nChemotherapy Treatment\n\n\n\n\n\n\n\n\n    Drug A\n2.0% (0.39%, 6.5%)\n7.1% (3.1%, 13%)\n17% (11%, 26%)\n\n\n    Drug B\n3.9% (1.3%, 9.0%)\n17% (10%, 25%)\n25% (17%, 34%)\n\n\ndeath other causes\n\n\nChemotherapy Treatment\n\n\n\n\n\n\n\n\n    Drug A\n2.0% (0.39%, 6.5%)\n8.2% (3.8%, 15%)\n20% (13%, 29%)\n\n\n    Drug B\n2.9% (0.79%, 7.7%)\n9.8% (5.0%, 17%)\n21% (13%, 29%)"
  },
  {
    "objectID": "sec3.html#tabulating-cif-estimates-i",
    "href": "sec3.html#tabulating-cif-estimates-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tabulating CIF Estimates (I)",
    "text": "Tabulating CIF Estimates (I)\n\nUse tbl_cuminc() to create a table of CIF estimates\n\nSimilar syntax to tbl_survfit()\ntimes: time points for estimates\noutcomes: specify outcomes to include in the table (Default is the first outcome)\n\n\n\n# Tabulate CIF estimates with 95% confidence intervals\ncif_fit |&gt; # Pass `tidycuminc` object\n  tbl_cuminc(\n    outcomes = c(\"death from cancer\", \"death other causes\"), # Specify outcomes\n    times = c(10, 15, 20), # Time points for estimates\n    label_header = \"Month {time}\" # Column label: \"Month xx\"\n  )|&gt; \n  add_p() # Add p-values from Gray's test"
  },
  {
    "objectID": "sec3.html#tabulating-cif-estimates-ii",
    "href": "sec3.html#tabulating-cif-estimates-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tabulating CIF Estimates (II)",
    "text": "Tabulating CIF Estimates (II)\n\nResult\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nMonth 10\nMonth 15\nMonth 20\np-value1\n\n\n\n\ndeath from cancer\n\n\nChemotherapy Treatment\n\n\n\n\n\n\n0.2\n\n\n    Drug A\n2.0% (0.39%, 6.5%)\n7.1% (3.1%, 13%)\n17% (11%, 26%)\n\n\n\n\n    Drug B\n3.9% (1.3%, 9.0%)\n17% (10%, 25%)\n25% (17%, 34%)\n\n\n\n\ndeath other causes\n\n\nChemotherapy Treatment\n\n\n\n\n\n\n0.8\n\n\n    Drug A\n2.0% (0.39%, 6.5%)\n8.2% (3.8%, 15%)\n20% (13%, 29%)\n\n\n\n\n    Drug B\n2.9% (0.79%, 7.7%)\n9.8% (5.0%, 17%)\n21% (13%, 29%)\n\n\n\n\n\n1 Gray’s Test"
  },
  {
    "objectID": "sec3.html#cif-graphics",
    "href": "sec3.html#cif-graphics",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "CIF Graphics",
    "text": "CIF Graphics\n\n**Plot CIF estimates with ggsurvfit::ggcuminc()**     - Similar syntax toggsurvfit()-outcome`: specify outcome to plot\n\n\ncif_fit |&gt; # Pass `tidycuminc` object\n  ggcuminc(outcome = \"death from cancer\") + # Plot CIF for \"death from cancer\"\n  add_confidence_interval() + # Add confidence intervals\n  add_risktable() + # Add risk table below the graph\n  add_pvalue(caption = \"Gray's test {p.value}\") + # Add p-value for Gray's test\n  scale_x_continuous(\"Time (months)\", breaks = seq(0, 24, 6)) + # x-axis format\n  scale_y_continuous(\"Cumulative incidence function\", limits = c(0, 1)) + # y-axis format\n  ggtitle(\"Death from Cancer\") + # Title\n  theme_classic() + # Use classic theme for this ggplot\n  theme(legend.position = \"top\") # Position legend at the top"
  },
  {
    "objectID": "sec3.html#cif-graphics-i",
    "href": "sec3.html#cif-graphics-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "CIF Graphics (I)",
    "text": "CIF Graphics (I)\n\nPlot CIF estimates with ggsurvfit::ggcuminc()\n\nSimilar syntax to ggsurvfit()\noutcome: specify outcome to plot\n\n\n\ncif_fit |&gt; # Pass `tidycuminc` object\n  ggcuminc(outcome = \"death from cancer\") + # Plot CIF for \"death from cancer\"\n  add_confidence_interval() + # Add confidence intervals\n  add_risktable() + # Add risk table below the graph\n  add_pvalue(caption = \"Gray's test {p.value}\") + # Add p-value for Gray's test\n  scale_x_continuous(\"Time (months)\", breaks = seq(0, 24, 6)) + # x-axis format\n  scale_y_continuous(\"Cumulative incidence function\", limits = c(0, 0.5)) + # y-axis format\n  ggtitle(\"Death from cancer\") + # Title\n  theme_classic() + # Use classic theme for this ggplot\n  theme(legend.position = \"top\") # Position legend at the top"
  },
  {
    "objectID": "sec3.html#cif-graphics-ii",
    "href": "sec3.html#cif-graphics-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "CIF Graphics (II)",
    "text": "CIF Graphics (II)\n\nResult"
  },
  {
    "objectID": "sec3.html#cif-graphics-exercise",
    "href": "sec3.html#cif-graphics-exercise",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "CIF Graphics Exercise",
    "text": "CIF Graphics Exercise\n\nTask: create the figure below\n\nHint: plot separate figures for each outcome and use patchwork to combine them"
  },
  {
    "objectID": "sec3.html#cif-graphics-exercise-i",
    "href": "sec3.html#cif-graphics-exercise-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "CIF Graphics Exercise (I)",
    "text": "CIF Graphics Exercise (I)\n\nTask: create the figure below\n\nHint: plot separate figures for each outcome and use patchwork to combine them"
  },
  {
    "objectID": "sec3.html#cif-graphics-exercise-ii",
    "href": "sec3.html#cif-graphics-exercise-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "CIF Graphics Exercise (II)",
    "text": "CIF Graphics Exercise (II)\n\n\nSolution\n# Function to create CIF plot for a given outcome\ncif_plot &lt;- function(cif_fit, outcome){\n  cif_fit |&gt; # Pass `tidycuminc` object\n    ggcuminc(outcome = outcome) + # Plot CIF for specified outcome\n    add_confidence_interval() + # Add confidence intervals\n    scale_x_continuous(\"Time (months)\", breaks = seq(0, 24, 6)) + # x-axis format\n    scale_y_continuous(\"Cumulative incidence function\", limits = c(0, 0.5)) + # y-axis format\n    ggtitle(str_to_sentence(outcome)) + # Title by capitalizing initial of first word in outcome\n    theme_classic() + # Use classic theme for this ggplot\n    theme(legend.position = \"top\") # Position legend at the top\n  \n}\n\ncif_cancer_plot &lt;- cif_plot(cif_fit, \"death from cancer\") # Plot for \"death from cancer\" \ncif_other_plot &lt;- cif_plot(cif_fit, \"death other causes\") # Plot for \"death other causes\"\n\nlibrary(patchwork) # Load patchwork package\n# Combine the two plots with patchwork\ncif_trial &lt;- cif_cancer_plot + cif_other_plot + plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\") # Collect legends and position at the top\n\n\n\nMore about tidycmprsk\n\ntidycmprsk website"
  },
  {
    "objectID": "sec3.html#next-steps",
    "href": "sec3.html#next-steps",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Next Steps",
    "text": "Next Steps\n\nCox regression analysis\n\nTidy and format results from survival::coxph()\nVisualize prediction results\n\nCompeting risks\n\nProportional sub-distribution hazards (Fine-Gray) regression\nTabulation and graphics"
  },
  {
    "objectID": "sec3.html#more-about-tidycmprsk",
    "href": "sec3.html#more-about-tidycmprsk",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "More about tidycmprsk",
    "text": "More about tidycmprsk\n\ntidycmprsk website"
  },
  {
    "objectID": "reg.html",
    "href": "reg.html",
    "title": "Module 4. Semiparametric Regression Analysis",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)",
    "crumbs": [
      "Home",
      "Module 4. Semiparametric Regression Analysis"
    ]
  },
  {
    "objectID": "reg.html#slides",
    "href": "reg.html#slides",
    "title": "Module 4. Semiparametric Regression Analysis",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)",
    "crumbs": [
      "Home",
      "Module 4. Semiparametric Regression Analysis"
    ]
  },
  {
    "objectID": "reg.html#r-code",
    "href": "reg.html#r-code",
    "title": "Module 4. Semiparametric Regression Analysis",
    "section": "R code",
    "text": "R code\n\n\nShow the code\n# -------------------------------------------\n# Survival Analysis: Module 4 Code\n# -------------------------------------------\n\n# Load necessary packages\nlibrary(tidyverse) # Load tidyverse packages\nlibrary(survival) # Load survival package\nlibrary(broom) # Load broom package\nlibrary(gtsummary) # Load gtsummary package\nlibrary(ggsurvfit) # Load ggsurvfit package\nlibrary(survminer) # Load survminer package\nlibrary(tidycmprsk) # Load tidycmprsk package\n\n# ---------------------------\n# 1. Load and Prepare Data\n# ---------------------------\n\n# Load GBC dataset\ngbc &lt;- read.table(\"data/gbc.txt\", header = TRUE) # Load GBC dataset\n\n# Reformat the data\ndf &lt;- gbc |&gt;  # calculate time to first event (relapse or death)\n  group_by(id) |&gt; # group by id\n  arrange(time) |&gt; # sort rows by time\n  slice(1) |&gt;      # get the first row within each id\n  ungroup() |&gt;     # remove grouping\n  mutate(\n    age40 = ifelse(age &gt;= 40, 1, 0), # create binary variable for age &gt;= 40\n    grade = factor(grade), # convert grade to factor\n    prog = prog / 100, # rescale progesterone receptor\n    estrg = estrg / 100 # rescale estrogen receptor\n    ) \n\n# ---------------------------\n# 2. Fit Cox PH Model\n# ---------------------------\n\n# Model fitting: survival::coxph()\ncox_fit &lt;- coxph(Surv(time, status) ~ hormone + meno + age40 + grade + size + prog + estrg, \n                 data = df)\nsummary(cox_fit) # Print model summary\n\n# ---------------------------\n# 3. Tidy Output with broom\n# ---------------------------\n\ntidy_cox &lt;- tidy(cox_fit) # Tidy the coxph output\ntidy_cox # Display the tidy output\n\n# ---------------------------\n# 4. Tabulate Results with gtsummary\n# ---------------------------\n\ncox_tbl &lt;- cox_fit |&gt; tbl_regression( # Create a regression table\n                exponentiate = TRUE, # Exponentiate coefficients to get hazard ratios\n                label = list(hormone ~ \"Hormone Therapy\", # Custom labels\n                             meno ~ \"Menopausal\", \n                             age40 ~ \"Older than 40\", \n                             grade ~ \"Tumor Grade\", \n                             size ~ \"Tumor Size (mm)\", \n                             prog ~ \"Progesterone Receptor (100 fmol/ml)\", \n                             estrg ~ \"Estrogen Receptor  (100 fmol/ml)\")\n               ) |&gt; \n          add_global_p() # Add global p-value for categorical variables\ncox_tbl # Display the regression table\n\n# ---------------------------\n# 5. Customize the Regression Table\n# ---------------------------\n\ncox_tbl |&gt; # Start with the regression table\n  modify_caption(\"Cox regression analysis of the German breast cancer study\") |&gt; # Add caption\n  bold_p() |&gt; # Bold significant p-values\n  italicize_levels() # Italicize variable levels\n\n# ---------------------------\n# 6. Fit Accelerated Failure Time (AFT) Model\n# ---------------------------\n\n# Fit a Weibull AFT model\naft_fit &lt;- survreg(Surv(time, status) ~ hormone + meno + age + grade + size + prog + estrg, \n                    data = df, dist = \"weibull\") # specify the Weibull model\n\n# ---------------------------\n# 7. Forest Plot of Hazard Ratios\n# ---------------------------\n\n# Tidy with exponentiated coeffs (HR) and CI\ntidy_cox &lt;- tidy(cox_fit, exponentiate = TRUE, conf.int = TRUE) \ntidy_cox$term &lt;- recode(tidy_cox$term,           # Relabel the variables\n                hormone = \"Hormone Therapy\", \n                meno = \"Menopausal\", \n                age40 = \"Older than 40\", \n                grade2 = \"Tumor Grade II vs I\",\n                grade3 = \"Tumor Grade III vs I\",\n                size = \"Tumor Size (mm)\", \n                prog = \"Progesterone (100 fmol/ml)\", \n                estrg = \"Estrogen (100 fmol/ml)\")\n\ntidy_cox |&gt;  # plot of hazard ratios and 95% CIs\n  ggplot(aes(y=term, x=estimate, xmin=conf.low, xmax=conf.high)) + \n  geom_pointrange(shape = 15) +  # plots center point (x) in square and range (xmin, xmax)\n  geom_vline(xintercept=1, linetype = 2) + # vertical line at HR=1\n  scale_x_log10(\"Hazard ratio (95% CI)\",    # log scale for x-axis\n                breaks = c(0.5, 1, 2, 4)) + # log scale for x-axis\n  ggtitle(\"Cox Regression Results for GBC Data\") + # Add title\n  theme_classic() + # classic theme for clean look\n  theme(\n    axis.line.y = element_blank(),          # remove y-axis line\n    axis.ticks.y = element_blank(),         # remove y-axis ticks\n    axis.text.y = element_text(size = 11),  # set variable label size\n    axis.title.y = element_blank()          # remove y-axis title\n  )\n\n# ---------------------------\n# 8. Prediction and Visualization\n# ---------------------------\n\n# Create new data for prediction\nnew_data &lt;- data.frame(hormone = 2, meno = 2, age40 = 1, grade = factor(2), \n                            size = 20, prog = 1, estrg = 1)\n\n# Predict survival probabilities for `newdata`\npred_surv &lt;- survfit(cox_fit, newdata = new_data[1, ])\ntidy_pred_surv &lt;- tidy(pred_surv) # Tidy the survival prediction output\nhead(tidy_pred_surv) # Display the first few rows of the tidy output\n\n# Visualize predicted survival\npred_fig &lt;- pred_surv |&gt;  # Pass the survfit object\n  ggsurvfit() + # Main function\n  add_confidence_interval() + # Add confidence interval\n  scale_x_continuous(\"Time (months)\", breaks = seq(0, 84, by = 12)) + # x-axis format\n  scale_y_continuous(\"Relapse-free survival probability\", limits = c(0, 1)) + # y-axis format\n  ggtitle(\"Predicted Relapse-Free Survival for a GBC Patient\") + # Add title\n  theme_classic() # Classic theme for clean look\n\n# Add horizontal grid lines\npred_fig + theme(panel.grid.major.y = element_line()) # Add horizontal grid lines\n\n# ---------------------------\n# 9. Cox Model Diagnostics\n# ---------------------------\n\n# PH assumption: Schoenfeld residuals\nph_test &lt;- cox.zph(cox_fit) # Test proportional hazards assumption\nggcoxzph(ph_test) # Visualize Schoenfeld residuals\n\n# Functional form: Martingale residuals vs linear predictor\nggcoxdiagnostics(cox_fit, type = \"martingale\",    # martingale on y-axi\n                 ox.scale = \"linear.predictions\") # linear predictor on x-axis\n\n# Influential points: Deviance residuals\nggcoxdiagnostics(cox_fit, type = \"deviance\",  # deviance on y-axis\n                 ox.scale = \"observation.id\", # observation ID on x-axis\n                 sline = FALSE)               # no smoothed line\n\n# ---------------------------\n# 10. Fine-Gray Model (Competing Risks)\n# ---------------------------\n\n# Load trial dataset\ndata(\"trial\", package = \"tidycmprsk\") # Load trial data from tidycmprsk package\nhead(trial) # Display the first few rows of the data\n\n# Fit Fine-Gray model\nfg_fit &lt;- crr(Surv(ttdeath, death_cr) ~ trt + age + marker + stage, # fit FG model\n              failcode = \"death from cancer\", trial) # for death from cancer\nfg_fit # print the Fine-Gray model fit summary\n\n# Extract coefficients and variance\ncoef(fg_fit) # Extract coefficients\nvcov(fg_fit) |&gt; head() # Extract variance-covariance matrix\n\n# Tidy FG model output\ntidy_fg &lt;- tidy(fg_fit, exponentiate = TRUE, conf.int = TRUE) # Tidy model output\ntidy_fg # Display the tidy output\n\n# Forest plot for sub-distribution hazard ratios\ntidy_fg |&gt;  # plot of sub-distribution hazard ratios and 95% CIs\n  ggplot(aes(y=term, x=estimate, xmin=conf.low, xmax=conf.high)) + \n  geom_pointrange() +  # plots center point (x) and range (xmin, xmax)\n  geom_vline(xintercept=1, linetype = 2) + # vertical line at HR=1\n  scale_x_log10(\"Sub-distribution hazard ratio (95% CI)\") + # log scale for x-axis\n  theme_classic() + # classic theme for clean look\n  theme(\n    axis.line.y = element_blank(),          # remove y-axis line\n    axis.ticks.y = element_blank(),         # remove y-axis ticks\n    axis.text.y = element_text(size = 11),  # set variable label size\n    axis.title.y = element_blank()          # remove y-axis title\n  )\n\n# FG regression table\nfg_tbl &lt;- fg_fit |&gt; tbl_regression(exponentiate = TRUE) |&gt;  # Create a regression table \n          add_global_p() # Add global p-value for categorical variables\nfg_tbl # display the regression table\n\n# Model-based prediction for CIF\nfg_pred &lt;- predict(fg_fit, newdata= trial[1:10, ], times = c(6, 12, 18)) # Predict CIF\nfg_pred # Display the predicted CIF",
    "crumbs": [
      "Home",
      "Module 4. Semiparametric Regression Analysis"
    ]
  },
  {
    "objectID": "sec4.html#key-takeaways",
    "href": "sec4.html#key-takeaways",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nCox proportional hazards regression\n\nTidy output with broom and gtsummary\nVisualize hazard ratios with forest plots with ggplot2\nModel-based prediction with survival::survfit() and ggsurvfit()\nModel diagnostics with survminer\n\nFine-Gray model for competing risks regression\n\nTidy output with broom and gtsummary\nVisualize sub-distribution hazard ratios with forest plots"
  },
  {
    "objectID": "sec4.html#cox-ph-regression",
    "href": "sec4.html#cox-ph-regression",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox PH Regression",
    "text": "Cox PH Regression\n\nModel specification \\[\n  \\lambda(t \\mid Z) = \\lambda_0(t) \\exp(\\beta_1 Z_1 + \\beta_2 Z_2 + \\ldots + \\beta_p Z_p)\n  \\]\n\n\\(\\lambda_0(t)\\): baseline hazard function\n\\(\\exp(\\beta_j)\\): hazard ratio for covariate \\(Z_j\\)\n\nGBC data: relapse-free survival\n\n\nlibrary(tidyverse) # Load tidyverse packages\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ngbc &lt;- read.table(\"data/gbc.txt\", header = TRUE) # Load GBC dataset"
  },
  {
    "objectID": "sec4.html#analysis-in-base-r",
    "href": "sec4.html#analysis-in-base-r",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Analysis in Base R",
    "text": "Analysis in Base R\n\nModel fitting: survival::coxph()\n\n\nlibrary(survival) # Load survival package\n\nWarning: package 'survival' was built under R version 4.4.1\n\ncox_fit &lt;- coxph(Surv(time, status) ~ hormone + meno + age40 + grade + size + prog + estrg, \n                 data = df)\nsummary(cox_fit) # Print model summary\n\nCall:\ncoxph(formula = Surv(time, status) ~ hormone + meno + age40 + \n    grade + size + prog + estrg, data = df)\n\n  n= 686, number of events= 299 \n\n            coef exp(coef) se(coef)      z Pr(&gt;|z|)    \nhormone -0.37432   0.68776  0.12917 -2.898 0.003758 ** \nmeno     0.28450   1.32909  0.13973  2.036 0.041748 *  \nage40   -0.55127   0.57622  0.20243 -2.723 0.006463 ** \ngrade2   0.71547   2.04514  0.24854  2.879 0.003993 ** \ngrade3   0.77465   2.16982  0.26970  2.872 0.004075 ** \nsize     0.01606   1.01619  0.00368  4.365 1.27e-05 ***\nprog    -0.22400   0.79932  0.05776 -3.878 0.000105 ***\nestrg    0.01204   1.01212  0.04680  0.257 0.796895    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n        exp(coef) exp(-coef) lower .95 upper .95\nhormone    0.6878     1.4540    0.5339    0.8859\nmeno       1.3291     0.7524    1.0107    1.7478\nage40      0.5762     1.7355    0.3875    0.8568\ngrade2     2.0451     0.4890    1.2565    3.3287\ngrade3     2.1698     0.4609    1.2790    3.6812\nsize       1.0162     0.9841    1.0089    1.0236\nprog       0.7993     1.2511    0.7138    0.8951\nestrg      1.0121     0.9880    0.9234    1.1093\n\nConcordance= 0.661  (se = 0.016 )\nLikelihood ratio test= 78.79  on 8 df,   p=9e-14\nWald test            = 68.82  on 8 df,   p=8e-12\nScore (logrank) test = 69.51  on 8 df,   p=6e-12"
  },
  {
    "objectID": "sec4.html#tidy-coxph-output",
    "href": "sec4.html#tidy-coxph-output",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tidy coxph() Output",
    "text": "Tidy coxph() Output\n\nUsing broom package: broom::tidy()\n\nProvides a tidy data frame for easy manipulation and visualization\n\n\n\nlibrary(broom) # Load broom package\ntidy_cox &lt;- tidy(cox_fit) # Tidy the coxph output\ntidy_cox # Display the tidy output\n\n# A tibble: 8 × 5\n  term    estimate std.error statistic   p.value\n  &lt;chr&gt;      &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 hormone  -0.374    0.129      -2.90  0.00376  \n2 meno      0.284    0.140       2.04  0.0417   \n3 age40    -0.551    0.202      -2.72  0.00646  \n4 grade2    0.715    0.249       2.88  0.00399  \n5 grade3    0.775    0.270       2.87  0.00408  \n6 size      0.0161   0.00368     4.37  0.0000127\n7 prog     -0.224    0.0578     -3.88  0.000105 \n8 estrg     0.0120   0.0468      0.257 0.797"
  },
  {
    "objectID": "sec4.html#tabulating-results-with-gtsummary",
    "href": "sec4.html#tabulating-results-with-gtsummary",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tabulating Results with gtsummary",
    "text": "Tabulating Results with gtsummary\n\nUsing gtsummary package: tbl_regression()\n\nAutomatically formats regression results into a publication-ready table\n\n\n\nlibrary(gtsummary) # Load gtsummary package\ntbl_regression(cox_fit, \n                exponentiate = TRUE, # Exponentiate coefficients to get hazard ratios\n                label = list(hormone ~ \"Hormone Therapy\", \n                             meno ~ \"Menopause Status\", \n                             age ~ \"Age (years)\", \n                             grade ~ \"Tumor Grade\", \n                             size ~ \"Tumor Size (cm)\", \n                             prog ~ \"Progesterone Receptor\", \n                             estrg ~ \"Estrogen Receptor\")) # Custom labels\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nHR1\n95% CI1\np-value\n\n\n\n\nHormone Therapy\n0.70\n0.54, 0.90\n0.006\n\n\nMenopause Status\n1.31\n0.91, 1.88\n0.14\n\n\nAge (years)\n0.99\n0.97, 1.01\n0.3\n\n\nTumor Grade\n\n\n\n\n\n\n\n\n    1\n—\n—\n\n\n\n\n    2\n2.03\n1.25, 3.30\n0.004\n\n\n    3\n2.26\n1.34, 3.84\n0.002\n\n\nTumor Size (cm)\n1.02\n1.01, 1.02\n&lt;0.001\n\n\nProgesterone Receptor\n0.79\n0.71, 0.89\n&lt;0.001\n\n\nEstrogen Receptor\n1.02\n0.93, 1.12\n0.7\n\n\n\n1 HR = Hazard Ratio, CI = Confidence Interval"
  },
  {
    "objectID": "sec4.html#gbc-data-a-running-example",
    "href": "sec4.html#gbc-data-a-running-example",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "GBC Data: a Running Example",
    "text": "GBC Data: a Running Example\n\nReformat the data\n\n\ndf &lt;- gbc |&gt;  # calculate time to first event (relapse or death)\n  group_by(id) |&gt; # group by id\n  arrange(time) |&gt; # sort rows by time\n  slice(1) |&gt;      # get the first row within each id\n  ungroup() |&gt;     # remove grouping\n  mutate(\n    age40 = ifelse(age &gt;= 40, 1, 0), # create binary variable for age &gt;= 40\n    grade = factor(grade), # convert grade to factor\n    prog = prog / 100, # rescale progesterone receptor\n    estrg = estrg / 100 # rescale estrogen receptor\n    )"
  },
  {
    "objectID": "sec4.html#tabulating-results-with-gtsummary-i",
    "href": "sec4.html#tabulating-results-with-gtsummary-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tabulating Results with gtsummary (I)",
    "text": "Tabulating Results with gtsummary (I)\n\nUsing gtsummary package: tbl_regression()\n\nAutomatically formats regression results into a publication-ready table\n\n\n\nlibrary(gtsummary) # Load gtsummary package\ncox_tbl &lt;- cox_fit |&gt; tbl_regression( # Create a regression table\n                exponentiate = TRUE, # Exponentiate coefficients to get hazard ratios\n                label = list(hormone ~ \"Hormone Therapy\", # Custom labels\n                             meno ~ \"Menopausal\", \n                             age40 ~ \"Older than 40\", \n                             grade ~ \"Tumor Grade\", \n                             size ~ \"Tumor Size (mm)\", \n                             prog ~ \"Progesterone Receptor (100 fmol/ml)\", \n                             estrg ~ \"Estrogen Receptor  (100 fmol/ml)\")\n               ) |&gt; \n          add_global_p() # Add global p-value for categorical variables\ncox_tbl # Display the regression table"
  },
  {
    "objectID": "sec4.html#tabulating-results-with-gtsummary-ii",
    "href": "sec4.html#tabulating-results-with-gtsummary-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tabulating Results with gtsummary (II)",
    "text": "Tabulating Results with gtsummary (II)\n\nResult\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nHR1\n95% CI1\np-value\n\n\n\n\nHormone Therapy\n0.69\n0.53, 0.89\n0.003\n\n\nMenopausal\n1.33\n1.01, 1.75\n0.039\n\n\nOlder than 40\n0.58\n0.39, 0.86\n0.009\n\n\nTumor Grade\n\n\n\n\n0.004\n\n\n    1\n—\n—\n\n\n\n\n    2\n2.05\n1.26, 3.33\n\n\n\n\n    3\n2.17\n1.28, 3.68\n\n\n\n\nTumor Size (mm)\n1.02\n1.01, 1.02\n&lt;0.001\n\n\nProgesterone Receptor (100 fmol/ml)\n0.80\n0.71, 0.90\n&lt;0.001\n\n\nEstrogen Receptor (100 fmol/ml)\n1.01\n0.92, 1.11\n0.8\n\n\n\n1 HR = Hazard Ratio, CI = Confidence Interval"
  },
  {
    "objectID": "sec4.html#further-customization",
    "href": "sec4.html#further-customization",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Further Customization",
    "text": "Further Customization\n\n\n\n\n\n\n\n\n\n\n\nStyling functions\n\nmodify_header(): update column headers\nmodify_footnote_header(): update column header footnote\nmodify_footnote_body(): update table body footnote\nmodify_caption(): update table caption/title\nbold_labels(): bold variable labels\nbold_levels(): bold variable levels\nitalicize_labels(): italicize variable labels\nitalicize_levels(): italicize variable levels\nbold_p(): bold significant p-values\n\nMore about tbl_regression()\n\ngtsummary documentation"
  },
  {
    "objectID": "sec4.html#table-customization-exercise",
    "href": "sec4.html#table-customization-exercise",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Table Customization Exercise",
    "text": "Table Customization Exercise\n\nTask: Customize the regression table\n\nAdd a caption: “Cox regression analysis of the German breast cancer study”\nBold significant p-values\nItalicize tumor grade levels\n\n\n\n\nSolution\ncox_tbl |&gt; # Start with the regression table\n  modify_caption(\"Cox regression analysis of the German breast cancer study\") |&gt; # Add caption\n  bold_p() |&gt; # Bold significant p-values\n  italicize_levels() # Italicize variable levels"
  },
  {
    "objectID": "sec4.html#visualizing-regression-results",
    "href": "sec4.html#visualizing-regression-results",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Visualizing Regression Results",
    "text": "Visualizing Regression Results\n\nForest plot: displays hazard ratios and confidence intervals"
  },
  {
    "objectID": "sec4.html#other-regression-models",
    "href": "sec4.html#other-regression-models",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Other Regression Models",
    "text": "Other Regression Models\n\nAccelerated failure time (AFT) models \\[\n  \\log T = \\beta_0 + \\beta_1 Z_1 + \\beta_2 Z_2 + \\ldots + \\beta_p Z_p + \\epsilon\n\\]\n\n\\(\\epsilon\\sim\\) Weibull, lognormal, etc. (parametric models)\n\\(\\exp(\\beta_j)\\): acceleration factor for covariate \\(Z_j\\)\nModel fitting: survival::survreg()\n\n\n\n# Fit a Weibull AFT model\naft_fit &lt;- survreg(Surv(time, status) ~ hormone + meno + age + grade + size + prog + estrg, \n                    data = df, dist = \"weibull\") # specify the Weibull model\n\n\n\n\nExercise\n\n\n\nTidy up the survreg object aft_fit using broom::tidy()\nCreate a regression table using gtsummary::tbl_regression()"
  },
  {
    "objectID": "sec4.html#tabulating-aft-results",
    "href": "sec4.html#tabulating-aft-results",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tabulating AFT Results",
    "text": "Tabulating AFT Results\n\nUsing gtsummary package: tbl_regression()\n\nSame syntax as in Cox model"
  },
  {
    "objectID": "sec4.html#visualizing-hazard-ratios",
    "href": "sec4.html#visualizing-hazard-ratios",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Visualizing Hazard Ratios",
    "text": "Visualizing Hazard Ratios\n\nForest plot: Visualize hazard ratios and confidence intervals\n\nWork with tidied coxph object\n\n\n\n# tidy with exponentiated coeffs (HR) and CI\ntidy_cox &lt;- tidy(cox_fit, exponentiate = TRUE, conf.int = TRUE) \n# plot of hazard ratios and 95% CIs\ntidy_cox |&gt; \n  ggplot(aes(y=term, x=estimate, xmin=conf.low, xmax=conf.high)) + \n  geom_pointrange() +  # plots center point (x) and range (xmin, xmax)\n  geom_vline(xintercept=1, linetype = 2) + # vertical line at HR=1\n  scale_x_log10(\"Hazard ratio (95% CI)\") +\n  theme_classic() +\n  theme(\n    axis.line.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.y = element_text(size = 11),\n    axis.title.y = element_blank()\n  )"
  },
  {
    "objectID": "sec4.html",
    "href": "sec4.html",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "",
    "text": "Model specification \\[\n  \\lambda(t \\mid Z) = \\lambda_0(t) \\exp(\\beta_1 Z_1 + \\beta_2 Z_2 + \\ldots + \\beta_p Z_p)\n  \\]\n\n\\(\\lambda_0(t)\\): baseline hazard function\n\\(\\exp(\\beta_j)\\): hazard ratio for covariate \\(Z_j\\)\n\nGBC data: relapse-free survival\n\n\nlibrary(tidyverse) # Load tidyverse packages\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ngbc &lt;- read.table(\"data/gbc.txt\", header = TRUE) # Load GBC dataset\n\n\n\n\n\nReformat the data\n\n\ndf &lt;- gbc |&gt;  # calculate time to first event (relapse or death)\n  group_by(id) |&gt; # group by id\n  arrange(time) |&gt; # sort rows by time\n  slice(1) |&gt;      # get the first row within each id\n  ungroup() |&gt;     # remove grouping\n  mutate(\n    age40 = ifelse(age &gt;= 40, 1, 0), # create binary variable for age &gt;= 40\n    grade = factor(grade), # convert grade to factor\n    prog = prog / 100, # rescale progesterone receptor\n    estrg = estrg / 100 # rescale estrogen receptor\n    ) \n\n\n\n\n\nModel fitting: survival::coxph()\n\n\nlibrary(survival) # Load survival package\n\nWarning: package 'survival' was built under R version 4.4.1\n\ncox_fit &lt;- coxph(Surv(time, status) ~ hormone + meno + age40 + grade + size + prog + estrg, \n                 data = df)\nsummary(cox_fit) # Print model summary\n\nCall:\ncoxph(formula = Surv(time, status) ~ hormone + meno + age40 + \n    grade + size + prog + estrg, data = df)\n\n  n= 686, number of events= 299 \n\n            coef exp(coef) se(coef)      z Pr(&gt;|z|)    \nhormone -0.37432   0.68776  0.12917 -2.898 0.003758 ** \nmeno     0.28450   1.32909  0.13973  2.036 0.041748 *  \nage40   -0.55127   0.57622  0.20243 -2.723 0.006463 ** \ngrade2   0.71547   2.04514  0.24854  2.879 0.003993 ** \ngrade3   0.77465   2.16982  0.26970  2.872 0.004075 ** \nsize     0.01606   1.01619  0.00368  4.365 1.27e-05 ***\nprog    -0.22400   0.79932  0.05776 -3.878 0.000105 ***\nestrg    0.01204   1.01212  0.04680  0.257 0.796895    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n        exp(coef) exp(-coef) lower .95 upper .95\nhormone    0.6878     1.4540    0.5339    0.8859\nmeno       1.3291     0.7524    1.0107    1.7478\nage40      0.5762     1.7355    0.3875    0.8568\ngrade2     2.0451     0.4890    1.2565    3.3287\ngrade3     2.1698     0.4609    1.2790    3.6812\nsize       1.0162     0.9841    1.0089    1.0236\nprog       0.7993     1.2511    0.7138    0.8951\nestrg      1.0121     0.9880    0.9234    1.1093\n\nConcordance= 0.661  (se = 0.016 )\nLikelihood ratio test= 78.79  on 8 df,   p=9e-14\nWald test            = 68.82  on 8 df,   p=8e-12\nScore (logrank) test = 69.51  on 8 df,   p=6e-12\n\n\n\n\n\n\nUsing broom package: broom::tidy()\n\nProvides a tidy data frame for easy manipulation and visualization\n\n\n\nlibrary(broom) # Load broom package\ntidy_cox &lt;- tidy(cox_fit) # Tidy the coxph output\ntidy_cox # Display the tidy output\n\n# A tibble: 8 × 5\n  term    estimate std.error statistic   p.value\n  &lt;chr&gt;      &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 hormone  -0.374    0.129      -2.90  0.00376  \n2 meno      0.284    0.140       2.04  0.0417   \n3 age40    -0.551    0.202      -2.72  0.00646  \n4 grade2    0.715    0.249       2.88  0.00399  \n5 grade3    0.775    0.270       2.87  0.00408  \n6 size      0.0161   0.00368     4.37  0.0000127\n7 prog     -0.224    0.0578     -3.88  0.000105 \n8 estrg     0.0120   0.0468      0.257 0.797    \n\n\n\n\n\n\nUsing gtsummary package: tbl_regression()\n\nAutomatically formats regression results into a publication-ready table\n\n\n\nlibrary(gtsummary) # Load gtsummary package\ncox_tbl &lt;- cox_fit |&gt; tbl_regression( # Create a regression table\n                exponentiate = TRUE, # Exponentiate coefficients to get hazard ratios\n                label = list(hormone ~ \"Hormone Therapy\", # Custom labels\n                             meno ~ \"Menopausal\", \n                             age40 ~ \"Older than 40\", \n                             grade ~ \"Tumor Grade\", \n                             size ~ \"Tumor Size (mm)\", \n                             prog ~ \"Progesterone Receptor (100 fmol/ml)\", \n                             estrg ~ \"Estrogen Receptor  (100 fmol/ml)\")\n               ) |&gt; \n          add_global_p() # Add global p-value for categorical variables\ncox_tbl # Display the regression table\n\n\n\n\n\nResult\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nHR1\n95% CI1\np-value\n\n\n\n\nHormone Therapy\n0.69\n0.53, 0.89\n0.003\n\n\nMenopausal\n1.33\n1.01, 1.75\n0.039\n\n\nOlder than 40\n0.58\n0.39, 0.86\n0.009\n\n\nTumor Grade\n\n\n\n\n0.004\n\n\n    1\n—\n—\n\n\n\n\n    2\n2.05\n1.26, 3.33\n\n\n\n\n    3\n2.17\n1.28, 3.68\n\n\n\n\nTumor Size (mm)\n1.02\n1.01, 1.02\n&lt;0.001\n\n\nProgesterone Receptor (100 fmol/ml)\n0.80\n0.71, 0.90\n&lt;0.001\n\n\nEstrogen Receptor (100 fmol/ml)\n1.01\n0.92, 1.11\n0.8\n\n\n\n1 HR = Hazard Ratio, CI = Confidence Interval\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStyling functions\n\nmodify_header(): update column headers\nmodify_footnote_header(): update column header footnote\nmodify_footnote_body(): update table body footnote\nmodify_caption(): update table caption/title\nbold_labels(): bold variable labels\nbold_levels(): bold variable levels\nitalicize_labels(): italicize variable labels\nitalicize_levels(): italicize variable levels\nbold_p(): bold significant p-values\n\nMore about tbl_regression()\n\ngtsummary documentation\n\n\n\n\n\n\nTask: Customize the regression table\n\nAdd a caption: “Cox regression analysis of the German breast cancer study”\nBold significant p-values\nItalicize tumor grade levels\n\n\n\n\nSolution\ncox_tbl |&gt; # Start with the regression table\n  modify_caption(\"Cox regression analysis of the German breast cancer study\") |&gt; # Add caption\n  bold_p() |&gt; # Bold significant p-values\n  italicize_levels() # Italicize variable levels\n\n\n\n\n\n\nAccelerated failure time (AFT) models \\[\n  \\log T = \\beta_0 + \\beta_1 Z_1 + \\beta_2 Z_2 + \\ldots + \\beta_p Z_p + \\epsilon\n\\]\n\n\\(\\epsilon\\sim\\) Weibull, lognormal, etc. (parametric models)\n\\(\\exp(\\beta_j)\\): acceleration factor for covariate \\(Z_j\\)\nModel fitting: survival::survreg()\n\n\n\n# Fit a Weibull AFT model\naft_fit &lt;- survreg(Surv(time, status) ~ hormone + meno + age + grade + size + prog + estrg, \n                    data = df, dist = \"weibull\") # specify the Weibull model\n\n\n\n\n\n\n\nExercise\n\n\n\n\nTidy up the survreg object aft_fit using broom::tidy()\nCreate a regression table using gtsummary::tbl_regression()\n\n\n\n\n\n\n\nForest plot: Visualize hazard ratios and confidence intervals\n\n\n# Tidy with exponentiated coeffs (HR) and CI\ntidy_cox &lt;- tidy(cox_fit, exponentiate = TRUE, conf.int = TRUE) \ntidy_cox$term &lt;- recode(tidy_cox$term,           # Relabel the variables\n                hormone = \"Hormone Therapy\", \n                meno = \"Menopausal\", \n                age40 = \"Older than 40\", \n                grade2 = \"Tumor Grade II vs I\",\n                grade3 = \"Tumor Grade III vs I\",\n                size = \"Tumor Size (mm)\", \n                prog = \"Progesterone (100 fmol/ml)\", \n                estrg = \"Estrogen (100 fmol/ml)\")\n\ntidy_cox |&gt;  # plot of hazard ratios and 95% CIs\n  ggplot(aes(y=term, x=estimate, xmin=conf.low, xmax=conf.high)) + \n  geom_pointrange() +  # plots center point (x) and range (xmin, xmax)\n  geom_vline(xintercept=1, linetype = 2) + # vertical line at HR=1\n  scale_x_log10(\"Hazard ratio (95% CI)\") + # log scale for x-axis\n  theme_classic() + # classic theme for clean look\n  theme(\n    axis.line.y = element_blank(),          # remove y-axis line\n    axis.ticks.y = element_blank(),         # remove y-axis ticks\n    axis.text.y = element_text(size = 11),  # set variable label size\n    axis.title.y = element_blank()          # remove y-axis title\n  )\n\n\n\n\n\nResult\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTask: customize the forest plot\n\nUse square rather than default circle for point estimates\nSet x-axis ticks at 0.5, 1, 2.0, and 4.0\nAdd a title: “Cox Regression Results for GBC Data”\n\n\n\n\nSolution\ntidy_cox |&gt; \n  ggplot(aes(y=term, x=estimate, xmin=conf.low, xmax=conf.high)) + \n  geom_pointrange(shape = 15) +  # plots center point (x) in square and range (xmin, xmax)\n  geom_vline(xintercept=1, linetype = 2) + # vertical line at HR=1\n  scale_x_log10(\"Hazard ratio (95% CI)\",    # log scale for x-axis\n                breaks = c(0.5, 1, 2, 4)) + # log scale for x-axis\n  ggtitle(\"Cox Regression Results for GBC Data\") + # Add title\n  theme_classic() + # classic theme for clean look\n  theme(\n    axis.line.y = element_blank(),          # remove y-axis line\n    axis.ticks.y = element_blank(),         # remove y-axis ticks\n    axis.text.y = element_text(size = 11),  # set variable label size\n    axis.title.y = element_blank()          # remove y-axis title\n  )"
  },
  {
    "objectID": "sec4.html#visualizing-hazard-ratios-i",
    "href": "sec4.html#visualizing-hazard-ratios-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Visualizing Hazard Ratios (I)",
    "text": "Visualizing Hazard Ratios (I)\n\nForest plot: Visualize hazard ratios and confidence intervals\n\n\n# Tidy with exponentiated coeffs (HR) and CI\ntidy_cox &lt;- tidy(cox_fit, exponentiate = TRUE, conf.int = TRUE) \ntidy_cox$term &lt;- recode(tidy_cox$term,           # Relabel the variables\n                hormone = \"Hormone Therapy\", \n                meno = \"Menopausal\", \n                age40 = \"Older than 40\", \n                grade2 = \"Tumor Grade II vs I\",\n                grade3 = \"Tumor Grade III vs I\",\n                size = \"Tumor Size (mm)\", \n                prog = \"Progesterone (100 fmol/ml)\", \n                estrg = \"Estrogen (100 fmol/ml)\")\n\ntidy_cox |&gt;  # plot of hazard ratios and 95% CIs\n  ggplot(aes(y=term, x=estimate, xmin=conf.low, xmax=conf.high)) + \n  geom_pointrange() +  # plots center point (x) and range (xmin, xmax)\n  geom_vline(xintercept=1, linetype = 2) + # vertical line at HR=1\n  scale_x_log10(\"Hazard ratio (95% CI)\") + # log scale for x-axis\n  theme_classic() + # classic theme for clean look\n  theme(\n    axis.line.y = element_blank(),          # remove y-axis line\n    axis.ticks.y = element_blank(),         # remove y-axis ticks\n    axis.text.y = element_text(size = 11),  # set variable label size\n    axis.title.y = element_blank()          # remove y-axis title\n  )"
  },
  {
    "objectID": "sec4.html#visualizing-hazard-ratios-ii",
    "href": "sec4.html#visualizing-hazard-ratios-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Visualizing Hazard Ratios (II)",
    "text": "Visualizing Hazard Ratios (II)\n\nResult"
  },
  {
    "objectID": "sec4.html#forest-plot-exercise",
    "href": "sec4.html#forest-plot-exercise",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Forest Plot Exercise",
    "text": "Forest Plot Exercise\n\nTask: customize the forest plot\n\nUse square rather than default circle for point estimates\nSet x-axis ticks at 0.5, 1, 2.0, and 4.0\nAdd a title: “Cox Regression Results for GBC Data”\n\n\n\n\nSolution\ntidy_cox |&gt; \n  ggplot(aes(y=term, x=estimate, xmin=conf.low, xmax=conf.high)) + \n  geom_pointrange(shape = 15) +  # plots center point (x) in square and range (xmin, xmax)\n  geom_vline(xintercept=1, linetype = 2) + # vertical line at HR=1\n  scale_x_log10(\"Hazard ratio (95% CI)\",    # log scale for x-axis\n                breaks = c(0.5, 1, 2, 4)) + # log scale for x-axis\n  ggtitle(\"Cox Regression Results for GBC Data\") + # Add title\n  theme_classic() + # classic theme for clean look\n  theme(\n    axis.line.y = element_blank(),          # remove y-axis line\n    axis.ticks.y = element_blank(),         # remove y-axis ticks\n    axis.text.y = element_text(size = 11),  # set variable label size\n    axis.title.y = element_blank()          # remove y-axis title\n  )"
  },
  {
    "objectID": "sec4.html#model-based-prediction",
    "href": "sec4.html#model-based-prediction",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Model-Based Prediction",
    "text": "Model-Based Prediction\n\nPredicted survival function \\[\n\\hat S(t \\mid z) = \\exp\\left\\{- \\exp(\\hat\\beta^\\mathrm{T} z) \\hat\\Lambda_0(t)\\right\\}\n\\]\nPrepare new data for prediction\n\nA post-menpausal woman older than 40, undergoing hormone therapy, with tumor grade II, tumor size 20 mm, and progesterone and estrogen receptor levels both 100 fmol/ml.\n\n\n# Create new data for prediction\n# specify all covariate values\nnew_data &lt;- data.frame(hormone = 2, meno = 2, age40 = 1, grade = factor(2), \n                        size = 20, prog = 1, estrg = 1)\n\nnew_data\n\n  hormone meno age40 grade size prog estrg\n1       2    2     1     2   20    1     1"
  },
  {
    "objectID": "sec4.html#tidy-survival-prediction",
    "href": "sec4.html#tidy-survival-prediction",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tidy Survival Prediction",
    "text": "Tidy Survival Prediction\n\nUse survival::survfit() to predict survival probabilities\n\nnewdata: new data for prediction\ntimes: time points for prediction\nbroom::tidy() to tidy the output\n\n\n# Predict survival probabilities for `newdata`\npred_surv &lt;- survfit(cox_fit, newdata = new_data[1, ])\ntidy_pred_surv &lt;- tidy(pred_surv) # Tidy the survival prediction output\nhead(tidy_pred_surv) # Display the first few rows of the tidy output\n\n# A tibble: 6 × 8\n   time n.risk n.event n.censor estimate std.error conf.high conf.low\n  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 0.262    686       0        1        1         0         1        1\n2 0.492    685       0        1        1         0         1        1\n3 0.525    684       0        1        1         0         1        1\n4 0.557    683       0        2        1         0         1        1\n5 0.590    681       0        1        1         0         1        1\n6 0.951    680       0        1        1         0         1        1"
  },
  {
    "objectID": "sec4.html#visualizing-predicted-survival-i",
    "href": "sec4.html#visualizing-predicted-survival-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Visualizing Predicted Survival (I)",
    "text": "Visualizing Predicted Survival (I)\n\nUsing ggsurvfit package: ggsurvfit()\n\nPass survfit object to ggsurvfit()\nSimilar customization to KM curves\n\n\n\nlibrary(ggsurvfit) # Load ggsurvfit package\npred_fig &lt;- pred_surv |&gt;  # Pass the survfit object\n  ggsurvfit() + # Main function\n  add_confidence_interval() + # Add confidence interval\n  scale_x_continuous(\"Time (months)\", breaks = seq(0, 84, by = 12)) + # x-axis format\n  scale_y_continuous(\"Relapse-free survival probability\", limits = c(0, 1)) + # y-axis format\n  ggtitle(\"Predicted Relapse-Free Survival for a GBC Patient\") + # Add title\n  theme_classic() # Classic theme for clean look"
  },
  {
    "objectID": "sec4.html#visualizing-predicted-survival-ii",
    "href": "sec4.html#visualizing-predicted-survival-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Visualizing Predicted Survival (II)",
    "text": "Visualizing Predicted Survival (II)\n\nResult\n\n\npred_fig # print figure"
  },
  {
    "objectID": "sec4.html#prediction-graphics-exercise",
    "href": "sec4.html#prediction-graphics-exercise",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Prediction Graphics Exercise",
    "text": "Prediction Graphics Exercise\n\nTask: Add horizontal grid lines\n\n\n\n\nSolution\npred_fig + theme(panel.grid.major.y = element_line()) # Add horizontal grid lines"
  },
  {
    "objectID": "sec4.html#cox-model-diagnostics",
    "href": "sec4.html#cox-model-diagnostics",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Cox Model Diagnostics",
    "text": "Cox Model Diagnostics\n\nPh assumptions: Schoenfeld residuals\n\nDifference between observed and expected covariate values at each event time\nUse cox.zph() to test PH assumption\nUse survminer::ggcoxzph() on cox.zph object to visualize Schoenfeld residuals\n\nFunctional form of covariates\n\nPlot martingale residuals against (quantitative) covariates\nUse residuals(cox_fit, type = \"martingale\") to get martingale residuals`\n\nOther aspects\n\nAppropriateness of exponential link function\nInfluential points/outliers\nsurvminer::ggcoxdiagnostics()"
  },
  {
    "objectID": "sec4.html#example-schoenfeld-residuals",
    "href": "sec4.html#example-schoenfeld-residuals",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Example: Schoenfeld Residuals",
    "text": "Example: Schoenfeld Residuals"
  },
  {
    "objectID": "sec4.html#schoenfeld-residuals",
    "href": "sec4.html#schoenfeld-residuals",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Schoenfeld Residuals",
    "text": "Schoenfeld Residuals\n\nCheck proportionality\n\nFocus on graphics; use \\(p\\)-value only as guideline\n\n\nlibrary(survminer) # Load survminer package\n\nWarning: package 'survminer' was built under R version 4.4.1\n\n\nLoading required package: ggpubr\n\n\nWarning: package 'ggpubr' was built under R version 4.4.1\n\n\n\nAttaching package: 'survminer'\n\n\nThe following object is masked from 'package:survival':\n\n    myeloma\n\nph_test &lt;- cox.zph(cox_fit) # Test proportional hazards assumption\nggcoxzph(ph_test) # Visualize Schoenfeld residuals\n\nWarning in seq.default(from = min(xx), to = max(xx), length = nsmo): partial\nargument match of 'length' to 'length.out'\n\n\nWarning in seq.default(min(xx), max(xx), length = 17): partial argument match\nof 'length' to 'length.out'"
  },
  {
    "objectID": "sec4.html#exponential-link-function",
    "href": "sec4.html#exponential-link-function",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Exponential Link Function",
    "text": "Exponential Link Function\n\nMartingale vs. \\(\\hat\\beta^\\mathrm{T} Z_i\\)\n\n\n# Martingale residuals vs linear predictor\nggcoxdiagnostics(cox_fit, type = \"martingale\",    # martingale on y-axi\n                 ox.scale = \"linear.predictions\") # linear predictor on x-axis\n\nWarning in tidyr::gather_(res, key_col = \"covariate\", value_col = \"res\", :\npartial argument match of 'gather_col' to 'gather_cols'\n\n\nWarning: `gather_()` was deprecated in tidyr 1.2.0.\nℹ Please use `gather()` instead.\nℹ The deprecated feature was likely used in the survminer package.\n  Please report the issue at &lt;https://github.com/kassambara/survminer/issues&gt;.\n\n\nWarning in gather_.data.frame(res, key_col = \"covariate\", value_col = \"res\", :\npartial argument match of 'gather_col' to 'gather_cols'\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "sec4.html#influential-points",
    "href": "sec4.html#influential-points",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Influential Points",
    "text": "Influential Points\n\nDeviance residuals\n\n\n# Deviance residuals vs linear predictor\nggcoxdiagnostics(cox_fit, type = \"deviance\",  # deviance on y-axis\n                 ox.scale = \"observation.id\", # observation ID on x-axis\n                 sline = FALSE)               # no smoothed line\n\nWarning in tidyr::gather_(res, key_col = \"covariate\", value_col = \"res\", :\npartial argument match of 'gather_col' to 'gather_cols'\n\n\nWarning in gather_.data.frame(res, key_col = \"covariate\", value_col = \"res\", :\npartial argument match of 'gather_col' to 'gather_cols'"
  },
  {
    "objectID": "sec4.html#further-residual-graphics",
    "href": "sec4.html#further-residual-graphics",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Further Residual Graphics",
    "text": "Further Residual Graphics\n\nBasic arguments of ggcoxdiagnostics()\n\ncoxph object\ntype: Residual type (“martingale”, “deviance”, “score”, “schoenfeld”, “dfbeta”, “dfbetas”, and “scaledsch”)`\nox.scale: Scale for x-axis (“linear.predictions”, “observation.id”, “time”)\npoint.col: Color of points\npoint.size: Size of points\netc.\n\nMore about survminer\n\nsurvminer website"
  },
  {
    "objectID": "sec4.html#general-residual-graphics",
    "href": "sec4.html#general-residual-graphics",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "General Residual Graphics",
    "text": "General Residual Graphics\n\nBasic arguments of ggcoxdiagnostics()\n\ncoxph object\ntype: Residual type (“martingale”, “deviance”, “score”, “schoenfeld”, “dfbeta”, “dfbetas”, and “scaledsch”)`\nox.scale: Scale for x-axis (“linear.predictions”, “observation.id”, “time”)\npoint.col: Color of points\npoint.size: Size of points\netc.\n\nMore about survminer\n\nsurvminer website"
  },
  {
    "objectID": "sec4.html#fine-gray-model",
    "href": "sec4.html#fine-gray-model",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Fine-Gray Model",
    "text": "Fine-Gray Model\n\nProportional sub-distribution hazards \\[\n  \\lambda_k(t \\mid Z) = \\lambda_0(t) \\exp(\\beta_1 Z_1 + \\beta_2 Z_2 + \\ldots + \\beta_p Z_p)\\]\n\n\\(\\lambda_0(t)\\): baseline sub-distribution hazard function\n\\(\\exp(\\beta_j)\\): sub-distribution hazard ratio for covariate \\(Z_j\\)\n\n\n\nlibrary(tidycmprsk) # Load tidycmprsk package\n\nWarning: package 'tidycmprsk' was built under R version 4.4.1\n\n\n\nAttaching package: 'tidycmprsk'\n\n\nThe following object is masked from 'package:gtsummary':\n\n    trial\n\ndata(\"trial\", package = \"tidycmprsk\") # Load trial data from tidycmprsk package\nhead(trial) # Display the first few rows of the data\n\n# A tibble: 6 × 9\n  trt      age marker stage grade response death death_cr           ttdeath\n  &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt;    &lt;int&gt; &lt;int&gt; &lt;fct&gt;                &lt;dbl&gt;\n1 Drug A    23  0.16  T1    II           0     0 censor                24  \n2 Drug B     9  1.11  T2    I            1     0 censor                24  \n3 Drug A    31  0.277 T1    II           0     0 censor                24  \n4 Drug A    NA  2.07  T3    III          1     1 death other causes    17.6\n5 Drug A    51  2.77  T4    III          1     1 death other causes    16.4\n6 Drug B    39  0.613 T4    I            0     1 death from cancer     15.6"
  },
  {
    "objectID": "sec4.html#regression-of-sub-distribution-hazard",
    "href": "sec4.html#regression-of-sub-distribution-hazard",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Regression of Sub-Distribution Hazard",
    "text": "Regression of Sub-Distribution Hazard\n\nSub-distribution hazard \\[\n\\Lambda_k(t\\mid Z) = -\\log\\left\\{1 - F_k(t\\mid Z)\\right\\}\n\\]\n\n\\(F_k(t \\mid Z)\\): cumulative incidence function (CIF) of the \\(k\\)-th cause\n\\(\\lambda_k(t \\mid Z)=\\Lambda_k'(t)\\): risk of the \\(k\\)-th cause in presence of other competing events in the whole population\n\n\n\\[\n    \\lambda_k(t \\mid Z) = \\lambda_0(t) \\exp(\\beta_1 Z_1 + \\beta_2 Z_2 + \\ldots + \\beta_p Z_p)\n\\]"
  },
  {
    "objectID": "sec4.html#modeling-target",
    "href": "sec4.html#modeling-target",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Modeling Target",
    "text": "Modeling Target\n\nSub-distribution hazard \\[\n\\Lambda_k(t\\mid Z) = -\\log\\left\\{1 - F_k(t\\mid Z)\\right\\}\n\\]\n\n\\(F_k(t \\mid Z)\\): cumulative incidence function (CIF) of the \\(k\\)-th cause\n\\(\\lambda_k(t \\mid Z)=\\Lambda_k'(t)\\): risk of the \\(k\\)-th cause in presence of other competing events in the whole population\n\nDifferent from cause-specific hazard\n\nCause-specific hazard \\[\\lambda^\\mathrm{c}_k(t \\mid Z) =  \\Pr(t\\leq T&lt; t+ \\mathrm{d}t\\mid T\\geq t, Z)/\\mathrm{d}t \\]\nRisk of the \\(k\\)-th cause in survivors"
  },
  {
    "objectID": "sec4.html#sub-distribution-hazard",
    "href": "sec4.html#sub-distribution-hazard",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Sub-Distribution Hazard",
    "text": "Sub-Distribution Hazard\n\nDefinition \\[\n\\Lambda_k(t\\mid Z) = -\\log\\left\\{1 - F_k(t\\mid Z)\\right\\}\n\\]\n\n\\(F_k(t \\mid Z)\\): cumulative incidence function (CIF) of the \\(k\\)-th cause\n\\(\\lambda_k(t \\mid Z)=\\Lambda_k'(t)\\): risk of the \\(k\\)-th cause in presence of other competing events in the whole population\n\nDifferent from cause-specific hazard\n\nCause-specific hazard \\[\\lambda^\\mathrm{c}_k(t \\mid Z) =  \\Pr(t\\leq T&lt; t+ \\mathrm{d}t\\mid T\\geq t, Z)/\\mathrm{d}t \\]\nRisk of the \\(k\\)-th cause in survivors"
  },
  {
    "objectID": "sec4.html#fitting-fine-gray-model",
    "href": "sec4.html#fitting-fine-gray-model",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Fitting Fine-Gray Model",
    "text": "Fitting Fine-Gray Model\n\nUsing cmprsk::crr()\n\nformula: Surv(time, status) ~ covariates\n\nstatus: a factor with first level indicating censoring and subsequent levels the competing risks\n\nfailcode: event code for the cause of interest\n\n\n\nfg_fit &lt;- crr(Surv(ttdeath, death_cr) ~ trt + age + marker + stage, # fit FG model\n              failcode = \"death from cancer\", trial) # for death from cancer\n\n21 cases omitted due to missing values\n\nfg_fit # print the Fine-Gray model fit summary\n\n\nVariable    Coef     SE      HR     95% CI       p-value    \ntrtDrug B   0.396    0.283   1.49   0.85, 2.59   0.16       \nage         0.009    0.011   1.01   0.99, 1.03   0.42       \nmarker      -0.002   0.159   1.00   0.73, 1.36   0.99       \nstageT2     0.140    0.475   1.15   0.45, 2.92   0.77       \nstageT3     0.500    0.460   1.65   0.67, 4.06   0.28       \nstageT4     0.959    0.418   2.61   1.15, 5.91   0.022"
  },
  {
    "objectID": "sec4.html#tidy-fine-gray-model-output",
    "href": "sec4.html#tidy-fine-gray-model-output",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Tidy Fine-Gray Model Output",
    "text": "Tidy Fine-Gray Model Output\n\nUsing broom package: broom::tidy()\n\nProvides a tidy data frame for easy manipulation and visualization\n\n\n\ntidy_fg &lt;- tidy(fg_fit, exponentiate = TRUE, conf.int = TRUE) # Tidy model output\ntidy_fg # Display the tidy output\n\n# A tibble: 6 × 7\n  term      estimate std.error statistic conf.low conf.high p.value\n  &lt;chr&gt;        &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 trtDrug B    1.49     0.283     1.40      0.854      2.59   0.16 \n2 age          1.01     0.0111    0.804     0.987      1.03   0.42 \n3 marker       0.998    0.159    -0.0126    0.731      1.36   0.99 \n4 stageT2      1.15     0.475     0.296     0.454      2.92   0.77 \n5 stageT3      1.65     0.460     1.09      0.670      4.06   0.28 \n6 stageT4      2.61     0.418     2.30      1.15       5.91   0.022"
  },
  {
    "objectID": "sec4.html#forest-plot-exercise-1",
    "href": "sec4.html#forest-plot-exercise-1",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Forest Plot Exercise",
    "text": "Forest Plot Exercise\n\nTask: Visualize sub-distribution hazard ratios and confidence intervals\n\n\n\nSolution\n# tidy_fg$term &lt;- recode(tidy_fg$term, ...) # Relabel the variables\ntidy_fg |&gt;  # plot of sub-distribution hazard ratios and 95% CIs\n  ggplot(aes(y=term, x=estimate, xmin=conf.low, xmax=conf.high)) + \n  geom_pointrange() +  # plots center point (x) and range (xmin, xmax)\n  geom_vline(xintercept=1, linetype = 2) + # vertical line at HR=1\n  scale_x_log10(\"Sub-distribution hazard ratio (95% CI)\") + # log scale for x-axis\n  theme_classic() + # classic theme for clean look\n  theme(\n    axis.line.y = element_blank(),          # remove y-axis line\n    axis.ticks.y = element_blank(),         # remove y-axis ticks\n    axis.text.y = element_text(size = 11),  # set variable label size\n    axis.title.y = element_blank()          # remove y-axis title\n  )"
  },
  {
    "objectID": "sec4.html#parameter-estimates-and-variance",
    "href": "sec4.html#parameter-estimates-and-variance",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Parameter Estimates and Variance",
    "text": "Parameter Estimates and Variance\n\nExtracting \\(\\hat\\beta\\) and \\(\\hat{\\mathrm{var}}(\\hat\\beta)\\)\n\n\ncoef(fg_fit) # Extract coefficients\n\n   trtDrug B          age       marker      stageT2      stageT3      stageT4 \n 0.396486121  0.008956935 -0.002006717  0.140251967  0.500394141  0.958640247 \n\nvcov(fg_fit) |&gt; head() # Extract variance-covariance matrix\n\n              [,1]          [,2]          [,3]         [,4]          [,5]\n[1,]  0.0800665101  0.0001535045 -0.0051801922  0.011605373  0.0094601803\n[2,]  0.0001535045  0.0001239790 -0.0005094795  0.001111245 -0.0009368412\n[3,] -0.0051801922 -0.0005094795  0.0251827414 -0.028697647 -0.0037297926\n[4,]  0.0116053732  0.0011112447 -0.0286976466  0.225187822  0.1101888313\n[5,]  0.0094601803 -0.0009368412 -0.0037297926  0.110188831  0.2111942725\n[6,]  0.0219362509  0.0010459739 -0.0176113331  0.124589145  0.1064088264\n             [,6]\n[1,]  0.021936251\n[2,]  0.001045974\n[3,] -0.017611333\n[4,]  0.124589145\n[5,]  0.106408826\n[6,]  0.174446817"
  },
  {
    "objectID": "sec4.html#fg-regression-table",
    "href": "sec4.html#fg-regression-table",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "FG Regression Table",
    "text": "FG Regression Table\n\nUsing gtsummary package: tbl_regression()\n\nAutomatically formats regression results into a publication-ready table"
  },
  {
    "objectID": "sec4.html#fg-regression-table-i",
    "href": "sec4.html#fg-regression-table-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "FG Regression Table (I)",
    "text": "FG Regression Table (I)\n\nUsing gtsummary package: tbl_regression()\n\nSimilarly to tabulating fitted coxph object\n\n\n\nlibrary(gtsummary) # Load gtsummary package\nfg_tbl &lt;- fg_fit |&gt; tbl_regression(exponentiate = TRUE) |&gt;  # Create a regression table \n          add_global_p() # Add global p-value for categorical variables"
  },
  {
    "objectID": "sec4.html#fg-regression-table-ii",
    "href": "sec4.html#fg-regression-table-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "FG Regression Table (II)",
    "text": "FG Regression Table (II)\n\nResult\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nHR1\n95% CI1\np-value\n\n\n\n\nChemotherapy Treatment\n\n\n\n\n0.2\n\n\n    Drug A\n—\n—\n\n\n\n\n    Drug B\n1.49\n0.85, 2.59\n\n\n\n\nAge\n1.01\n0.99, 1.03\n0.4\n\n\nMarker Level (ng/mL)\n1.00\n0.73, 1.36\n&gt;0.9\n\n\nT Stage\n\n\n\n\n0.058\n\n\n    T1\n—\n—\n\n\n\n\n    T2\n1.15\n0.45, 2.92\n\n\n\n\n    T3\n1.65\n0.67, 4.06\n\n\n\n\n    T4\n2.61\n1.15, 5.91\n\n\n\n\n\n1 HR = Hazard Ratio, CI = Confidence Interval"
  },
  {
    "objectID": "sec4.html#model-based-prediction-1",
    "href": "sec4.html#model-based-prediction-1",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Model-Based Prediction",
    "text": "Model-Based Prediction\n\nPredicted cumulative incidence function (CIF) \\[\n  \\hat F_k(t \\mid z) = 1 - \\exp\\left\\{-\\hat\\Lambda_k(t \\mid z)\\right\\}\n  \\]\n\n\n# Predict cumulative incidence function for first 10 patients\nfg_pred &lt;- predict(fg_fit, newdata= trial[1:10, ], times = c(6, 12, 18)) # Predict CIF\nfg_pred # Display the predicted CIF\n\n$`time 6`\n [1] 0.002279375 0.003430702 0.002447917          NA 0.007579470 0.010150002\n [7] 0.002582498 0.002462688 0.002448570 0.006155050\n\n$`time 12`\n [1] 0.02093164 0.03135502 0.02246374         NA 0.06809922 0.09023665\n [7] 0.02368558 0.02259790 0.02246967 0.05562630\n\n$`time 18`\n [1] 0.07090010 0.10483563 0.07594466         NA 0.21744137 0.28018810\n [7] 0.07995368 0.07638548 0.07596414 0.18042196"
  },
  {
    "objectID": "sec4.html#next-steps",
    "href": "sec4.html#next-steps",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Next Steps",
    "text": "Next Steps\n\nMachine learning: build best predictive model with many predictors\n\nRegularized Cox regression\nParametric AFT models\nSurvival trees\ntidymodels packages (censored)"
  },
  {
    "objectID": "sec5.html#key-takeaways",
    "href": "sec5.html#key-takeaways",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Key Takeaways",
    "text": "Key Takeaways"
  },
  {
    "objectID": "ml.html",
    "href": "ml.html",
    "title": "Module 5. Machine Learning",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)",
    "crumbs": [
      "Home",
      "Module 5. Machine Learning"
    ]
  },
  {
    "objectID": "ml.html#slides",
    "href": "ml.html#slides",
    "title": "Module 5. Machine Learning",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)",
    "crumbs": [
      "Home",
      "Module 5. Machine Learning"
    ]
  },
  {
    "objectID": "ml.html#r-code",
    "href": "ml.html#r-code",
    "title": "Module 5. Machine Learning",
    "section": "R code",
    "text": "R code\n\n\nShow the code\n# -------------------------------------------\n# Survival Analysis: Module 5 Code\n# -------------------------------------------\n\n# Load necessary packages\nlibrary(tidyverse) # Load tidyverse packages\nlibrary(survival) # Load survival package\nlibrary(broom) # Load broom package\nlibrary(gtsummary) # Load gtsummary package\nlibrary(ggsurvfit) # Load ggsurvfit package\nlibrary(survminer) # Load survminer package\nlibrary(tidycmprsk) # Load tidycmprsk package\n\n# ---------------------------\n# 1. Load and Prepare Data\n# ---------------------------\n\n# Load GBC dataset\ngbc &lt;- read.table(\"data/gbc.txt\", header = TRUE) # Load GBC dataset\n\n# Reformat the data\ndf &lt;- gbc |&gt;  # calculate time to first event (relapse or death)\n  group_by(id) |&gt; # group by id\n  arrange(time) |&gt; # sort rows by time\n  slice(1) |&gt;      # get the first row within each id\n  ungroup() |&gt;     # remove grouping\n  mutate(\n    age40 = ifelse(age &gt;= 40, 1, 0), # create binary variable for age &gt;= 40\n    grade = factor(grade), # convert grade to factor\n    prog = prog / 100, # rescale progesterone receptor\n    estrg = estrg / 100 # rescale estrogen receptor\n    ) \n\n# ---------------------------\n# 2. Fit Cox PH Model\n# ---------------------------\n\n# Model fitting: survival::coxph()\ncox_fit &lt;- coxph(Surv(time, status) ~ hormone + meno + age40 + grade + size + prog + estrg, \n                 data = df)\nsummary(cox_fit) # Print model summary\n\n# ---------------------------\n# 3. Tidy Output with broom\n# ---------------------------\n\ntidy_cox &lt;- tidy(cox_fit) # Tidy the coxph output\ntidy_cox # Display the tidy output\n\n# ---------------------------\n# 4. Tabulate Results with gtsummary\n# ---------------------------\n\ncox_tbl &lt;- cox_fit |&gt; tbl_regression( # Create a regression table\n                exponentiate = TRUE, # Exponentiate coefficients to get hazard ratios\n                label = list(hormone ~ \"Hormone Therapy\", # Custom labels\n                             meno ~ \"Menopausal\", \n                             age40 ~ \"Older than 40\", \n                             grade ~ \"Tumor Grade\", \n                             size ~ \"Tumor Size (mm)\", \n                             prog ~ \"Progesterone Receptor (100 fmol/ml)\", \n                             estrg ~ \"Estrogen Receptor  (100 fmol/ml)\")\n               ) |&gt; \n          add_global_p() # Add global p-value for categorical variables\ncox_tbl # Display the regression table\n\n# ---------------------------\n# 5. Customize the Regression Table\n# ---------------------------\n\ncox_tbl |&gt; # Start with the regression table\n  modify_caption(\"Cox regression analysis of the German breast cancer study\") |&gt; # Add caption\n  bold_p() |&gt; # Bold significant p-values\n  italicize_levels() # Italicize variable levels\n\n# ---------------------------\n# 6. Fit Accelerated Failure Time (AFT) Model\n# ---------------------------\n\n# Fit a Weibull AFT model\naft_fit &lt;- survreg(Surv(time, status) ~ hormone + meno + age + grade + size + prog + estrg, \n                    data = df, dist = \"weibull\") # specify the Weibull model\n\n# ---------------------------\n# 7. Forest Plot of Hazard Ratios\n# ---------------------------\n\n# Tidy with exponentiated coeffs (HR) and CI\ntidy_cox &lt;- tidy(cox_fit, exponentiate = TRUE, conf.int = TRUE) \ntidy_cox$term &lt;- recode(tidy_cox$term,           # Relabel the variables\n                hormone = \"Hormone Therapy\", \n                meno = \"Menopausal\", \n                age40 = \"Older than 40\", \n                grade2 = \"Tumor Grade II vs I\",\n                grade3 = \"Tumor Grade III vs I\",\n                size = \"Tumor Size (mm)\", \n                prog = \"Progesterone (100 fmol/ml)\", \n                estrg = \"Estrogen (100 fmol/ml)\")\n\ntidy_cox |&gt;  # plot of hazard ratios and 95% CIs\n  ggplot(aes(y=term, x=estimate, xmin=conf.low, xmax=conf.high)) + \n  geom_pointrange(shape = 15) +  # plots center point (x) in square and range (xmin, xmax)\n  geom_vline(xintercept=1, linetype = 2) + # vertical line at HR=1\n  scale_x_log10(\"Hazard ratio (95% CI)\",    # log scale for x-axis\n                breaks = c(0.5, 1, 2, 4)) + # log scale for x-axis\n  ggtitle(\"Cox Regression Results for GBC Data\") + # Add title\n  theme_classic() + # classic theme for clean look\n  theme(\n    axis.line.y = element_blank(),          # remove y-axis line\n    axis.ticks.y = element_blank(),         # remove y-axis ticks\n    axis.text.y = element_text(size = 11),  # set variable label size\n    axis.title.y = element_blank()          # remove y-axis title\n  )\n\n# ---------------------------\n# 8. Prediction and Visualization\n# ---------------------------\n\n# Create new data for prediction\nnew_data &lt;- data.frame(hormone = 2, meno = 2, age40 = 1, grade = factor(2), \n                            size = 20, prog = 1, estrg = 1)\n\n# Predict survival probabilities for `newdata`\npred_surv &lt;- survfit(cox_fit, newdata = new_data[1, ])\ntidy_pred_surv &lt;- tidy(pred_surv) # Tidy the survival prediction output\nhead(tidy_pred_surv) # Display the first few rows of the tidy output\n\n# Visualize predicted survival\npred_fig &lt;- pred_surv |&gt;  # Pass the survfit object\n  ggsurvfit() + # Main function\n  add_confidence_interval() + # Add confidence interval\n  scale_x_continuous(\"Time (months)\", breaks = seq(0, 84, by = 12)) + # x-axis format\n  scale_y_continuous(\"Relapse-free survival probability\", limits = c(0, 1)) + # y-axis format\n  ggtitle(\"Predicted Relapse-Free Survival for a GBC Patient\") + # Add title\n  theme_classic() # Classic theme for clean look\n\n# Add horizontal grid lines\npred_fig + theme(panel.grid.major.y = element_line()) # Add horizontal grid lines\n\n# ---------------------------\n# 9. Cox Model Diagnostics\n# ---------------------------\n\n# PH assumption: Schoenfeld residuals\nph_test &lt;- cox.zph(cox_fit) # Test proportional hazards assumption\nggcoxzph(ph_test) # Visualize Schoenfeld residuals\n\n# Functional form: Martingale residuals vs linear predictor\nggcoxdiagnostics(cox_fit, type = \"martingale\",    # martingale on y-axi\n                 ox.scale = \"linear.predictions\") # linear predictor on x-axis\n\n# Influential points: Deviance residuals\nggcoxdiagnostics(cox_fit, type = \"deviance\",  # deviance on y-axis\n                 ox.scale = \"observation.id\", # observation ID on x-axis\n                 sline = FALSE)               # no smoothed line\n\n# ---------------------------\n# 10. Fine-Gray Model (Competing Risks)\n# ---------------------------\n\n# Load trial dataset\ndata(\"trial\", package = \"tidycmprsk\") # Load trial data from tidycmprsk package\nhead(trial) # Display the first few rows of the data\n\n# Fit Fine-Gray model\nfg_fit &lt;- crr(Surv(ttdeath, death_cr) ~ trt + age + marker + stage, # fit FG model\n              failcode = \"death from cancer\", trial) # for death from cancer\nfg_fit # print the Fine-Gray model fit summary\n\n# Extract coefficients and variance\ncoef(fg_fit) # Extract coefficients\nvcov(fg_fit) |&gt; head() # Extract variance-covariance matrix\n\n# Tidy FG model output\ntidy_fg &lt;- tidy(fg_fit, exponentiate = TRUE, conf.int = TRUE) # Tidy model output\ntidy_fg # Display the tidy output\n\n# Forest plot for sub-distribution hazard ratios\ntidy_fg |&gt;  # plot of sub-distribution hazard ratios and 95% CIs\n  ggplot(aes(y=term, x=estimate, xmin=conf.low, xmax=conf.high)) + \n  geom_pointrange() +  # plots center point (x) and range (xmin, xmax)\n  geom_vline(xintercept=1, linetype = 2) + # vertical line at HR=1\n  scale_x_log10(\"Sub-distribution hazard ratio (95% CI)\") + # log scale for x-axis\n  theme_classic() + # classic theme for clean look\n  theme(\n    axis.line.y = element_blank(),          # remove y-axis line\n    axis.ticks.y = element_blank(),         # remove y-axis ticks\n    axis.text.y = element_text(size = 11),  # set variable label size\n    axis.title.y = element_blank()          # remove y-axis title\n  )\n\n# FG regression table\nfg_tbl &lt;- fg_fit |&gt; tbl_regression(exponentiate = TRUE) |&gt;  # Create a regression table \n          add_global_p() # Add global p-value for categorical variables\nfg_tbl # display the regression table\n\n# Model-based prediction for CIF\nfg_pred &lt;- predict(fg_fit, newdata= trial[1:10, ], times = c(6, 12, 18)) # Predict CIF\nfg_pred # Display the predicted CIF",
    "crumbs": [
      "Home",
      "Module 5. Machine Learning"
    ]
  },
  {
    "objectID": "sec5.html#setting",
    "href": "sec5.html#setting",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Setting",
    "text": "Setting\n\nWith many covariates\n\nPrediction accuracy: under- vs over-fitting \n\nToo many predictors \\(\\to\\) overfitting\n\nInterpretation: easier with fewer predictors"
  },
  {
    "objectID": "sec5.html#regularized-cox-regression",
    "href": "sec5.html#regularized-cox-regression",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Regularized Cox Regression",
    "text": "Regularized Cox Regression\n\nIdea\n\nPenalize the magnitude of coefficients (\\(L^q\\)-norm) to avoid overfitting\n\nElastic net: minimize objective function \\[\n\\ell(\\beta) = -\\mbox{log-partial-likelihood}(\\beta) + \\lambda\\sum_{j=1}^p\\left\\{\\alpha|\\beta_j|+2^{-1}(1-\\alpha)\\beta_j^2\\right\\}\n\\]\n\n\\(\\lambda\\): tuning parameter that controls the strength of penalty\n\nDetermined by cross-validation\n\n\\(\\alpha\\): controls the type of penalty\n\n\\(\\alpha = 0\\) \\(\\to\\) ridge regression: handles correlated predictors better\n\\(\\alpha = 1\\) \\(\\to\\) lasso regression: performs variable selection\n\n\n\n\n\nlibrary(tidymodels)\nlibrary(censored)\n\n# Load the data\nbuilding_complaints &lt;- modeldatatoo::data_building_complaints()\nglimpse(building_complaints)\n\n# The standard form for time-to-event data are Surv objects which capture the time as well as the event status. As with all transformations of the response, it is advisable to do this before heading into the model fitting process with tidymodels.\n\nbuilding_complaints &lt;- building_complaints %&gt;% \n  mutate(\n    disposition_surv = Surv(days_to_disposition, status == \"CLOSED\"), \n    .keep = \"unused\"\n  )\n\n\n# Data splitting and resampling\nset.seed(403)\ncomplaints_split &lt;- initial_validation_split(building_complaints)"
  }
]