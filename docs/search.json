[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to the workshop",
    "section": "",
    "text": "This site presents materials for the short course Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data to be taught at the 2025 Joint Statistical Meetings (JSM) in Nashville, TN.\nThis course aims to equip participants with the skills to apply tidy principles to survival analysis, fostering a more organized and reproducible approach to data analysis in R.\nTarget Audience: Statisticians, data analysts, researchers, and students interested in survival analysis who are familiar with R and the Tidyverse."
  },
  {
    "objectID": "index.html#time-and-place",
    "href": "index.html#time-and-place",
    "title": "Welcome to the workshop",
    "section": "Time and Place",
    "text": "Time and Place\n\nSunday, Aug 3: 8:30 AM - 12:30 PM\nMusic City Center | Room: CC-110A"
  },
  {
    "objectID": "index.html#instructor-profile",
    "href": "index.html#instructor-profile",
    "title": "Welcome to the workshop",
    "section": "Instructor Profile",
    "text": "Instructor Profile\n\nLu Mao, PhD\n\nAssociate Professor of Biostatistics at UW-Madison\nMethodologic research\n\nR01HL149875: Novel Statistical Methods for Complex Time-to-Event Data in Cardiovascular Clinical Trials (12/01/2019 – 07/31/2028)\nDMS2015526: Randomized Trials with Non-Compliance (07/01/2020 – 06/30/2024)\n\nCollaborative research\n\nCardiovascular disease, cancer, radiology, behavioral health interventions\n\nTeaching\n\nSurvival Analysis: Theory and Methods (UW; 2020 - 2025)\n\nEditorial service\n\nStatistical Editor, JACC Journals\nAssociate Editor, Statistics for Biopharmaceutical Research"
  },
  {
    "objectID": "index.html#learning-outcomes",
    "href": "index.html#learning-outcomes",
    "title": "Welcome to the workshop",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nUnderstand the fundamentals of survival analysis, including key concepts such as censored data, survival functions, and hazard functions.\nUtilize R’s Tidyverse packages to manipulate, visualize, and analyze survival data.\nFit and interpret survival models using the survival and survminer packages in conjunction with Tidyverse functions.\nCreate clear and informative visualizations of survival data, including Kaplan-Meier curves and survival distributions.\nCommunicate survival analysis results effectively using tidy principles."
  },
  {
    "objectID": "index.html#outline",
    "href": "index.html#outline",
    "title": "Welcome to the workshop",
    "section": "Outline",
    "text": "Outline\n\n1. Introduction to Survival Analysis (30 min)\n\n1.1 Key concepts: survival functions, hazard functions, and censoring\n1.2 German breast cancer study: a working example\n1.3 Overview of survival analysis with survival package\n\n2. Data Manipulation with Tidyverse (45 min)\n\n2.1 Importing and cleaning survival data\n2.2 Using dplyr for data manipulation\n2.3 Simple visualization of follow-up data with ggplot2\n\n3. Nonparametric Survival Analysis (50 min)\n\n3.1 Tabulation of summary statistics with gtsummary\n3.2 Visualing Kaplan-Meier curves with ggsurvfit (or survminer)\n3.3 Tidy analysis of competing risks using tidycmprsk\n\n4. Cox proportional hazards regression (40 min)\n\n4.1 Tabulation of regression results with gtsummary\n4.2 Model diagnostics and residual plots with survminer\n4.3 Fine-Gray model for competing risks with tidycmprsk\n\n5. Machine learning using tidymodels (50 min)\n\n5.1 Modeling basics\n5.2 Using the censored package for survival models"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Section 1. Introduction",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)\n\n\n\n\n\nShow the code\n#################################################################\n# This code generates the numerical results in chapter 1       ##\n#################################################################\n\nlibrary(survival)  # For standard (univariate) survival analysis\nlibrary(Wcompo)    # For weighted total events (CompoML function)\nlibrary(rmt)       # For the hfaction data set (Heart Failure ACTION trial)\nlibrary(tidyverse) # For data wrangling (dplyr, ggplot2, etc.)\n\n# load hfaction data\ndata(hfaction)\nhead(hfaction) \n#&gt; Shows the first rows of the hfaction data frame\n\n# convert status=1 for death, 2=hospitalization\n# (Swapping the original coding of event types in hfaction)\nhfaction &lt;- hfaction |&gt;\n  mutate(\n    status = case_when(\n      status == 1 ~ 2, # status previously \"1\" becomes \"2\" now\n      status == 2 ~ 1, # status previously \"2\" becomes \"1\" now\n      status == 0 ~ 0  # status \"0\" remains \"0\" (censoring)\n    )\n  )\n\nhead(hfaction)\n#&gt; Check that the status values have been reassigned correctly\n\n# count unique patients in each arm\nhfaction |&gt; \n  group_by(trt_ab) |&gt;\n  distinct(patid) |&gt;\n  count(trt_ab)\n#&gt; Summarizes how many unique patients are in each treatment arm (trt_ab)\n\n# TFE: take the first event per patient id\n# This means each patient is represented by their earliest event (or censoring)\nhfaction_TFE &lt;- hfaction |&gt;\n  arrange(patid, time) |&gt;\n  group_by(patid) |&gt;\n  slice_head() |&gt;\n  ungroup()\n\n# -------------------------------------------------------------------------\n# Mortality analysis\n# -------------------------------------------------------------------------\n\n## Get mortality data\nhfaction_D &lt;- hfaction |&gt;\n  filter(status != 2) # remove hospitalization records (now coded as \"2\")\n\n## Cox model for death against trt_ab\nobj_D &lt;- coxph(Surv(time, status) ~ trt_ab, data = hfaction_D)\nsummary(obj_D)\n#&gt; n= 426, number of events= 93 \n#&gt; coef exp(coef) se(coef)      z Pr(&gt;|z|)  \n#&gt; trt_ab -0.3973    0.6721   0.2129 -1.866   0.0621 .\n# Interpretation: a hazard ratio &lt; 1 suggests lower hazard of death in the \n# training arm, though p-value is ~0.06.\n\n# -------------------------------------------------------------------------\n# TFE analysis\n# -------------------------------------------------------------------------\n\n## how many of first events are death (1) or hosp (2)\nhfaction_TFE |&gt;\n  count(status)\n#&gt; Tells how many first events were coded as status=1 or status=2\n\n# Cox model for TFE against trt_ab\n# Here \"status &gt; 0\" means any event (death or hospitalization) vs. censoring\nobj_TFE &lt;- coxph(Surv(time, status &gt; 0) ~ trt_ab, data = hfaction_TFE)\nsummary(obj_TFE)\n#&gt; Similar interpretation as above, now for time to first event \n# (either death or hospitalization).\n\n# -------------------------------------------------------------------------\n# Mortality vs TFE\n# -------------------------------------------------------------------------\n\nlibrary(ggsurvfit) # For Kaplan-Meier plots using ggplot2\nlibrary(patchwork) # For combining plots side by side\n\npD &lt;- survfit2(Surv(time, status) ~ trt_ab, data = hfaction_D) |&gt;\n  ggsurvfit(linewidth = 1) +\n  scale_ggsurvfit() +\n  scale_color_discrete(labels = c(\"Usual care\", \"Training\")) +\n  scale_x_continuous(\"Time (years)\", limits = c(0, 4)) +\n  labs(y = \"Overall survival\")\n#&gt; pD is the plot of overall survival (death only) for each arm\n\npTFE &lt;- survfit2(Surv(time, status &gt; 0) ~ trt_ab, data = hfaction_TFE) |&gt;\n  ggsurvfit(linewidth = 1) +\n  scale_ggsurvfit() +\n  scale_color_discrete(labels = c(\"Usual care\", \"Training\")) +\n  scale_x_continuous(\"Time (years)\", limits = c(0, 4)) +\n  labs(y = \"Hospitalization-free survival\")\n#&gt; pTFE is the plot for time to first event (death or hospitalization)\n\n# Combine pD and pTFE plots side by side, sharing legends\npD + pTFE + plot_layout(guides = \"collect\") & \n  theme(\n    legend.position = \"top\", \n    legend.text = element_text(size = 12)\n  )\n\n# ggsave(\"images/intro_hfaction_unis.png\", width = 8, height = 4.5)\n#&gt; Uncomment to save the plot (if needed)\n\n# -------------------------------------------------------------------------\n# Total events (proportional mean)\n# -------------------------------------------------------------------------\n\n## fit proportional means model with death = 2 x hosp\nobj_ML &lt;- CompoML(hfaction$patid, hfaction$time, hfaction$status, \n                  hfaction$trt_ab, w = c(2, 1))\n#&gt; This model weights death as \"2\" and hospitalization as \"1\". \n#&gt; CompoML fits a marginal proportional means model for these outcomes.\n\n## summary results\nobj_ML\n#&gt; Provides estimates of the weighted event rates in each arm, etc.\n\n## plot model-based mean functions\nplot(obj_ML, 0, ylim= c(0, 5), xlim= c(0, 4), xlab=\"Time (years)\", \n     col = \"red\", lwd = 2)\nplot(obj_ML, 1, add = TRUE, col = \"blue\", lwd=2)\nlegend(0, 5, col = c(\"red\", \"blue\"), c(\"Usual care\",\"Training\"), lwd = 2)\n#&gt; Illustrates the cumulative mean count of \"weighted\" events over time",
    "crumbs": [
      "Home",
      "Section 1. Introduction"
    ]
  },
  {
    "objectID": "intro.html#slides",
    "href": "intro.html#slides",
    "title": "Section 1. Introduction",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)",
    "crumbs": [
      "Home",
      "Section 1. Introduction"
    ]
  },
  {
    "objectID": "intro.html#r-code",
    "href": "intro.html#r-code",
    "title": "Section 1. Introduction",
    "section": "",
    "text": "Show the code\n#################################################################\n# This code generates the numerical results in chapter 1       ##\n#################################################################\n\nlibrary(survival)  # For standard (univariate) survival analysis\nlibrary(Wcompo)    # For weighted total events (CompoML function)\nlibrary(rmt)       # For the hfaction data set (Heart Failure ACTION trial)\nlibrary(tidyverse) # For data wrangling (dplyr, ggplot2, etc.)\n\n# load hfaction data\ndata(hfaction)\nhead(hfaction) \n#&gt; Shows the first rows of the hfaction data frame\n\n# convert status=1 for death, 2=hospitalization\n# (Swapping the original coding of event types in hfaction)\nhfaction &lt;- hfaction |&gt;\n  mutate(\n    status = case_when(\n      status == 1 ~ 2, # status previously \"1\" becomes \"2\" now\n      status == 2 ~ 1, # status previously \"2\" becomes \"1\" now\n      status == 0 ~ 0  # status \"0\" remains \"0\" (censoring)\n    )\n  )\n\nhead(hfaction)\n#&gt; Check that the status values have been reassigned correctly\n\n# count unique patients in each arm\nhfaction |&gt; \n  group_by(trt_ab) |&gt;\n  distinct(patid) |&gt;\n  count(trt_ab)\n#&gt; Summarizes how many unique patients are in each treatment arm (trt_ab)\n\n# TFE: take the first event per patient id\n# This means each patient is represented by their earliest event (or censoring)\nhfaction_TFE &lt;- hfaction |&gt;\n  arrange(patid, time) |&gt;\n  group_by(patid) |&gt;\n  slice_head() |&gt;\n  ungroup()\n\n# -------------------------------------------------------------------------\n# Mortality analysis\n# -------------------------------------------------------------------------\n\n## Get mortality data\nhfaction_D &lt;- hfaction |&gt;\n  filter(status != 2) # remove hospitalization records (now coded as \"2\")\n\n## Cox model for death against trt_ab\nobj_D &lt;- coxph(Surv(time, status) ~ trt_ab, data = hfaction_D)\nsummary(obj_D)\n#&gt; n= 426, number of events= 93 \n#&gt; coef exp(coef) se(coef)      z Pr(&gt;|z|)  \n#&gt; trt_ab -0.3973    0.6721   0.2129 -1.866   0.0621 .\n# Interpretation: a hazard ratio &lt; 1 suggests lower hazard of death in the \n# training arm, though p-value is ~0.06.\n\n# -------------------------------------------------------------------------\n# TFE analysis\n# -------------------------------------------------------------------------\n\n## how many of first events are death (1) or hosp (2)\nhfaction_TFE |&gt;\n  count(status)\n#&gt; Tells how many first events were coded as status=1 or status=2\n\n# Cox model for TFE against trt_ab\n# Here \"status &gt; 0\" means any event (death or hospitalization) vs. censoring\nobj_TFE &lt;- coxph(Surv(time, status &gt; 0) ~ trt_ab, data = hfaction_TFE)\nsummary(obj_TFE)\n#&gt; Similar interpretation as above, now for time to first event \n# (either death or hospitalization).\n\n# -------------------------------------------------------------------------\n# Mortality vs TFE\n# -------------------------------------------------------------------------\n\nlibrary(ggsurvfit) # For Kaplan-Meier plots using ggplot2\nlibrary(patchwork) # For combining plots side by side\n\npD &lt;- survfit2(Surv(time, status) ~ trt_ab, data = hfaction_D) |&gt;\n  ggsurvfit(linewidth = 1) +\n  scale_ggsurvfit() +\n  scale_color_discrete(labels = c(\"Usual care\", \"Training\")) +\n  scale_x_continuous(\"Time (years)\", limits = c(0, 4)) +\n  labs(y = \"Overall survival\")\n#&gt; pD is the plot of overall survival (death only) for each arm\n\npTFE &lt;- survfit2(Surv(time, status &gt; 0) ~ trt_ab, data = hfaction_TFE) |&gt;\n  ggsurvfit(linewidth = 1) +\n  scale_ggsurvfit() +\n  scale_color_discrete(labels = c(\"Usual care\", \"Training\")) +\n  scale_x_continuous(\"Time (years)\", limits = c(0, 4)) +\n  labs(y = \"Hospitalization-free survival\")\n#&gt; pTFE is the plot for time to first event (death or hospitalization)\n\n# Combine pD and pTFE plots side by side, sharing legends\npD + pTFE + plot_layout(guides = \"collect\") & \n  theme(\n    legend.position = \"top\", \n    legend.text = element_text(size = 12)\n  )\n\n# ggsave(\"images/intro_hfaction_unis.png\", width = 8, height = 4.5)\n#&gt; Uncomment to save the plot (if needed)\n\n# -------------------------------------------------------------------------\n# Total events (proportional mean)\n# -------------------------------------------------------------------------\n\n## fit proportional means model with death = 2 x hosp\nobj_ML &lt;- CompoML(hfaction$patid, hfaction$time, hfaction$status, \n                  hfaction$trt_ab, w = c(2, 1))\n#&gt; This model weights death as \"2\" and hospitalization as \"1\". \n#&gt; CompoML fits a marginal proportional means model for these outcomes.\n\n## summary results\nobj_ML\n#&gt; Provides estimates of the weighted event rates in each arm, etc.\n\n## plot model-based mean functions\nplot(obj_ML, 0, ylim= c(0, 5), xlim= c(0, 4), xlab=\"Time (years)\", \n     col = \"red\", lwd = 2)\nplot(obj_ML, 1, add = TRUE, col = \"blue\", lwd=2)\nlegend(0, 5, col = c(\"red\", \"blue\"), c(\"Usual care\",\"Training\"), lwd = 2)\n#&gt; Illustrates the cumulative mean count of \"weighted\" events over time",
    "crumbs": [
      "Home",
      "Section 1. Introduction"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "sec1.html#outline",
    "href": "sec1.html#outline",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Outline",
    "text": "Outline\n\nExamples and regulatory guidelines\nTraditional methods\n\nTime to first event\nWeighted total events (Wcompo package)\n\nWin ratio and hierarchical endpoints\n\nThe estimand issue"
  },
  {
    "objectID": "sec1.html#time-to-event-data",
    "href": "sec1.html#time-to-event-data",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Time-to-Event Data",
    "text": "Time-to-Event Data\n\nA common type of outcome in medical and clinical studies\n\nStarting point: Randomization, diagnosis, enrollment, birth, etc.\n\nEndpoint (Event of interest): Death, disease onset, hospitalization, etc.\n\nEngineering: Failure times of machines or components (reliability)\nSocial sciences: Time to job change, dropout, or event occurrence\n\n\nRight censoring:\n\nEvent not observed within the follow-up period\nDue to study ending, dropout, or loss to follow-up\nWe only know:\n\\[\nT &gt; C\n\\] where \\(T\\) is event time and \\(C\\) is censoring time"
  },
  {
    "objectID": "sec1.html#censoring",
    "href": "sec1.html#censoring",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Censoring",
    "text": "Censoring\n\nRight censoring:\n\nEvent not observed within the follow-up period\nDue to study ending, dropout, or loss to follow-up\nWe only know:\n\\[\nT &gt; C\n\\] where ( T ) is event time and ( C ) is censoring time"
  },
  {
    "objectID": "sec1.html#follow-up-swimmer-plot",
    "href": "sec1.html#follow-up-swimmer-plot",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Follow-up (Swimmer) Plot",
    "text": "Follow-up (Swimmer) Plot\n\nA rat tumorigenicity study"
  },
  {
    "objectID": "sec1.html#basic-estimands",
    "href": "sec1.html#basic-estimands",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Basic Estimands",
    "text": "Basic Estimands\n\nSurvival function: \\(S(t) = \\Pr(T &gt; t)\\)\n\nProbability subject survives beyond time \\(t\\)\n\nHazard function:\n\\[\n\\lambda(t) = \\lim_{\\Delta t \\to 0} \\frac{\\Pr(t \\leq T &lt; t + \\Delta t \\mid T \\geq t)}{\\Delta t}\n\\]\n\nInstantaneous risk of failure at time \\(t\\)\n\nRelationship \\[\nS(t) = \\exp\\left(-\\int_0^t \\lambda(u) \\mathrm{d}u\\right)\n\\]\n\nCumulative hazard function: \\(\\Lambda(t) = \\int_0^t \\lambda(u) \\mathrm{d}u\\)"
  },
  {
    "objectID": "sec1.html#observed-censored-data",
    "href": "sec1.html#observed-censored-data",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Observed (Censored) Data",
    "text": "Observed (Censored) Data\n\nNotation: \\((X, \\delta)\\)\n\n\\(X=\\min(T, C)\\): observation time (event or censoring)\n\\(\\delta = I(T\\leq C)\\): event indicator (1 for event, 0 for censoring)\n\nData format\n\n# time = X, status = delta (tidy format)\n    id    time status\n1     1     5     1\n2     2     3     0\n3     3     8     1\n4     4     2     0\n5     5     6     1\n# Alternatively \n    id    time \n1     1     5   \n2     2     3+  \n3     3     8  \n4     4     2+  \n5     5     6"
  },
  {
    "objectID": "sec1.html#s",
    "href": "sec1.html#s",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "s",
    "text": "s"
  },
  {
    "objectID": "sec1.html#german-breast-cancer-gbc-study",
    "href": "sec1.html#german-breast-cancer-gbc-study",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "German Breast Cancer (GBC) Study",
    "text": "German Breast Cancer (GBC) Study\n\nStudy Information\n\nPopulation: 686 patients with node-positive breast cancer\n\nObjective: Assess if tamoxifen + chemo reduces mortality/relapse\n\nBaseline info: Age, tumor size, hormone levels, menopausal status, etc.\n\nFollow-up: Median 44 months\n\n171 deaths \\(\\to\\) exact times known\n\n515 censored \\(\\to\\) survival time \\(&gt;\\) censoring time\n\n\nData sets:\n\nMortality data: https://lmaowisc.github.io/tidysurv/data/gbc_mort.txt\nMortality + relapse: https://lmaowisc.github.io/tidysurv/data/gbc.txt\nDownload and save in a data folder under your root directory"
  },
  {
    "objectID": "sec1.html#data-format",
    "href": "sec1.html#data-format",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Data Format",
    "text": "Data Format\n\n# Load mortality data\ngbc_mort &lt;- read.table(\"data/gbc_mort.txt\", header = TRUE)\n# Check the first few rows of the data frame\nhead(gbc_mort)\n\n  id      time status hormone age meno size grade nodes prog estrg\n1  1 74.819672      0       1  38    1   18     3     5  141   105\n2  2 65.770492      0       1  52    1   20     1     1   78    14\n3  3 47.737705      1       1  47    1   30     2     1  422    89\n4  4  4.852459      0       1  40    1   24     1     3   25    11\n5  5 61.081967      0       2  64    2   19     2     1   19     9\n6  6 63.377049      0       2  49    2   56     1     3  356    64\n\n# The data frame 'gbc_mort' contains:\n#  time:   time (months) to death or censoring\n#  status: event indicator (1 = death, 0 = censoring)\n# hormone: Hormone therapy (1 = no, 2 = yes); age: Age at diagnosis (years);\n# meno: Menopausal status (1 = no, 2 = yes); size: Tumor size (mm); grade: Tumor grade (1–3);\n# nodes: Number of positive lymph nodes; prog: Progesterone receptor level (fmol/mg); estrg:\n# Estrogen receptor level (fmol/mg)."
  },
  {
    "objectID": "sec1.html#data-format-i",
    "href": "sec1.html#data-format-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Data Format (I)",
    "text": "Data Format (I)\n\nDeath only\n\n\n# Load mortality data\ngbc_mort &lt;- read.table(\"data/gbc_mort.txt\", header = TRUE)\n# Check the first few rows of the data frame\nhead(gbc_mort)\n\n  id      time status hormone age meno size grade nodes prog estrg\n1  1 74.819672      0       1  38    1   18     3     5  141   105\n2  2 65.770492      0       1  52    1   20     1     1   78    14\n3  3 47.737705      1       1  47    1   30     2     1  422    89\n4  4  4.852459      0       1  40    1   24     1     3   25    11\n5  5 61.081967      0       2  64    2   19     2     1   19     9\n6  6 63.377049      0       2  49    2   56     1     3  356    64\n\n# The data frame 'gbc_mort' contains:\n#  time:   time (months) to death or censoring\n#  status: event indicator (1 = death, 0 = censoring)\n# hormone: Hormone therapy (1 = no, 2 = yes); age: Age at diagnosis (years);\n# meno: Menopausal status (1 = no, 2 = yes); size: Tumor size (mm); grade: Tumor grade (1–3);\n# nodes: Number of positive lymph nodes; prog: Progesterone receptor level (fmol/mg); estrg:\n# Estrogen receptor level (fmol/mg)."
  },
  {
    "objectID": "sec1.html#data-format-ii",
    "href": "sec1.html#data-format-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Data Format (II)",
    "text": "Data Format (II)\n\nMortality + relapse\n\n\n# Load mortality + relapse data\ngbc &lt;- read.table(\"data/gbc.txt\", header = TRUE)\n# Check the first few rows of the data frame\nhead(gbc)\n\n  id     time status hormone age meno size grade nodes prog estrg\n1  1 43.83607      1       1  38    1   18     3     5  141   105\n2  1 74.81967      0       1  38    1   18     3     5  141   105\n3  2 46.55738      1       1  52    1   20     1     1   78    14\n4  2 65.77049      0       1  52    1   20     1     1   78    14\n5  3 41.93443      1       1  47    1   30     2     1  422    89\n6  3 47.73770      2       1  47    1   30     2     1  422    89\n\n# The data frame 'gbc' contains:\n#  time:   time (months) to death, relapse, or censoring\n#  status: event indicator (1 = relapse, 2 = death, 0 = censoring)\n#  other covariates the same as in gbc_mor."
  },
  {
    "objectID": "sec1.html#analysis-goals",
    "href": "sec1.html#analysis-goals",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Analysis Goals",
    "text": "Analysis Goals\n\nDescriptive\n\nSummarize patient characteristics\nVisualize survival distributions\n\nInferential\n\nCompare survival curves (e.g., hormone therapy vs. no hormone therapy)\nAssess impact of covariates on survival (e.g., age, tumor size, etc.)\nModel competing risks (e.g., relapse vs. death)\n\nPredictive\n\nDevelop risk prediction models\nEvaluate model performance (e.g., concordance index, calibration)"
  },
  {
    "objectID": "sec1.html#survival-package-overview",
    "href": "sec1.html#survival-package-overview",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Survival Package Overview",
    "text": "Survival Package Overview\n\nKey Functions\n\nSurv(): Create survival object\nsurvfit(): Fit Kaplan-Meier survival curves\nsurvdiff(): Compare survival curves (log-rank test)\ncoxph(): Fit Cox proportional hazards regression models\nsurvreg(): Fit parametric survival regression models"
  },
  {
    "objectID": "sec1.html#kaplan-meier-survival-curves",
    "href": "sec1.html#kaplan-meier-survival-curves",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Kaplan-Meier Survival Curves",
    "text": "Kaplan-Meier Survival Curves\n\nCreate dataset for relapse-free survival\n\n\n# Sort by subject id, then time\no &lt;- order(gbc$id, gbc$time)\ngbc &lt;- gbc[o,]\n# Keep only first row per subject =&gt; first event\ndf &lt;- gbc[!duplicated(gbc$id), ]\n# Convert status &gt; 0 to 1 if it is either relapse or death\ndf$status &lt;- ifelse(df$status &gt; 0, 1, 0)\nhead(df)\n\n  id      time status hormone age meno size grade nodes prog estrg\n1  1 43.836066      1       1  38    1   18     3     5  141   105\n3  2 46.557377      1       1  52    1   20     1     1   78    14\n5  3 41.934426      1       1  47    1   30     2     1  422    89\n7  4  4.852459      0       1  40    1   24     1     3   25    11\n8  5 61.081967      0       2  64    2   19     2     1   19     9\n9  6 63.377049      0       2  49    2   56     1     3  356    64"
  },
  {
    "objectID": "sec1.html#kaplan-meier-curves",
    "href": "sec1.html#kaplan-meier-curves",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Kaplan-Meier Curves",
    "text": "Kaplan-Meier Curves\n\nFit Kaplan-Meier survival curves\n\n\nlibrary(survival) \n# Fit KM curves by hormone treatment group\nkm_fit &lt;- survfit(Surv(time, status) ~ hormone, data = df)\nkm_fit\n\nCall: survfit(formula = Surv(time, status) ~ hormone, data = df)\n\n            n events median 0.95LCL 0.95UCL\nhormone=1 440    205   50.1    42.5    59.5\nhormone=2 246     94   66.2    62.9      NA\n\n\n- **Summarize**\n\nsummary(km_fit, times = c(6, 12, 18, 24))\n\nCall: survfit(formula = Surv(time, status) ~ hormone, data = df)\n\n                hormone=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6    419       9    0.979 0.00691        0.966        0.993\n   12    379      35    0.897 0.01476        0.868        0.926\n   18    329      43    0.794 0.01967        0.757        0.834\n   24    280      30    0.720 0.02203        0.678        0.764\n\n                hormone=2 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6    236       4    0.983 0.00826        0.967        1.000\n   12    223       8    0.950 0.01418        0.922        0.978\n   18    198      21    0.859 0.02278        0.815        0.905\n   24    177      17    0.785 0.02701        0.733        0.839"
  },
  {
    "objectID": "sec1.html#kaplan-meier-curves-i",
    "href": "sec1.html#kaplan-meier-curves-i",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Kaplan-Meier Curves (I)",
    "text": "Kaplan-Meier Curves (I)\n\nFit Kaplan-Meier survival curves\n\n\nlibrary(survival) \n# Fit KM curves by hormone treatment group\nkm_fit &lt;- survfit(Surv(time, status) ~ hormone, data = df)\nkm_fit\n\nCall: survfit(formula = Surv(time, status) ~ hormone, data = df)\n\n            n events median 0.95LCL 0.95UCL\nhormone=1 440    205   50.1    42.5    59.5\nhormone=2 246     94   66.2    62.9      NA"
  },
  {
    "objectID": "sec1.html#kaplan-meier-curves-ii",
    "href": "sec1.html#kaplan-meier-curves-ii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Kaplan-Meier Curves (II)",
    "text": "Kaplan-Meier Curves (II)\n\nSummarize survival estimates at specified time points\n\nFor example, at 6, 12, 24, and 36 months\n\n\n\nsummary(km_fit, times = c(6, 12, 24, 36))\n\nCall: survfit(formula = Surv(time, status) ~ hormone, data = df)\n\n                hormone=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6    419       9    0.979 0.00691        0.966        0.993\n   12    379      35    0.897 0.01476        0.868        0.926\n   24    280      73    0.720 0.02203        0.678        0.764\n   36    195      41    0.606 0.02475        0.559        0.656\n\n                hormone=2 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    6    236       4    0.983 0.00826        0.967        1.000\n   12    223       8    0.950 0.01418        0.922        0.978\n   24    177      38    0.785 0.02701        0.733        0.839\n   36    136      16    0.708 0.03047        0.650        0.770"
  },
  {
    "objectID": "sec1.html#kaplan-meier-curves-iii",
    "href": "sec1.html#kaplan-meier-curves-iii",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Kaplan-Meier Curves (III)",
    "text": "Kaplan-Meier Curves (III)\n\nPlot Kaplan-Meier survival curves by group\n\n\nplot(km_fit, ylim = c(0,1), xlab = \"Time (months)\", ylab = \"Tumor-free probabilities\",\n     col=c(\"red\", \"blue\"), conf.int= TRUE)"
  },
  {
    "objectID": "sec1.html#log-rank-test",
    "href": "sec1.html#log-rank-test",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Log-Rank Test",
    "text": "Log-Rank Test\n\nCompare survival curves between groups\n\n\nsurvdiff(Surv(time, status) ~ hormone, data = df)\n\nCall:\nsurvdiff(formula = Surv(time, status) ~ hormone, data = df)\n\n            N Observed Expected (O-E)^2/E (O-E)^2/V\nhormone=1 440      205      180      3.37      8.56\nhormone=2 246       94      119      5.12      8.56\n\n Chisq= 8.6  on 1 degrees of freedom, p= 0.003"
  },
  {
    "objectID": "sec1.html#key-takeaways",
    "href": "sec1.html#key-takeaways",
    "title": "Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nSurvival analysis is essential for time-to-event data in medical research\nKey concepts: survival function, hazard function, censoring\nData format: time and event indicator\nStandard analysis tools: survival package in R\nKaplan-Meier curves and log-rank tests for group comparisons"
  }
]