[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to the workshop",
    "section": "",
    "text": "This site presents materials for the short course Tidy Survival Analysis: Applying R’s Tidyverse to Survival Data to be taught at the 2025 Joint Statistical Meetings (JSM) in Nashville, TN.\nThis course aims to equip participants with the skills to apply tidy principles to survival analysis, fostering a more organized and reproducible approach to data analysis in R.\nTarget Audience: Statisticians, data analysts, researchers, and students interested in survival analysis who are familiar with R and the Tidyverse."
  },
  {
    "objectID": "index.html#time-and-place",
    "href": "index.html#time-and-place",
    "title": "Welcome to the workshop",
    "section": "Time and Place",
    "text": "Time and Place\n\nSunday, Aug 3: 8:30 AM - 12:30 PM\nMusic City Center | Room: CC-110A"
  },
  {
    "objectID": "index.html#instructor-profile",
    "href": "index.html#instructor-profile",
    "title": "Welcome to the workshop",
    "section": "Instructor Profile",
    "text": "Instructor Profile\n\nLu Mao, PhD\n\nAssociate Professor of Biostatistics at UW-Madison\nMethodologic research\n\nR01HL149875: Novel Statistical Methods for Complex Time-to-Event Data in Cardiovascular Clinical Trials (12/01/2019 – 07/31/2028)\nDMS2015526: Randomized Trials with Non-Compliance (07/01/2020 – 06/30/2024)\n\nCollaborative research\n\nCardiovascular disease, cancer, radiology, behavioral health interventions\n\nTeaching\n\nSurvival Analysis: Theory and Methods (UW; 2020 - 2025)\n\nEditorial service\n\nStatistical Editor, JACC Journals\nAssociate Editor, Statistics for Biopharmaceutical Research"
  },
  {
    "objectID": "index.html#learning-outcomes",
    "href": "index.html#learning-outcomes",
    "title": "Welcome to the workshop",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\n\nUnderstand the fundamentals of survival analysis, including key concepts such as censored data, survival functions, and hazard functions.\nUtilize R’s Tidyverse packages to manipulate, visualize, and analyze survival data.\nFit and interpret survival models using the survival and survminer packages in conjunction with Tidyverse functions.\nCreate clear and informative visualizations of survival data, including Kaplan-Meier curves and survival distributions.\nCommunicate survival analysis results effectively using tidy principles."
  },
  {
    "objectID": "index.html#outline",
    "href": "index.html#outline",
    "title": "Welcome to the workshop",
    "section": "Outline",
    "text": "Outline\n\n1. Introduction to Survival Analysis (30 min)\n\n1.1 Key concepts: survival functions, hazard functions, and censoring\n1.2 German breast cancer study: a working example\n1.3 Overview of survival analysis with survival package\n\n2. Data Manipulation with Tidyverse (45 min)\n\n2.1 Importing and cleaning survival data\n2.2 Using dplyr for data manipulation\n2.3 Simple visualization of follow-up data with ggplot2\n\n3. Nonparametric Survival Analysis (50 min)\n\n3.1 Tabulation of summary statistics with gtsummary\n3.2 Visualing Kaplan-Meier curves with ggsurvfit (or survminer)\n3.3 Tidy analysis of competing risks using tidycmprsk\n\n4. Cox proportional hazards regression (40 min)\n\n4.1 Tabulation of regression results with gtsummary\n4.2 Model diagnostics and residual plots with survminer\n4.3 Fine-Gray model for competing risks with tidycmprsk\n\n5. Machine learning using tidymodels (50 min)\n\n5.1 Modeling basics\n5.2 Using the censored package for survival models"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Section 1. Introduction",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)\n\n\n\n\n\nShow the code\n#################################################################\n# This code generates the numerical results in chapter 1       ##\n#################################################################\n\nlibrary(survival)  # For standard (univariate) survival analysis\nlibrary(Wcompo)    # For weighted total events (CompoML function)\nlibrary(rmt)       # For the hfaction data set (Heart Failure ACTION trial)\nlibrary(tidyverse) # For data wrangling (dplyr, ggplot2, etc.)\n\n# load hfaction data\ndata(hfaction)\nhead(hfaction) \n#&gt; Shows the first rows of the hfaction data frame\n\n# convert status=1 for death, 2=hospitalization\n# (Swapping the original coding of event types in hfaction)\nhfaction &lt;- hfaction |&gt;\n  mutate(\n    status = case_when(\n      status == 1 ~ 2, # status previously \"1\" becomes \"2\" now\n      status == 2 ~ 1, # status previously \"2\" becomes \"1\" now\n      status == 0 ~ 0  # status \"0\" remains \"0\" (censoring)\n    )\n  )\n\nhead(hfaction)\n#&gt; Check that the status values have been reassigned correctly\n\n# count unique patients in each arm\nhfaction |&gt; \n  group_by(trt_ab) |&gt;\n  distinct(patid) |&gt;\n  count(trt_ab)\n#&gt; Summarizes how many unique patients are in each treatment arm (trt_ab)\n\n# TFE: take the first event per patient id\n# This means each patient is represented by their earliest event (or censoring)\nhfaction_TFE &lt;- hfaction |&gt;\n  arrange(patid, time) |&gt;\n  group_by(patid) |&gt;\n  slice_head() |&gt;\n  ungroup()\n\n# -------------------------------------------------------------------------\n# Mortality analysis\n# -------------------------------------------------------------------------\n\n## Get mortality data\nhfaction_D &lt;- hfaction |&gt;\n  filter(status != 2) # remove hospitalization records (now coded as \"2\")\n\n## Cox model for death against trt_ab\nobj_D &lt;- coxph(Surv(time, status) ~ trt_ab, data = hfaction_D)\nsummary(obj_D)\n#&gt; n= 426, number of events= 93 \n#&gt; coef exp(coef) se(coef)      z Pr(&gt;|z|)  \n#&gt; trt_ab -0.3973    0.6721   0.2129 -1.866   0.0621 .\n# Interpretation: a hazard ratio &lt; 1 suggests lower hazard of death in the \n# training arm, though p-value is ~0.06.\n\n# -------------------------------------------------------------------------\n# TFE analysis\n# -------------------------------------------------------------------------\n\n## how many of first events are death (1) or hosp (2)\nhfaction_TFE |&gt;\n  count(status)\n#&gt; Tells how many first events were coded as status=1 or status=2\n\n# Cox model for TFE against trt_ab\n# Here \"status &gt; 0\" means any event (death or hospitalization) vs. censoring\nobj_TFE &lt;- coxph(Surv(time, status &gt; 0) ~ trt_ab, data = hfaction_TFE)\nsummary(obj_TFE)\n#&gt; Similar interpretation as above, now for time to first event \n# (either death or hospitalization).\n\n# -------------------------------------------------------------------------\n# Mortality vs TFE\n# -------------------------------------------------------------------------\n\nlibrary(ggsurvfit) # For Kaplan-Meier plots using ggplot2\nlibrary(patchwork) # For combining plots side by side\n\npD &lt;- survfit2(Surv(time, status) ~ trt_ab, data = hfaction_D) |&gt;\n  ggsurvfit(linewidth = 1) +\n  scale_ggsurvfit() +\n  scale_color_discrete(labels = c(\"Usual care\", \"Training\")) +\n  scale_x_continuous(\"Time (years)\", limits = c(0, 4)) +\n  labs(y = \"Overall survival\")\n#&gt; pD is the plot of overall survival (death only) for each arm\n\npTFE &lt;- survfit2(Surv(time, status &gt; 0) ~ trt_ab, data = hfaction_TFE) |&gt;\n  ggsurvfit(linewidth = 1) +\n  scale_ggsurvfit() +\n  scale_color_discrete(labels = c(\"Usual care\", \"Training\")) +\n  scale_x_continuous(\"Time (years)\", limits = c(0, 4)) +\n  labs(y = \"Hospitalization-free survival\")\n#&gt; pTFE is the plot for time to first event (death or hospitalization)\n\n# Combine pD and pTFE plots side by side, sharing legends\npD + pTFE + plot_layout(guides = \"collect\") & \n  theme(\n    legend.position = \"top\", \n    legend.text = element_text(size = 12)\n  )\n\n# ggsave(\"images/intro_hfaction_unis.png\", width = 8, height = 4.5)\n#&gt; Uncomment to save the plot (if needed)\n\n# -------------------------------------------------------------------------\n# Total events (proportional mean)\n# -------------------------------------------------------------------------\n\n## fit proportional means model with death = 2 x hosp\nobj_ML &lt;- CompoML(hfaction$patid, hfaction$time, hfaction$status, \n                  hfaction$trt_ab, w = c(2, 1))\n#&gt; This model weights death as \"2\" and hospitalization as \"1\". \n#&gt; CompoML fits a marginal proportional means model for these outcomes.\n\n## summary results\nobj_ML\n#&gt; Provides estimates of the weighted event rates in each arm, etc.\n\n## plot model-based mean functions\nplot(obj_ML, 0, ylim= c(0, 5), xlim= c(0, 4), xlab=\"Time (years)\", \n     col = \"red\", lwd = 2)\nplot(obj_ML, 1, add = TRUE, col = \"blue\", lwd=2)\nlegend(0, 5, col = c(\"red\", \"blue\"), c(\"Usual care\",\"Training\"), lwd = 2)\n#&gt; Illustrates the cumulative mean count of \"weighted\" events over time",
    "crumbs": [
      "Home",
      "Section 1. Introduction"
    ]
  },
  {
    "objectID": "intro.html#slides",
    "href": "intro.html#slides",
    "title": "Section 1. Introduction",
    "section": "",
    "text": "Section slides here. (To convert html to pdf, press E \\(\\to\\) Print \\(\\to\\) Destination: Save to pdf)",
    "crumbs": [
      "Home",
      "Section 1. Introduction"
    ]
  },
  {
    "objectID": "intro.html#r-code",
    "href": "intro.html#r-code",
    "title": "Section 1. Introduction",
    "section": "",
    "text": "Show the code\n#################################################################\n# This code generates the numerical results in chapter 1       ##\n#################################################################\n\nlibrary(survival)  # For standard (univariate) survival analysis\nlibrary(Wcompo)    # For weighted total events (CompoML function)\nlibrary(rmt)       # For the hfaction data set (Heart Failure ACTION trial)\nlibrary(tidyverse) # For data wrangling (dplyr, ggplot2, etc.)\n\n# load hfaction data\ndata(hfaction)\nhead(hfaction) \n#&gt; Shows the first rows of the hfaction data frame\n\n# convert status=1 for death, 2=hospitalization\n# (Swapping the original coding of event types in hfaction)\nhfaction &lt;- hfaction |&gt;\n  mutate(\n    status = case_when(\n      status == 1 ~ 2, # status previously \"1\" becomes \"2\" now\n      status == 2 ~ 1, # status previously \"2\" becomes \"1\" now\n      status == 0 ~ 0  # status \"0\" remains \"0\" (censoring)\n    )\n  )\n\nhead(hfaction)\n#&gt; Check that the status values have been reassigned correctly\n\n# count unique patients in each arm\nhfaction |&gt; \n  group_by(trt_ab) |&gt;\n  distinct(patid) |&gt;\n  count(trt_ab)\n#&gt; Summarizes how many unique patients are in each treatment arm (trt_ab)\n\n# TFE: take the first event per patient id\n# This means each patient is represented by their earliest event (or censoring)\nhfaction_TFE &lt;- hfaction |&gt;\n  arrange(patid, time) |&gt;\n  group_by(patid) |&gt;\n  slice_head() |&gt;\n  ungroup()\n\n# -------------------------------------------------------------------------\n# Mortality analysis\n# -------------------------------------------------------------------------\n\n## Get mortality data\nhfaction_D &lt;- hfaction |&gt;\n  filter(status != 2) # remove hospitalization records (now coded as \"2\")\n\n## Cox model for death against trt_ab\nobj_D &lt;- coxph(Surv(time, status) ~ trt_ab, data = hfaction_D)\nsummary(obj_D)\n#&gt; n= 426, number of events= 93 \n#&gt; coef exp(coef) se(coef)      z Pr(&gt;|z|)  \n#&gt; trt_ab -0.3973    0.6721   0.2129 -1.866   0.0621 .\n# Interpretation: a hazard ratio &lt; 1 suggests lower hazard of death in the \n# training arm, though p-value is ~0.06.\n\n# -------------------------------------------------------------------------\n# TFE analysis\n# -------------------------------------------------------------------------\n\n## how many of first events are death (1) or hosp (2)\nhfaction_TFE |&gt;\n  count(status)\n#&gt; Tells how many first events were coded as status=1 or status=2\n\n# Cox model for TFE against trt_ab\n# Here \"status &gt; 0\" means any event (death or hospitalization) vs. censoring\nobj_TFE &lt;- coxph(Surv(time, status &gt; 0) ~ trt_ab, data = hfaction_TFE)\nsummary(obj_TFE)\n#&gt; Similar interpretation as above, now for time to first event \n# (either death or hospitalization).\n\n# -------------------------------------------------------------------------\n# Mortality vs TFE\n# -------------------------------------------------------------------------\n\nlibrary(ggsurvfit) # For Kaplan-Meier plots using ggplot2\nlibrary(patchwork) # For combining plots side by side\n\npD &lt;- survfit2(Surv(time, status) ~ trt_ab, data = hfaction_D) |&gt;\n  ggsurvfit(linewidth = 1) +\n  scale_ggsurvfit() +\n  scale_color_discrete(labels = c(\"Usual care\", \"Training\")) +\n  scale_x_continuous(\"Time (years)\", limits = c(0, 4)) +\n  labs(y = \"Overall survival\")\n#&gt; pD is the plot of overall survival (death only) for each arm\n\npTFE &lt;- survfit2(Surv(time, status &gt; 0) ~ trt_ab, data = hfaction_TFE) |&gt;\n  ggsurvfit(linewidth = 1) +\n  scale_ggsurvfit() +\n  scale_color_discrete(labels = c(\"Usual care\", \"Training\")) +\n  scale_x_continuous(\"Time (years)\", limits = c(0, 4)) +\n  labs(y = \"Hospitalization-free survival\")\n#&gt; pTFE is the plot for time to first event (death or hospitalization)\n\n# Combine pD and pTFE plots side by side, sharing legends\npD + pTFE + plot_layout(guides = \"collect\") & \n  theme(\n    legend.position = \"top\", \n    legend.text = element_text(size = 12)\n  )\n\n# ggsave(\"images/intro_hfaction_unis.png\", width = 8, height = 4.5)\n#&gt; Uncomment to save the plot (if needed)\n\n# -------------------------------------------------------------------------\n# Total events (proportional mean)\n# -------------------------------------------------------------------------\n\n## fit proportional means model with death = 2 x hosp\nobj_ML &lt;- CompoML(hfaction$patid, hfaction$time, hfaction$status, \n                  hfaction$trt_ab, w = c(2, 1))\n#&gt; This model weights death as \"2\" and hospitalization as \"1\". \n#&gt; CompoML fits a marginal proportional means model for these outcomes.\n\n## summary results\nobj_ML\n#&gt; Provides estimates of the weighted event rates in each arm, etc.\n\n## plot model-based mean functions\nplot(obj_ML, 0, ylim= c(0, 5), xlim= c(0, 4), xlab=\"Time (years)\", \n     col = \"red\", lwd = 2)\nplot(obj_ML, 1, add = TRUE, col = \"blue\", lwd=2)\nlegend(0, 5, col = c(\"red\", \"blue\"), c(\"Usual care\",\"Training\"), lwd = 2)\n#&gt; Illustrates the cumulative mean count of \"weighted\" events over time",
    "crumbs": [
      "Home",
      "Section 1. Introduction"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]